<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<doc>
    <assembly>
        <name>Xceed.Editors</name>
    </assembly>
    <members>
        <member name="N:Xceed.Editors">
            <summary>The Xceed.Editors namespace regroups all the classes which contain editors that can be used to edit data.</summary>
        </member>
        <member name="T:Xceed.Editors.ISupportIntegralResizing">
            <summary>Interface which indicates that the implementing control supports integral resizing.</summary>
        </member>
        <member name="M:Xceed.Editors.ISupportIntegralResizing.GetPreferredHeight(System.Int32)">
            <summary>Returns the height required to fit the maximum number of items within the specified height.</summary>
            <returns>A value representing the height required to fit the maximum number of items.</returns>
            <remarks>    If the specified height can fit 2 items and there is not     enough space to fit a 3rd one, then GetPreferredHeight will     return the height necessary to fit 2 items.</remarks>
            <param name="height">The total available height.</param>
        </member>
        <member name="M:Xceed.Editors.ISupportIntegralResizing.GetPreferredWidth(System.Int32)">
            <summary>Returns the width required to fit the maximum number of items within the specified width.</summary>
            <returns>A value representing the width required to fit the maximum number of items.</returns>
            <remarks>    If the specified width can fit 2 items and there is not     enough space to fit a 3rd one, then GetPreferredWidth will     return the width necessary to fit 2 items.</remarks>
            <param name="width">The total available width.</param>
        </member>
        <member name="P:Xceed.Editors.ISupportIntegralResizing.IntegralHeight">
            <summary>Gets or sets a boolean value indicating if the height of the control should be adjusted to completely display the last visible item in the dropdown.</summary>
            <remarks>    The IntegralHeight property can also be considered as a     "vertical resizing step ratio". For example, if set to true,     when the dropdown is vertically resized, the step will be the     height of the individual child items resulting in the last     visible item always being completely displayed. If set to     false, the height of the dropdown will be adjusted pixel by     pixel thus allow for the last visible item to be partially     displayed.</remarks>
        </member>
        <member name="P:Xceed.Editors.ISupportIntegralResizing.IntegralWidth">
            <summary>Gets or sets a boolean value indicating if the width of the control should be adjusted to completely display the visible items in the dropdown.</summary>
            <remarks>    The IntegralWidth property can also be considered as a     "horizontal resizing step ratio". For example, if set to true,     when the dropdown is horizontally resized, the step will be the     width of the individual child items resulting in the visible     items always being completely displayed. If set to false, the     width of the dropdown will be adjusted pixel by pixel thus     allow for the visibles item to be partially displayed.</remarks>
        </member>
        <member name="T:Xceed.Editors.AutoSizeMode">
            <summary>Value representing if the width and/or height of a WinButton control should be automatically adjusted to a predefined width and/or height.</summary>
        </member>
        <member name="F:Xceed.Editors.AutoSizeMode.None">
            <summary>Neither the width nor height of the WinButton control are automatically adjusted.</summary>
        </member>
        <member name="F:Xceed.Editors.AutoSizeMode.ScrollBarWidth">
            <summary>The width of the WinButton control will automatically be adjusted to correspond to the scrollbar width defined by VerticalScrollBarWidth.</summary>
        </member>
        <member name="F:Xceed.Editors.AutoSizeMode.ScrollBarHeight">
            <summary>The height of the WinButton control will automatically be adjusted to correspond to the scrollbar height defined by HorizontalScrollBarHeight.</summary>
        </member>
        <member name="F:Xceed.Editors.AutoSizeMode.ScrollBarWidthAndHeight">
            <summary>The width of the WinButton control will automatically be adjusted to correspond to the scrollbar width defined by VerticalScrollBarWidth while the height of the WinButton control will be adjusted to correspond to the scrollbar heigh defined by HorizontalScrollBarHeight.</summary>
        </member>
        <member name="T:Xceed.Editors.ButtonBackgroundImageType">
            <summary>Value indicating the WinButton's background image type.</summary>
            <remarks>    The appearance of the WinButton's background image can     change depending on the value of the UIStyle property.</remarks>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.User">
            <summary>The image specified in the BackgroundImage property will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Standard">
            <summary> A standard background image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Combo">
            <summary> The background image of a combobox's dropdown button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Close">
            <summary> The background image of a window close button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Caption">
            <summary> The background image of a caption button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Chevron">
            <summary> The background image of a chevron button will be used (transparent when idle).</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.Help">
            <summary> The background image of a help button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.SpinUp">
            <summary> The background image of a spin-up button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.SpinDown">
            <summary> The background image of a spin-down button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.SpinLeft">
            <summary> The background image of a spin-left button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.SpinRight">
            <summary> The background image of a spin-right button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonBackgroundImageType.ToolBar">
            <summary> The background image of a toolbar button will be used (transparent when idle).</summary>
        </member>
        <member name="T:Xceed.Editors.ButtonImageType">
            <summary>Value indicating the WinButton's image type.</summary>
            <remarks>    The appearance of the WinButton's image can change     depending on the value of the UIStyle property.</remarks>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.User">
            <summary>The image specified in the Image property will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.HorizontalChevron">
            <summary>The image of a horizontal chevron will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.VerticalChevron">
            <summary>The image of a vertical chevron will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Close">
            <summary>The image of a window close button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Collapse">
            <summary>The image of a collapse button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.HelpContents">
            <summary>The help contents image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Copy">
            <summary>The copy image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Current">
            <summary>The current image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Cut">
            <summary>The cut image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Delete">
            <summary>The delete image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.DiagonalPin">
            <summary>The image of a diagonal pin will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Exclamation">
            <summary>The exclamation image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Edit">
            <summary>The edit image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Error">
            <summary>The error image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Expand">
            <summary>The image of an expand button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.File">
            <summary>The file image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Find">
            <summary>The find image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.FindInFiles">
            <summary>The find-in-files image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.FullScreen">
            <summary>The full screen image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Help">
            <summary>The help image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.HorizontalPin">
            <summary>The image of a horizontal pin will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.HelpIndex">
            <summary>The help index image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Insertion">
            <summary>The insertion image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Maximize">
            <summary>The image of a window maximize button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Minimize">
            <summary>The image of a window minimize button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Minus">
            <summary>The minus image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.NewFile">
            <summary>The new file image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Check">
            <summary>The check image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.OpenFile">
            <summary>The open file image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Paste">
            <summary>The paste image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Preview">
            <summary>The preview image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Play">
            <summary>The play image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Plus">
            <summary>The plus image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Print">
            <summary>The print image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Redo">
            <summary>The redo image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Restore">
            <summary>The restore image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Save">
            <summary>The save image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.SaveAll">
            <summary>The save-all image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.ScrollRight">
            <summary>The image of a right-scroll button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.ScrollLeft">
            <summary>The image of a left-scroll button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.ScrollUp">
            <summary>The image of an up-scroll button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.ScrollDown">
            <summary>The image of a down-scroll button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Search">
            <summary>The search image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.SpinRight">
            <summary>The image of a right-spin button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.SpinLeft">
            <summary>The image of a left-spin button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.SpinUp">
            <summary>The image of an up-spin button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.SpinDown">
            <summary>The image of a down-spin button will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.Undo">
            <summary>The undo image will be used.</summary>
        </member>
        <member name="F:Xceed.Editors.ButtonImageType.VerticalPin">
            <summary>The image of a vertical pin will be used.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorErrors">
            <summary>Value representing mathematical errors that can occur in the WinCalculator control.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorErrors.Overflow">
            <summary>An overflow occurred..</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorErrors.DivisionByZero">
            <summary>A division by zero occurred.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorFunctions">
            <summary>Value representing functions of the WinCalculator control.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Clear">
            <summary>Clear function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.BackSpace">
            <summary>Backspace function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.OpenParenthesis">
            <summary>Open parenthesis..</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.CloseParenthesis">
            <summary>Close parenthesis.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.MemoryClear">
            <summary>Memory clear function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.MemoryEqual">
            <summary>Memory equal function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.MemoryAdd">
            <summary>Memory add function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.MemoryRecall">
            <summary>Memory recall function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Divide">
            <summary>Divide function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Multiply">
            <summary>Multiply function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Subtract">
            <summary>Subtract function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Add">
            <summary>Add function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Equal">
            <summary>Equal function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Decimal">
            <summary>Decimal.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.ChangeSign">
            <summary>Change sign function.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Zero">
            <summary>Zero.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.One">
            <summary>One.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Two">
            <summary>Two.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Three">
            <summary>Three.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Four">
            <summary>Four.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Five">
            <summary>Five.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Six">
            <summary>Six.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Seven">
            <summary>Seven.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Eight">
            <summary>Eight.</summary>
        </member>
        <member name="F:Xceed.Editors.CalculatorFunctions.Nine">
            <summary>Nine.</summary>
        </member>
        <member name="T:Xceed.Editors.CurrentDateChangedSource">
            <summary>Value indicating the method by which the CurrentDate has been changed.</summary>
        </member>
        <member name="F:Xceed.Editors.CurrentDateChangedSource.Keyboard">
            <summary>The CurrentDate was changed via the keyboard.</summary>
        </member>
        <member name="F:Xceed.Editors.CurrentDateChangedSource.Mouse">
            <summary>The CurrentDate was changed via the mouse.</summary>
        </member>
        <member name="F:Xceed.Editors.CurrentDateChangedSource.Code">
            <summary>The CurrentDate was changed via code.</summary>
        </member>
        <member name="T:Xceed.Editors.DayNamesMode">
            <summary>Specifies the mode used to extrapolate day names.</summary>
        </member>
        <member name="F:Xceed.Editors.DayNamesMode.Full">
            <summary>Uses System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.DayNames as the default day names.</summary>
        </member>
        <member name="F:Xceed.Editors.DayNamesMode.Abbreviated">
            <summary>Uses System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.AbbreviatedDayNames as the default day names.</summary>
        </member>
        <member name="F:Xceed.Editors.DayNamesMode.Shortest">
            <summary>Uses System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.ShortestDayNames as the default day names.</summary>
        </member>
        <member name="T:Xceed.Editors.DisplayStyle">
            <summary>Value indicating how the contents of various cell editors are displayed.</summary>
        </member>
        <member name="F:Xceed.Editors.DisplayStyle.Text">
            <summary>Only text is displayed.</summary>
        </member>
        <member name="F:Xceed.Editors.DisplayStyle.Image">
            <summary>Only an image is displayed.</summary>
        </member>
        <member name="F:Xceed.Editors.DisplayStyle.TextAndImage">
            <summary>Both an image and text are displayed.</summary>
        </member>
        <member name="T:Xceed.Editors.DropDownAnchor">
            <summary>Value representing the location of the dropdown's anchor point.</summary>
        </member>
        <member name="F:Xceed.Editors.DropDownAnchor.Right">
            <summary>The dropdown is anchored on the right.</summary>
        </member>
        <member name="F:Xceed.Editors.DropDownAnchor.Left">
            <summary>The dropdown is anchored on the left.</summary>
        </member>
        <member name="T:Xceed.Editors.DropDownDirection">
            <summary>Value indicating in which direction the control's dropdown will open.</summary>
        </member>
        <member name="F:Xceed.Editors.DropDownDirection.Automatic">
            <summary>The dropdown will open below the control if enough space is available. If there is not enough space below the control, the dropdown will open above it.</summary>
        </member>
        <member name="F:Xceed.Editors.DropDownDirection.Up">
            <summary>The dropdown will open above the control.</summary>
        </member>
        <member name="F:Xceed.Editors.DropDownDirection.Down">
            <summary>The dropdown will open below the control.</summary>
        </member>
        <member name="T:Xceed.Editors.EnhancedBorderStyle">
            <summary>Value indicating the border style of the control.</summary>
        </member>
        <member name="F:Xceed.Editors.EnhancedBorderStyle.None">
            <summary>No border.</summary>
        </member>
        <member name="F:Xceed.Editors.EnhancedBorderStyle.FixedSingle">
            <summary>A system-drawn single-line border.</summary>
        </member>
        <member name="F:Xceed.Editors.EnhancedBorderStyle.Fixed3D">
            <summary>A system-drawn 3D border.</summary>
        </member>
        <member name="F:Xceed.Editors.EnhancedBorderStyle.UIStyle">
            <summary>The border will be drawn according to the UIStyle used by the control.</summary>
        </member>
        <member name="T:Xceed.Editors.FormulaBoxPositions">
            <summary>Value representing the position of the formula box in the WinCalculator control.</summary>
        </member>
        <member name="F:Xceed.Editors.FormulaBoxPositions.Bottom">
            <summary>The formula box is located at the bottom of the WinCalculator control.</summary>
        </member>
        <member name="F:Xceed.Editors.FormulaBoxPositions.Top">
            <summary>The formula box is located at the top of the WinCalculator control.</summary>
        </member>
        <member name="T:Xceed.Editors.NumericInputModes">
            <summary>Value representing the input mode of the WinNumericTextBox control.</summary>
        </member>
        <member name="F:Xceed.Editors.NumericInputModes.FreeText">
            <summary>The WinNumericTextBox control accepts text selection and does not process formulas.</summary>
        </member>
        <member name="F:Xceed.Editors.NumericInputModes.InLineCalculator">
            <summary>The WinNumericTextBox control does not accept text selection and all keys will be forwarded to its DropDownControl (WinCalculator).</summary>
        </member>
        <member name="T:Xceed.Editors.ParsingFormat">
            <summary>Value representing the format provider(s) used for parsing a date.</summary>
        </member>
        <member name="F:Xceed.Editors.ParsingFormat.DisplayFormat">
            <summary>Parses a date according to the DisplayFormatProvider.</summary>
        </member>
        <member name="F:Xceed.Editors.ParsingFormat.EditFormat">
            <summary>Parses a date according to the EditFormatProvider.</summary>
        </member>
        <member name="T:Xceed.Editors.ScrollType">
            <summary>Value representing the type of scroll action used to scroll the WinHorizontalScrollBar and WinVerticalScrollBar controls via the ScrollType) method.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.First">
            <summary>The scroll thumb was moved to the Minimum position.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.Last">
            <summary>The scroll thumb was moved to the Maximum position.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.LargeIncrement">
            <summary>The scroll thumb moved a large distance. The user clicked the scroll bar to the right (WinHorizontalScrollBar) or below (WinVerticalScrollBar) the scroll box, or pressed the PAGE DOWN key.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.LargeDecrement">
            <summary>The scroll thumb moved a large distance. The user clicked the scroll bar to the left (WinHorizontalScrollBar) or above (WinVerticalScrollBar) the scroll thumb, or pressed the PAGE UP key.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.SmallIncrement">
            <summary>The scroll box was moved a small distance. The user clicked the right (WinHorizontalScrollBar) or bottom (WinVerticalScrollBar) scroll arrow, or pressed the DOWN ARROW key.</summary>
        </member>
        <member name="F:Xceed.Editors.ScrollType.SmallDecrement">
            <summary>The scroll box was moved a small distance. The user clicked the left (WinHorizontalScrollBar) or top (WinVerticalScrollBar) scroll arrow, or pressed the UP ARROW key.</summary>
        </member>
        <member name="T:Xceed.Editors.SelectedDateChangedSource">
            <summary>Value indicating the method by which the SelectedDate has been changed.</summary>
        </member>
        <member name="F:Xceed.Editors.SelectedDateChangedSource.Keyboard">
            <summary>The SelectedDate was changed via the keyboard.</summary>
        </member>
        <member name="F:Xceed.Editors.SelectedDateChangedSource.Mouse">
            <summary>The SelectedDate was changed via the mouse.</summary>
        </member>
        <member name="F:Xceed.Editors.SelectedDateChangedSource.Code">
            <summary>The SelectedDate was changed via code.</summary>
        </member>
        <member name="T:Xceed.Editors.WinDatePickerEditFormat">
            <summary>Value representing the format that will be used to edit Value.</summary>
        </member>
        <member name="F:Xceed.Editors.WinDatePickerEditFormat.Short">
            <summary>The current DateTimeFormatInfo.ShortDatePattern will be used to edit the date.</summary>
        </member>
        <member name="F:Xceed.Editors.WinDatePickerEditFormat.Custom">
            <summary>The EditFormatProvider will be used to edit the date.</summary>
        </member>
        <member name="T:Xceed.Editors.Margins">
            <summary>A structure representing margins.</summary>
        </member>
        <member name="M:Xceed.Editors.Margins.#ctor">
            <summary>Initializes a new instance of the Margins structure.</summary>
        </member>
        <member name="M:Xceed.Editors.Margins.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Margins structure.</summary>
            <param name="all">A value representing the width, in pixels, of the left, top, right and bottom margins.</param>
        </member>
        <member name="M:Xceed.Editors.Margins.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the Margins structure.</summary>
            <param name="left">The width, in pixels, of the left margin.</param>
            <param name="right">The width, in pixels, of the right margin.</param>
            <param name="top">The height, in pixels, of the top margin.</param>
            <param name="bottom">The height, in pixels, of the bottom margin.</param>
        </member>
        <member name="M:Xceed.Editors.Margins.Add(Xceed.Editors.Margins)">
            <summary>Adds the specified margins to the current Margins structure.</summary>
            <param name="margins">A Margins structure representing the margins to add to the current Margins structure.</param>
        </member>
        <member name="M:Xceed.Editors.Margins.Equals(System.Object)">
            <summary>Tests whether the specified object is a Margins structure and is equivalent to this Margins structure.</summary>
            <returns>true if obj is a Margins structure equivalent to the current Margins structure; false otherwise.</returns>
            <param name="obj">The object to test.</param>
        </member>
        <member name="M:Xceed.Editors.Margins.GetHashCode">
            <summary>Returns a hash code for this Margins structure.</summary>
            <returns>A value representing the hash code of the Margins structure.</returns>
        </member>
        <member name="M:Xceed.Editors.Margins.RemoveFrom(System.Drawing.Rectangle)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.Margins.RotateFlip(System.Drawing.RotateFlipType)">
            <summary>This method either rotates, flips, or rotates and flips the Margins structure.</summary>
            <param name="rotateFlipType">A RotateFlipType) value indicating the type of rotation and flip to apply to the Margins structure.</param>
        </member>
        <member name="M:Xceed.Editors.Margins.Subtract(Xceed.Editors.Margins)">
            <summary>Subtracts the specified margins from the current Margins structure.</summary>
            <param name="margins">A Margins structure representing the margins to subtract from the current Margins structure.</param>
        </member>
        <member name="P:Xceed.Editors.Margins.op_Addition">
            <summary>Adds the specified Margins structures.</summary>
            <returns>A Margins whose value is the sum of margins1 and margins2.</returns>
            <param name="margins1">The first Margins structure to add.</param>
            <param name="margins2">The second Margins structure to add.</param>
        </member>
        <member name="P:Xceed.Editors.Margins.op_Equality">
            <summary>Indicates whether two Margins instances are equal.</summary>
            <returns>true if the structures are equal; false otherwise.</returns>
            <param name="margins1">The first Margins structure to verify.</param>
            <param name="margins2">The second Margins structure to verify.</param>
        </member>
        <member name="P:Xceed.Editors.Margins.op_Inequality">
            <summary>Indicates whether two Margins instances are not equal.</summary>
            <returns>true if the structures are not equal; false otherwise.</returns>
            <param name="margins1">The first Margins structure to verify.</param>
            <param name="margins2">The second Margins structure to verify.</param>
        </member>
        <member name="P:Xceed.Editors.Margins.op_Subtraction">
            <summary>Subtracts the specified Margins structures.</summary>
            <returns>A Margins whose value is the difference between margins1 and margins2.</returns>
            <param name="margins1">The first Margins structure to subtract.</param>
            <param name="margins2">The second Margins structure to subtract.</param>
        </member>
        <member name="P:Xceed.Editors.Margins.Bottom">
            <summary>Gets or sets the height, in pixels, of the bottom margin.</summary>
        </member>
        <member name="P:Xceed.Editors.Margins.IsEmpty">
            <summary>Gets a boolean value indicating if the margins are empty.</summary>
        </member>
        <member name="P:Xceed.Editors.Margins.Left">
            <summary>Gets or sets the width, in pixels, of the left margin.</summary>
        </member>
        <member name="P:Xceed.Editors.Margins.Right">
            <summary>Gets or sets the width, in pixels, of the right margin.</summary>
        </member>
        <member name="P:Xceed.Editors.Margins.Top">
            <summary>Gets or sets the height, in pixels, of the top margin.</summary>
        </member>
        <member name="F:Xceed.Editors.Margins.Empty">
            <summary>Gets an empty Margins structure</summary>
        </member>
        <member name="T:Xceed.Editors.BorderInfo">
            <summary>Represents one of the borders surrounding the days in the calendars.</summary>
            <remarks>    The days in the calendars are surrounded by 4 borders:     left, top, right and bottom. Modifying one or more of these     borders will modify the same border in all the     calendars.</remarks>
        </member>
        <member name="M:Xceed.Editors.BorderInfo.ResetDashStyle">
            <summary>Resets the value of the DashStyle property to its default value, DefaultDashStyle.</summary>
        </member>
        <member name="M:Xceed.Editors.BorderInfo.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, DefaultForeColor.</summary>
        </member>
        <member name="P:Xceed.Editors.BorderInfo.DashStyle">
            <summary>Gets or sets the dash style of the border.</summary>
        </member>
        <member name="P:Xceed.Editors.BorderInfo.DefaultDashStyle">
            <summary>Gets the default value of the DashStyle property.</summary>
            <remarks>When overriding DefaultDashStyle in a derived class, the value returned by your implementation should not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.BorderInfo.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
            <remarks>    When overriding DefaultForeColor in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.BorderInfo.ForeColor">
            <summary>Gets or sets the foreground color of the border.</summary>
        </member>
        <member name="P:Xceed.Editors.BorderInfo.Visible">
            <summary>Gets or sets a value indicating if the border is visible.</summary>
        </member>
        <member name="T:Xceed.Editors.ButtonType">
            <summary>Represents the appearance of the WinButton control.</summary>
        </member>
        <member name="M:Xceed.Editors.ButtonType.#ctor(Xceed.Editors.ButtonBackgroundImageType,Xceed.Editors.ButtonImageType)">
            <summary>Initializes a new instance of the ButtonType class specifying the background (ButtonBackgroundImageType) and foreground (ButtonImageType) images.</summary>
            <param name="backgroundImageType">The background image that will be applied to the WinButton.</param>
            <param name="buttonImageType">The image that will be applied to the WinButton</param>
        </member>
        <member name="M:Xceed.Editors.ButtonType.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current ButtonType</summary>
            <returns>true if the specified object is equal to the current ButtonType; false otherwise.</returns>
            <param name="obj">The Object to compare with the current ButtonType.</param>
        </member>
        <member name="M:Xceed.Editors.ButtonType.GetHashCode">
            <summary>Returns a hashcode for the current ButtonType.</summary>
            <returns>A value representing the current ButtonType's hashcode.</returns>
        </member>
        <member name="P:Xceed.Editors.ButtonType.BackgroundImageType">
            <summary>Gets the background image that will be applied to the WinButton.</summary>
        </member>
        <member name="P:Xceed.Editors.ButtonType.ImageType">
            <summary>Gets the image that will be applied to the WinButton</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorButtonAppearance">
            <summary>Represents the visual appearance of a button in the WinCalculator control.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value, Color.Empty.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetBackgroundImage">
            <summary>Resets the value of the BackgroundImage property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetBackgroundImageAlignment">
            <summary>Resets the value of the BackgroundImageAlignment property to its default value, ContentAlignment.MiddelCenter.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetBackgroundImageStyle">
            <summary>Resets the value of the BackgroundImageStyle property to its default value, ImageStyle.Align.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetButtonType">
            <summary>Resets the value of the ButtonType property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetFont">
            <summary>Resets the value of the Font property to its default value, $$NULL$$.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetImage">
            <summary>Resets the value of the Image property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonAppearance.ResetImageAlign">
            <summary>Resets the value of the ImageAlign property to its default value, ContentAlignment.MiddleCenter.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.BackColor">
            <summary>Gets or sets the background color of the button.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.BackgroundImage">
            <summary>Gets or sets the button's background image.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.BackgroundImageAlignment">
            <summary>Gets or sets the alignment of the button's background image.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.BackgroundImageStyle">
            <summary>Gets or sets the style of the button's BackgroundImage.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.ButtonType">
            <summary>Gets or sets the appearance of the button.</summary>
            <remarks>    The button's appearance can change depending on the value     of the UIStyle property.                                                                              ButtonBackgroundImageType                                           User                 The image specified in the                 BackgroundImage property will be                 used.                                           Caption                                                            Chevron                                                            Close                                                            Combo                                                            Help                                                            SpinDown                                                            SpinLeft                                                            SpinRight                                                            SpinUp                                                            Standard                                                            ToolBar                                                                                               ButtonImageType                                           User                 The image specified in the Image                 property will be used.                                           Check                                                            Close                                                            Collapse                                                            Copy                                                            Current                                                            Cut                                                            Delete                                                            DiagonalPin                                                            Edit                                                            Error                                                            Exclamation                                                            Expand                                                            File                                                            Find                                                            FindInFiles                                                            FullScreen                                                            Help                                                            HelpContents                                                            HelpIndex                                                            HorizontalChevron                                                            HorizontalPin                                                            Insertion                                                            Maximize                                                            Minimize                                                            Minus                                                            NewFile                                                            OpenFile                                                            Paste                                                            Play                                                            Plus                                                            Preview                                                            Print                                                            Redo                                                            Restore                                                            Save                                                            SaveAll                                                            ScrollDown                                                            ScrollLeft                                                            ScrollRight                                                            ScrollUp                                                            Search                                                            SpinDown                                                            SpinRight                                                            SpinLeft                                                            SpinUp                                                            Undo                                                            VerticalChevron                                                            VerticalPin                                            </remarks>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.Font">
            <summary>Gets or sets the font of the button's text.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     Font property a new Font object. However, you can base the new     font on the existing font.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.ForeColor">
            <summary>Gets or sets the foreground color of the button.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.Image">
            <summary>Gets or sets the button's foreground image.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonAppearance.ImageAlign">
            <summary>Gets or sets the alignment of the button's foreground image.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorButtonStyle">
            <summary>Represents the style of a button in the WinCalculator control.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyle.ResetEnabled">
            <summary>Resets the value of the Enabled property to its default value, true.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyle.ResetInputChars">
            <summary>Resets the value of the InputChars property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyle.ResetText">
            <summary>Resets the value of the Text property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyle.ResetVisible">
            <summary>Resets the value of the Visible property to its default value, true.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyle.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current button's function.</returns>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyle.Appearance">
            <summary>Gets the button's visual appearance.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyle.Enabled">
            <summary>Gets or sets a boolean value indicating if the button is enabled.</summary>
            <remarks>    If the button is disabled, it will still be     Visible.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyle.InputChars">
            <summary>Gets or sets the characters that react as input characters for the button.</summary>
            <remarks>    An input character provides the same reaction as if the     button were pressed. For example, adding "a" to the list of     input characters for the "+" (addition) button will have the     same result as if "+" we pressed.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyle.Text">
            <summary>Gets or sets the button's text.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyle.Visible">
            <summary>Gets or sets a boolean value indicating if the button is visible.</summary>
            <remarks>    If a button's Visible property is set to false, it will     no longer be visible however the space reserved to it in the     WinCalculator will remain unoccupied.</remarks>
        </member>
        <member name="E:Xceed.Editors.CalculatorButtonStyle.EnabledChanged">
            <summary>Raised when the value of the Enabled property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.CalculatorButtonStyle.InputCharsChanged">
            <summary>Raised when the value of the InputChars property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.CalculatorButtonStyle.TextChanged">
            <summary>Raised when the value of the Text property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.CalculatorButtonStyle.VisibleChanged">
            <summary>Raised when the value of the Visible property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorButtonStyleList">
            <summary>Represents a list of CalculatorButtonStyle objects.</summary>
            <remarks>    There are 3 ways to access or modify the items of the     list: If you want all verifications to be done, use the List*     methods. To bypass the fixed size and readonly verifications,     use the Internal* methods. If you do not want to On* methods to     be called and you also want to bypass the fixed size and     readonly verifications, then use the Array* methods.     When you derive from this class you must call List* for     all typed IList implementations.</remarks>
        </member>
        <member name="M:Xceed.Editors.CalculatorButtonStyleList.OnValidate(System.Object)">
            <summary>Performs additional custom processes when validating a value.</summary>
            <param name="value">The object to validate.</param>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyleList.IsFixedSize">
            <summary>Gets a boolean value indicating whether the list has a fixed size.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyleList.IsReadOnly">
            <summary>Gets a boolean value indicating if the list is readonly.</summary>
        </member>
        <member name="P:Xceed.Editors.CalculatorButtonStyleList.Item(Xceed.Editors.CalculatorFunctions)">
            <summary>Gets the button associated with the specified CalculatorFunctions.</summary>
            <param name="function">A reference to a CalculatorButtonStyle object representing the button associated with the specified CalculatorFunctions.</param>
        </member>
        <member name="T:Xceed.Editors.CalculatorErrorEventArgs">
            <summary>Provides information on the mathematical error that occurred in the WinCalculator control.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorErrorEventArgs.#ctor(Xceed.Editors.CalculatorErrors)">
            <summary>Initializes a new instance of the CalculatorEventArgs class specifying the mathematical error that occurred.</summary>
            <param name="calculatorError">A CalculatorErrors value representing the mathematical error that occurred in the WinCalculator control.</param>
        </member>
        <member name="P:Xceed.Editors.CalculatorErrorEventArgs.Error">
            <summary>Gets the mathematical error that occurred in the WinCalculator control.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorFunctionEventArgs">
            <summary>Provides information on the calculator function that was executed.</summary>
        </member>
        <member name="M:Xceed.Editors.CalculatorFunctionEventArgs.#ctor(Xceed.Editors.CalculatorFunctions)">
            <summary>Initializes a new instance of the CalculatorFunctionEventArgs class specifying the executed CalculatorFunctions.</summary>
            <param name="function">A CalculatorFunctions value representing the function that was executed.</param>
        </member>
        <member name="P:Xceed.Editors.CalculatorFunctionEventArgs.Function">
            <summary>Gets the calculator function that was executed.</summary>
        </member>
        <member name="T:Xceed.Editors.CalendarDayUIState">
            <summary>Represents the state of a day in the WinCalendar.</summary>
            <remarks>    This class is used to determine the state of the day in     the WinCalendar overriding the PaintDayEventArgs) method or     handling the PaintDay event.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsDisabled">
            <summary>Gets a boolean value indicated if the day is disabled.</summary>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsDown">
            <summary>Gets a boolean value indicated if the mouse is pressed over the day.</summary>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsEnabled">
            <summary>Gets a boolean value indicating if the day is enabled.</summary>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsHot">
            <summary>Gets a boolean value indicating if the mouse is hovering over the day (hot).</summary>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsIdle">
            <summary>Gets a boolean value indicating if the day is idle.</summary>
            <remarks>    If IsIdle returns true, then the day is not IsDisabled,     not IsHot, not IsPreviewDay, and not IsDown.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsPreviewDay">
            <summary>Gets a boolean value indicating if the day is a preview day.</summary>
            <remarks>    A preview day is a day that appears on the currently     displayed month but that belongs either to the previous or next     months.</remarks>
        </member>
        <member name="P:Xceed.Editors.CalendarDayUIState.IsVisible">
            <summary>Gets a boolean value indicating if the day is visible.</summary>
        </member>
        <member name="T:Xceed.Editors.CurrentDateChangedEventArgs">
            <summary>Provides information on how the CurrentDate has been changed.</summary>
        </member>
        <member name="M:Xceed.Editors.CurrentDateChangedEventArgs.#ctor(Xceed.Editors.CurrentDateChangedSource)">
            <summary>Initializes a new instance of the CurrentDateChangedEventArgs class.</summary>
            <param name="changeSource">A CurrentDateChangedSource value representing the method by which the CurrentDate has been changed.</param>
        </member>
        <member name="P:Xceed.Editors.CurrentDateChangedEventArgs.ChangeSource">
            <summary>Gets a value indicating how the CurrentDate was changed.</summary>
        </member>
        <member name="T:Xceed.Editors.DatePickerTextBoxArea">
            <summary>Class which represents the inner textbox of the WinDatePicker control.</summary>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.#ctor">
            <summary>Initializes a new instance of the DatePickerTextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.#ctor">
            <summary>Initializes a new instance of the DatePickerTextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.#ctor(Xceed.Editors.DatePickerTextBoxArea)">
            <summary>Initializes a new instance of the DatePickerTextBoxArea class specifying the DatePickerTextBoxArea control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The DatePickerTextBoxArea to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.#ctor(Xceed.Editors.WinDatePicker)">
            <summary>OBSOLETE: The DatePickerTextBoxArea( WinDatePicker ) constructor is obsolete and has been replaced by the DatePickerTextBoxArea() constructor. Initializes a new instance of the DatePickerTextBoxArea class specifying the WinDatePicker to associate it to.</summary>
            <param name="winDatePicker">The WinDatePicker to associate the TextBoxArea to.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.FormatToDisplayText(System.String)">
            <summary>Returns the specified raw text formatted as it will be displayed by the WinDatePicker control.</summary>
            <returns>A string representing the text as it will be displayed by the WinDatePicker control.</returns>
            <remarks>    If an exception occurs, rawText will be returned as     is.</remarks>
            <param name="rawText">The text to format.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.IsInputChar(System.Char)">
            <summary>Determines if a character is an input character that is recognized.</summary>
            <returns>true if the character should be sent directly to the WinDatePicker and not preprocessed; false otherwise.</returns>
            <param name="charCode">The character to test.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Returns a boolean value indicating if the key(s) pressed is an input key.</summary>
            <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
            <param name="keyData">A Keys value specifying the key code and modifier of the key(s) that was pressed.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.OnRawTextChanged(System.EventArgs)">
            <summary>Raises the RawTextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.SetMaskCore(System.String)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.DatePickerTextBoxArea.ValidateTextCore(System.String,System.Boolean)">
            <summary>Validates that the specified text can be parsed into a valid DateTime value and, optionally, if it is between MinValue and MaxValue.</summary>
            <remarks>    When overriding ValidateTextCore in a derived class, if     the editText fails the validation process, an exception should     be thrown.</remarks>
            <param name="editText">The text to validate.</param>
            <param name="fullValidation">true if the editText should be validated as a valid DateTime value and if it is between MinValue and MaxValue; false to determine only if the editText is a valid DateTime value.</param>
        </member>
        <member name="P:Xceed.Editors.DatePickerTextBoxArea.AcceptsReturn">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.DatePickerTextBoxArea.Mask">
            <summary>Gets or sets the mask applied to the textbox's text.</summary>
        </member>
        <member name="P:Xceed.Editors.DatePickerTextBoxArea.Multiline">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.DatePickerTextBoxArea.RawText">
            <summary>Gets or sets the raw (non-formatted) text entered in the textbox area without the literals of the mask.</summary>
        </member>
        <member name="E:Xceed.Editors.DatePickerTextBoxArea.MultilineChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="T:Xceed.Editors.DayEventArgs">
            <summary>Provides information on a day in the WinCalendar control.</summary>
        </member>
        <member name="M:Xceed.Editors.DayEventArgs.#ctor(System.DateTime)">
            <summary>Initializes a new instance of the DayEventArgs class specifying the DateTime value of a day in the WinCalendar control.</summary>
            <param name="date">A DateTime value representing the value of a day in the WinCalendar control.</param>
        </member>
        <member name="P:Xceed.Editors.DayEventArgs.Date">
            <summary>Gets a value representing a day in the WinCalendar control.</summary>
        </member>
        <member name="T:Xceed.Editors.DayMouseEventArgs">
            <summary>Provides for the DayMouseUp, DayMouseDown, and DayMouseMove events.</summary>
            <remarks>    The DayMouseDown event occurs when the user presses the     mouse button while the pointer is over a day in the WinCalendar     control. The DayMouseUp event occurs when the user releases the     mouse button while the pointer remains over a day in the     WinCalendar control. The DayMouseMove event occurs when the     user moves the mouse pointer over a day in the WinCalendar     control. A DayMouseEventArgs specifies which mouse button is     pressed, how many times the mouse button was pressed and     released, the coordinates of the mouse, and the amount the     mouse wheel moved.</remarks>
        </member>
        <member name="M:Xceed.Editors.DayMouseEventArgs.#ctor(System.DateTime,System.Windows.Forms.MouseEventArgs)">
            <summary>Initializes a new instance of the DayMouseEventArgs class specifying the DateTime value of a day in the WinCalendar control.</summary>
            <param name="date">A DateTime value representing the value of a day in the WinCalendar control.</param>
            <param name="mouseEventArgs">The MouseEventArgs used that contains the mouse information.</param>
        </member>
        <member name="P:Xceed.Editors.DayMouseEventArgs.Date">
            <summary>Gets a value representing the day in the WinCalendar control which has the mouse.</summary>
        </member>
        <member name="T:Xceed.Editors.DayRenderStyle">
            <summary>Represents the style with which a day in the WinCalendar is painted.</summary>
        </member>
        <member name="F:Xceed.Editors.DayRenderStyle.UIState">
            <summary>The state of a day in the WinCalendar. By default, IsIdle.</summary>
        </member>
        <member name="T:Xceed.Editors.DaysBorders">
            <summary>Represents the borders surrounding the days in the WinCalendar.</summary>
            <remarks>    The days in the calendars are surrounded by 4 borders:     left, top, right and bottom. Modifying one or more of these     borders will modify the same border in all the     calendars.</remarks>
        </member>
        <member name="P:Xceed.Editors.DaysBorders.Bottom">
            <summary>Gets bottom border surrounding the days in the WinCalendar.</summary>
            <remarks>    Modifying this border will modify the same border in all     the calendars.</remarks>
        </member>
        <member name="P:Xceed.Editors.DaysBorders.Left">
            <summary>Gets left border surrounding the days in the WinCalendar.</summary>
            <remarks>    Modifying this border will modify the same border in all     the calendars.</remarks>
        </member>
        <member name="P:Xceed.Editors.DaysBorders.Right">
            <summary>Gets right border surrounding the days in the WinCalendar.</summary>
            <remarks>    Modifying this border will modify the same border in all     the calendars.</remarks>
        </member>
        <member name="P:Xceed.Editors.DaysBorders.Top">
            <summary>Gets top border surrounding the days in the WinCalendar.</summary>
            <remarks>    Modifying this border will modify the same border in all     the calendars.</remarks>
        </member>
        <member name="T:Xceed.Editors.FormatTitleButtonTextEventArgs">
            <summary>Provides information about the text to be painted in the WinCalendar control's MonthHeader's TitleButton.</summary>
        </member>
        <member name="M:Xceed.Editors.FormatTitleButtonTextEventArgs.#ctor(System.DateTime,System.String)">
            <summary>Initializes a new instance of the FormatTitleButtonTextEventArgs class specifying the date and text to paint in the TitleButton.</summary>
            <param name="date">The date from which the information is retrieved.</param>
            <param name="text">The text to paint in the TitleButton.</param>
        </member>
        <member name="P:Xceed.Editors.FormatTitleButtonTextEventArgs.Date">
            <summary>Gets the date from which the information to paint in the TitleButton is retrieved.</summary>
            <remarks>    The "day" will always be set to the first day of the     month.</remarks>
        </member>
        <member name="P:Xceed.Editors.FormatTitleButtonTextEventArgs.Text">
            <summary>Gets or sets the text to paint in the TitleButton.</summary>
        </member>
        <member name="T:Xceed.Editors.FormulaBoxAppearance">
            <summary>Represents the appearance of the textbox where the mathematical equation is displayed in the WinCalculator control.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value, SystemColors.Window.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetFont">
            <summary>Resets the value of the Font property to its default value, $$NULL$$.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, SystemColors.WindowText.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetHeight">
            <summary>Resets the value of the Height property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetHorizontalAlignment">
            <summary>Resets the value of the HorizontalAlignment property to its default value, HorizontalAlignment.Right.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetPosition">
            <summary>Resets the value of the Position property to its default value, FormulaBoxPositions.Bottom.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetVisible">
            <summary>Resets the value of the Visible property to its default value, true.</summary>
        </member>
        <member name="M:Xceed.Editors.FormulaBoxAppearance.ResetWidth">
            <summary>Resets the value of the Width property to its default value.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.BackColor">
            <summary>Gets or sets the background color of the formula box.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.Font">
            <summary>Gets or sets the font of the formula box's text.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     Font property a new Font object. However, you can base the new     font on the existing font.</remarks>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.ForeColor">
            <summary>Gets or sets the foreground color of the formula box.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.Height">
            <summary>Gets or sets the height of the formula box.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.HorizontalAlignment">
            <summary>Gets or sets the horizontal alignment of the formula box's content.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.Position">
            <summary>Gets or sets the position of the formula box.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.Visible">
            <summary>Gets or sets a boolean value indicating if the formula box is visible.</summary>
        </member>
        <member name="P:Xceed.Editors.FormulaBoxAppearance.Width">
            <summary>Gets or sets the width of the formula box.</summary>
        </member>
        <member name="T:Xceed.Editors.Licenser">
            <summary>Class which is used to license the controls in the Xceed.Editors namespace.</summary>
            <remarks>    We recommend you set the LicenseKey property in the main     entry point of the application. For example, the LicenseKey     property can be set, for C# users, in the static main function.     For VB.NET users, it can be set in the constructor of the main     form or in the "Sub Main" procedure. If no entry point is     available, it is recommended that the LicenseKey property be     set in a static constructor of a class that will be accessed     systematically before any of the library's classes are     instantiated or, you can simply set the LicenseKey property     immediately BEFORE you instantiate a class.</remarks>
        </member>
        <member name="M:Xceed.Editors.Licenser.Unlock">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.Licenser.LicenseKey">
            <summary>Gets or sets the license key used to license this product.</summary>
        </member>
        <member name="T:Xceed.Editors.MonthHeader">
            <summary>Represents the header that displays the month and year of the calendar as well as the next and previous navigation buttons.</summary>
            <remarks>    The name of the month displayed in the TitleButton     follows the system's regional settings.</remarks>
        </member>
        <member name="M:Xceed.Editors.MonthHeader.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.MonthHeader.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.MonthHeader.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Xceed.Editors.MonthHeader.Height">
            <summary>Gets or sets the height of the header.</summary>
        </member>
        <member name="P:Xceed.Editors.MonthHeader.NextButton">
            <summary>Gets the header's "next" navigation button.</summary>
        </member>
        <member name="P:Xceed.Editors.MonthHeader.PreviousButton">
            <summary>Gets the header's "previous" navigation button.</summary>
        </member>
        <member name="P:Xceed.Editors.MonthHeader.TitleButton">
            <summary>Gets the header's title button.</summary>
            <remarks>    The title button displays the name of the month and the     year and allows you to select another month.</remarks>
        </member>
        <member name="T:Xceed.Editors.NumericTextBoxArea">
            <summary>Class which represents the inner textbox of the WinNumericTextBox control.</summary>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.#ctor">
            <summary>Initializes a new instance of the NumericTextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.#ctor">
            <summary>Initializes a new instance of the NumericTextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.#ctor(Xceed.Editors.NumericTextBoxArea)">
            <summary>Initializes a new instance of the NumericTextBoxArea class specifying the NumericTextBoxArea control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The NumericTextBoxArea to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.FormatToDisplayText(System.String)">
            <summary>Returns the specified raw text formatted as it will be displayed by the WinNumericTextBox control.</summary>
            <returns>A string representing the text as it will be displayed by the WinNumericTextBox control.</returns>
            <remarks>    If an exception occurs, rawText will be returned as     is.</remarks>
            <param name="rawText">The text to format.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.IsInputChar(System.Char)">
            <summary>Determines if a character is an input character that is recognized.</summary>
            <returns>true if the character should be sent directly to the WinNumericTextBox and not preprocessed; false otherwise.</returns>
            <param name="charCode">The character to test.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Returns a boolean value indicating if the key(s) pressed is an input key.</summary>
            <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
            <param name="keyData">A Keys value specifying the key code and modifier of the key(s) that was pressed.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.OnRawTextChanged(System.EventArgs)">
            <summary>Raises the RawTextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the Validating event.</summary>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.SetMaskCore(System.String)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.NumericTextBoxArea.ValidateTextCore(System.String,System.Boolean)">
            <summary>Validates that the specified text can be parsed into a valid numerical value and, optionally, if it is between MinValue and MaxValue, and if it has a valid number of Decimals.</summary>
            <remarks>    When overriding ValidateTextCore in a derived class, if     the editText fails the validation process, an exception should     be thrown.</remarks>
            <param name="editText">The text to validate.</param>
            <param name="fullValidation">true if the editText should be validated as a valid numerical value, is between MinValue and MaxValue, and if it has a valid number of Decimals; false to determine only if the editText is a valid numerical value.</param>
        </member>
        <member name="P:Xceed.Editors.NumericTextBoxArea.AcceptsReturn">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.NumericTextBoxArea.Mask">
            <summary>Gets or sets the mask applied to the textbox's text.</summary>
        </member>
        <member name="P:Xceed.Editors.NumericTextBoxArea.MaskPromptChar">
            <summary>Gets or sets the character used to prompt a user for input.</summary>
        </member>
        <member name="P:Xceed.Editors.NumericTextBoxArea.Multiline">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.NumericTextBoxArea.RawText">
            <summary>Gets or sets the raw (non-formatted) text entered in the textbox area without the literals of the mask.</summary>
        </member>
        <member name="E:Xceed.Editors.NumericTextBoxArea.MultilineChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="T:Xceed.Editors.PaintDayEventArgs">
            <summary>Provides information on the day that is about to be painted.</summary>
        </member>
        <member name="M:Xceed.Editors.PaintDayEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>Initializes a new instance of the PaintDayEventArgs class.</summary>
            <param name="graphics">The Graphics object used to paint.</param>
            <param name="clipRectangle">A Rectangle representing the surface of the day to paint.</param>
        </member>
        <member name="F:Xceed.Editors.PaintDayEventArgs.RenderStyle">
            <summary>The style with which a day in the WinCalendar is painted.</summary>
        </member>
        <member name="F:Xceed.Editors.PaintDayEventArgs.Value">
            <summary>A DateTime value representing the date of the day being painted.</summary>
        </member>
        <member name="T:Xceed.Editors.PaintWeekDayNameEventArgs">
            <summary>Provides information on the weekday name that is about to be painted.</summary>
        </member>
        <member name="M:Xceed.Editors.PaintWeekDayNameEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>Initializes a new instance of the PaintWeekDayNameEventArgs class.</summary>
            <param name="graphics">The Graphics object used to paint.</param>
            <param name="clipRectangle">A Rectangle representing the surface of the weekday name to paint.</param>
        </member>
        <member name="F:Xceed.Editors.PaintWeekDayNameEventArgs.Name">
            <summary>A String representing the name of the weekday being painted.</summary>
        </member>
        <member name="F:Xceed.Editors.PaintWeekDayNameEventArgs.RenderStyle">
            <summary>The style with which a weekday name is painted.</summary>
        </member>
        <member name="T:Xceed.Editors.SelectedDateChangedEventArgs">
            <summary>Provides information on how the SelectedDate has been changed.</summary>
        </member>
        <member name="M:Xceed.Editors.SelectedDateChangedEventArgs.#ctor(Xceed.Editors.SelectedDateChangedSource)">
            <summary>Initializes a new instance of the SelectedDateChangedEventArgs class.</summary>
            <param name="changeSource">A SelectedDateChangedSource value representing the method by which the SelectedDate has been changed.</param>
        </member>
        <member name="P:Xceed.Editors.SelectedDateChangedEventArgs.ChangeSource">
            <summary>Gets a value indicating how the SelectedDate was changed.</summary>
        </member>
        <member name="T:Xceed.Editors.StringRenderStyle">
            <summary>Represents the style with which a string is painted.</summary>
        </member>
        <member name="F:Xceed.Editors.StringRenderStyle.BackColor">
            <summary>The background color of the used to paint the string. By default, SystemColors.Window.</summary>
        </member>
        <member name="F:Xceed.Editors.StringRenderStyle.FontStyle">
            <summary>The FontStyle used to paint the string. By default, FonStyle.Regular.</summary>
        </member>
        <member name="F:Xceed.Editors.StringRenderStyle.ForeColor">
            <summary>The foreground color of the used to paint the string. By default, SystemColors.WindowText.</summary>
        </member>
        <member name="F:Xceed.Editors.StringRenderStyle.StringFormat">
            <summary>The StringFormat used to paint the string.</summary>
        </member>
        <member name="T:Xceed.Editors.TextBoxArea">
            <summary>Class which represents the inner textbox of the WinTextBox control.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.#ctor">
            <summary>Initializes a new instance of the TextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.#ctor">
            <summary>Initializes a new instance of the TextBoxArea class.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.#ctor(Xceed.Editors.TextBoxArea)">
            <summary>Initializes a new instance of the TextBoxArea class specifying the TextBoxArea control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The TextBoxArea to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.#ctor(Xceed.Editors.WinTextBoxBase)">
            <summary>OBSOLETE: The TextBoxArea( WinTextBoxBase ) constructor is obsolete and has been replaced by the TextBoxArea() constructor. Initializes a new instance of the TextBoxArea class specifying the WinTextBoxBase to associate it to.</summary>
            <param name="winTextBoxBase">The WinTextBoxBase to associate the TextBoxArea to.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ConvertSelectionToEditText(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>Converts the selected raw text to edit text.</summary>
            <param name="rawTextSelectionStart">The index of the start of the selected raw text.</param>
            <param name="rawTextSelectionLength">The length of the raw text selection.</param>
            <param name="editTextSelectionStart">The index of the start of the selected edit text.</param>
            <param name="editTextSelectionLength">The length of the edit text selection.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ConvertSelectionToRawText(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>Converts the selected edit text to raw text.</summary>
            <param name="editTextSelectionStart">The index of the start of the selected edit text.</param>
            <param name="editTextSelectionLength">The length of the edit text selection.</param>
            <param name="rawTextSelectionStart">The index of the start of the selected raw text.</param>
            <param name="rawTextSelectionLength">The length of the raw text selection.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.CursorIsAtLeftMostPosition">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.CursorIsAtRightMostPosition">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.FormatToDisplayText(System.String)">
            <summary>Returns the specified raw text formatted as it will be displayed by the WinTextBox control.</summary>
            <returns>A string representing the text as it will be displayed by the WinTextBox control.</returns>
            <remarks>    If an exception occurs, rawText will be returned as     is.</remarks>
            <param name="rawText">The text to format.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.FormatToEditText(System.String)">
            <summary>Returns the specified raw text formatted as it will be displayed by the WinTextBox control.</summary>
            <returns>A string representing the text as it will be displayed by the WinTextBox control.</returns>
            <remarks>    If an exception occurs, rawText will be returned as     is.</remarks>
            <param name="rawText">The text to format according to the Mask.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.IsCharValid(System.Char,System.Char)">
            <summary>Verifies if a character is valid for a specific mask.</summary>
            <returns>true if is valid for the specified mask character; false otherwise.</returns>
            <remarks>When overriding MaskChars in a derived class, IsCharValid must also be overridden to return true if the inputted char is valid for the new mask character. If MaskChars is overridden to add chars to the supported mask chars, then the base implementation of IsCharValid should be called before your own. If all new chars are provided, then the base implementation does not need to be called.</remarks>
            <param name="maskChar">The character representing the mask.</param>
            <param name="charToValidate">The character to validate against the mask character.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.IsDropDownCommandKey(System.Windows.Forms.Keys)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Returns a boolean value indicating if the key(s) pressed is an input key.</summary>
            <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
            <param name="keyData">A Keys value specifying the key code and modifier of the key(s) that was pressed.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnAutoSizeChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnBackgroundImageChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnBorderStyleChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnDockChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnEnter(System.EventArgs)">
            <summary>Raises the Enter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnGotFocus(System.EventArgs)">
            <summary>Raises the GotFocus.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnHandleCreated(System.EventArgs)">
            <summary>Raises the HandleCreated event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnHideCaretChanged(System.EventArgs)">
            <summary>Raises the HideCaret event.</summary>
            <remarks>When overriding OnHideCaretChanged in a derived class, be sure to call the base class's OnHideCaretChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Raises the KeyPress event.</summary>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyUp event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnLeave(System.EventArgs)">
            <summary>Raises the Leave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnLocationChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <remarks>When overriding OnLostFocus in a derived class, be sure to call the base class's OnLostFocus method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnMaskChanged(System.EventArgs)">
            <summary>Raises the MaskChanged event.</summary>
            <remarks>When overriding OnMaskChanged in a derived class, be sure to call the base class's OnMaskChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnMaskPromptCharChanged(System.EventArgs)">
            <summary>Raises the MaskPromptCharChanged event.</summary>
            <remarks>When overriding OnMaskPromptCharChanged in a derived class, be sure to call the base class's OnMaskPromptCharChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnModifiedChanged(System.EventArgs)">
            <summary>Raises the ModifiedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnOverwriteChanged(System.EventArgs)">
            <summary>Raises the OverwriteChanged event.</summary>
            <remarks>When overriding OnOverwriteChanged in a derived class, be sure to call the base class's OnOverwriteChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnParentBackColorChanged(System.EventArgs)">
            <summary>Raises the BackColorChanged event when the BackColor property value of the control's container changes.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnRawTextChanged(System.EventArgs)">
            <summary>Raises the RawTextChanged event.</summary>
            <remarks>When overriding OnRawTextChanged in a derived class, be sure to call the base class's OnRawTextChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnResize(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnSelectOnFocusChanged(System.EventArgs)">
            <summary>Raises the SelectOnFocus event.</summary>
            <remarks>When overriding OnSelectOnFocusChanged in a derived class, be sure to call the base class's OnSelectOnFocusChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnSizeChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnStrictValidationChanged(System.EventArgs)">
            <summary>Raises the StrictValidationChanged event.</summary>
            <remarks>When overriding OnStrictValidationChanged in a derived class, be sure to call the base class's OnStrictValidationChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnTextChanged(System.EventArgs)">
            <summary>Raises the TextChanged event.</summary>
            <remarks>When overriding OnTextChanged in a derived class, be sure to call the base class's OnTextChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.OnValidating(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the Validating event.</summary>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.PaintBordersCore(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ParseFromEditText(System.String)">
            <summary>Parses the specified text and returns the unmasked version of the specified editText.</summary>
            <returns>A string representing the raw version of editText. The raw version of the editText is the editText without the mask.</returns>
            <remarks>The raw text is not guaranteed to be valid.</remarks>
            <param name="editText">The string to parse.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetCanSelect">
            <summary>Resets the value of the CanSelect property to its default value, DefaultCanSelect.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetMask">
            <summary>Resets the value of the Mask property to its default value, Empty.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetMaskPromptChar">
            <summary>Resets the value of the MaskPromptChar property to its default value, DefaultMaskPromptChar.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetOverwrite">
            <summary>Resets the value of the Overwrite property to its default value, DefaultOverwrite.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetRawText">
            <summary>Resets the value of the RawText property to its default value, Empty.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ResetText">
            <summary>Resets the value of the Text property to its default value, DefaultText.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ScrollToCaret">
            <summary>Scrolls the contents of the control to the current caret position.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.SetBackColorCore(System.Drawing.Color)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.SetMaskCore(System.String)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.SetRawTextCore(System.String)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.SetSupportsMasking(System.Boolean)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.Validate(System.String)">
            <summary>OBSOLETE: The Validate method is obsolete and has been replaced by the Boolean) method which only validates the text and no longer sets the Text property. Validates the specified text against the Mask.</summary>
            <returns>true if the text is valid for the specified Mask; false otherwise.</returns>
            <remarks>    text must be passed as though the mask were applied to     it. For example, if "&gt;@9@-9@9" is used as the mask, then     "J4L-4C3" would be valid, but "J4L4C3" would not.     If no mask is used, Validate will always return     true.</remarks>
            <param name="text">A string representing the text to validate.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ValidateText">
            <summary>Validates that the specified text can be parsed into a valid value and raises the ValidatingText event.</summary>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ValidateText(System.String,System.Boolean)">
            <summary>Validates that the specified text can be parsed into a valid value and raises the ValidatingText event.</summary>
            <remarks>    The ValidatingText event will only be raised in the case     where editText passes the predefined validation process in     Boolean).</remarks>
            <param name="editText">The text to validate.</param>
            <param name="fullValidation">true if the editText should be validated as a valid value; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ValidateText(System.String)">
            <summary>Validates the specified text against the Mask.</summary>
            <returns>true if the text is valid for the specified Mask; false otherwise.</returns>
            <remarks>    text must be passed as though the mask were applied to     it. For example, if "&gt;@9@-9@9" is used as the mask, then     "J4L-4C3" would be valid, but "J4L4C3" would not.     If no mask is used, Validate will always return     true.</remarks>
            <param name="text">A string representing the text to validate.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.ValidateTextCore(System.String,System.Boolean)">
            <summary>Validates that the specified text can be parsed into a valid value.</summary>
            <remarks>    When overriding ValidateTextCore in a derived class, if     the editText fails the validation process, an exception should     be thrown.</remarks>
            <param name="editText">The text to validate.</param>
            <param name="fullValidation">true if the editText should be validated as a valid value; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.TextBoxArea.WndProc(System.Windows.Forms.Message@)">
            <summary>Processes Windows messages.</summary>
            <param name="mesg">The Message to process.</param>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Anchor">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.AutoSize">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.BackColor">
            <summary>Gets or sets the background color of the TextBoxArea.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.BorderStyle">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.CanSelect">
            <summary>Gets or sets a boolean value indicating if the TextBoxArea can be selected.</summary>
            <remarks>    This property returns true if the control has     ControlStyles.Selectable set to true, is contained in another     control, and all its parent controls are both visible and     enabled.</remarks>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.DefaultCanSelect">
            <summary>Gets the default value of the CanSelect property.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.DefaultMask">
            <summary>Gets the default value of the Mask property.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.DefaultMaskPromptChar">
            <summary>Gets the default value of the MaskPromptChar property.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.DefaultOverwrite">
            <summary>Gets the default value of the Overwrite property.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.DefaultText">
            <summary>Gets the default value of the Text property.</summary>
            <remarks>    When overriding DefaultText in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Dock">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.HideCaret">
            <summary>Gets or sets a boolean value indicating if the caret should be hidden in the textbox.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Location">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Mask">
            <summary>Gets or sets the mask applied to the textbox's text.</summary>
            <remarks>    The casing characters (&lt; and &gt;) only affect the     characters entered by keyboard when they are the first     characters of the mask. Casing characters located anywhere else     are considered to be literals.              By default, the following mask characters are supported:                                       #                 Digits or white space                                           9                 Digits only                                           A                 Alpha-numeric values                 only                                           a                 Alpha-numeric values or white                 space                                           @                 Letters only                                           &amp;                 Any printable character (ascii                 characters from 32 to 126 and 128 to                 255)                                            The following table provides a list of characters which             are not mask characters but still affect the formatting             of the text:                                                   &gt;                     When used as the first character                     of a mask, it converts all inputted characters                     to uppercase. When used elsewhere within the                     mask, it is considered as a                     literal.                                                       &lt;                     When used as the first character                     of a mask, it converts all inputted characters                     to lowercase. When used elsewhere within the                     mask, it is considered as a                     literal.                                                       \                     The character following this                     character will always be considered as a                     literal. For example, \9 will be the 9 literal                     instead of the digits mask                     character.                              All other characters are considered as literals.                       </remarks>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.MaskChars">
            <summary>Gets an array containing the possible masking characters.</summary>
            <remarks>             The following table provides a list of the default mask         characters:                                       #                 Digits or white space                                           9                 Digits only                                           A                 Alpha-numeric values                 only                                           a                 Alpha-numeric values or white                 space                                           @                 Letters only                                           &amp;                 Any printable character (ascii                 characters from 32 to 126 and 128 to                 255)                                            The following table provides a list of characters which             are not mask characters but still affect the formatting             of the text:                                                   &gt;                     When used as the first character                     of a mask, it converts all inputted characters                     to uppercase. When used elsewhere within the                     mask, it is considered as a                     literal.                                                       &lt;                     When used as the first character                     of a mask, it converts all inputted characters                     to lowercase. When used elsewhere within the                     mask, it is considered as a                     literal.                                                       \                     The character following this                     character will always be considered as a                     literal. For example, \9 will be the 9 literal                     instead of the digits mask                     character.                              All other characters are considered as literals.                  When overriding MaskChars in a derived class,         Char) must also be overridden to return true if the         inputted char is valid for the new mask character.     </remarks>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.MaskPromptChar">
            <summary>Gets or sets the character used to prompt a user for input.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.MaxLength">
            <summary>Gets or sets the maximum length of the Text.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Modified">
            <summary>Gets or sets a boolean value indicating if the Text has been modified.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Overwrite">
            <summary>Gets or sets a boolean value indicating if existing text in the textbox area can be overwritten when keys are pressed.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.PreventModifiedAffectation">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.RawText">
            <summary>Gets or sets the raw (non-formatted) text entered in the textbox area without the literals of the mask.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.SelectOnFocus">
            <summary>Gets or sets a boolean value indicating if the entire content of the textbox should be selected when it gets focus.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Size">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.StrictValidation">
            <summary>Gets or sets a boolean value indicating whether the textbox's content should be validated while it is being entered.</summary>
            <remarks>    Setting the StrictValidation property to true only     determines if the text is validated against the Mask or not. To     provide additional validation, for example, validating against     minmum and maximum values, the ValidatingText event must be     used.</remarks>
        </member>
        <member name="P:Xceed.Editors.TextBoxArea.Text">
            <summary>Gets or sets the text associated with the textbox.</summary>
            <remarks>    If the Mask property contains info about the casing that     should be used (ie. this.Mask starts with casing characters),     affecting the Text property directly will modify the casing of     the assigned text accordingly.</remarks>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.AutoSizeChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.BackgroundImageChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.BorderStyleChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.DockChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.HideCaretChanged">
            <summary>Raised when the value of the HideCaret property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.LocationChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.MaskChanged">
            <summary>Raised when the value of the Mask property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.MaskPromptCharChanged">
            <summary>Raised when the value of the MaskPromptChar property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.ModifiedChanged">
            <summary>Raised when the value of the Modified property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.OverwriteChanged">
            <summary>Raised when the value of the Overwrite property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.RawTextChanged">
            <summary>Raised when the value of the RawText property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.Resize">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.SelectOnFocusChanged">
            <summary>Raised when the value of the SelectOnFocus property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.SizeChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.StrictValidationChanged">
            <summary>Raised when the value of the StrictValidation property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.TextBoxArea.ValidatingText">
            <summary>Raised when the Text is being validated after it has passed the basic mask validation.</summary>
        </member>
        <member name="T:Xceed.Editors.ValidatingTextEventArgs">
            <summary>Provides information on the text being validated.</summary>
        </member>
        <member name="M:Xceed.Editors.ValidatingTextEventArgs.#ctor(System.String,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the ValidatingTextEventArgs specifying the text to validated, if it should be fully or partially validated, and if it is valid.</summary>
            <param name="editText">The text to validate.</param>
            <param name="fullValidation">true if the text should be validated according to all the necessary criteria (for example, Mask, MinValue, and MaxValue); false if it should be validated only according to the Mask.</param>
            <param name="valid">true if the EditText is valid; false otherwise.</param>
        </member>
        <member name="P:Xceed.Editors.ValidatingTextEventArgs.EditText">
            <summary>Gets the text to validate.</summary>
        </member>
        <member name="P:Xceed.Editors.ValidatingTextEventArgs.FullValidation">
            <summary>Gets a boolean value indicating if the EditText should be fully or partially validated.</summary>
        </member>
        <member name="P:Xceed.Editors.ValidatingTextEventArgs.Valid">
            <summary>Gets or sets a boolean value indicating if the EditText is valid.</summary>
        </member>
        <member name="T:Xceed.Editors.WeekDayNameRenderStyle">
            <summary>Represents the style with which a weekday name in the WinCalendar is painted.</summary>
        </member>
        <member name="T:Xceed.Editors.WeekDaysHeader">
            <summary>Represents the header that displays the names of the days of the week.</summary>
            <remarks>    The names of the week days displayed in the header follow     the system's regional settings.</remarks>
        </member>
        <member name="M:Xceed.Editors.WeekDaysHeader.ResetDayNames">
            <summary>Resets the value of the DayNames property to its default value, DefaultDayNames.</summary>
        </member>
        <member name="M:Xceed.Editors.WeekDaysHeader.ResetDefaultDayNamesMode">
            <summary>Resets the value of the DefaultDayNamesMode to its default value, Full.</summary>
        </member>
        <member name="M:Xceed.Editors.WeekDaysHeader.ResetFirstDayOfWeek">
            <summary>Resets the value of the FirstDayOfWeek property to its default value, DefaultFirstDayOfWeek.</summary>
        </member>
        <member name="M:Xceed.Editors.WeekDaysHeader.ResetHeight">
            <summary>Resets the value of the Height property to its default value, DefaultHeight.</summary>
        </member>
        <member name="M:Xceed.Editors.WeekDaysHeader.ResetMaxDayNameChars">
            <summary>Resets the value of the MaxDayNameChars to its default value, 1.</summary>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.DayNames">
            <summary>Gets or sets the names of the days of the week as displayed in the header.</summary>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.DefaultDayNamesMode">
            <summary>Specifies which mode is used to extrapolate the default day names.</summary>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.FirstDayOfWeek">
            <summary>Gets the first day of the week displayed in the header.</summary>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.Font">
            <summary>Gets or sets the font of the header.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     Font property a new Font object. However, you can base the new     font on the existing font.</remarks>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.Height">
            <summary>Gets or sets the height of the header.</summary>
        </member>
        <member name="P:Xceed.Editors.WeekDaysHeader.MaxDayNameChars">
            <summary>Gets or sets the maximum number of characters used to display the names of the week days in the header.</summary>
        </member>
        <member name="T:Xceed.Editors.WinButton">
            <summary>The WinButton class represents an extensible and themable button control for Windows Forms.</summary>
            <remarks>    The WinButton class represents an extensible and themable     button control for Windows Forms which can be used as a regular     button or as a button to drop-down any type of control. It     supports both Windows XP and classic Windows themes and can     adapt to the current Windows theme. Several button types are     supported to offer a wide variety of UI behavior, including     toolbars, chevrons, etc. The WinButton control can be embedded     into other Xceed editors to create custom controls.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor">
            <summary>Initializes a new instance of the WinButton class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor">
            <summary>Initializes a new instance of the WinButton class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor(Xceed.Editors.ButtonType)">
            <summary>Initializes a new instance of the WinButton class specifying the type of button to create.</summary>
            <param name="buttonType">A ButtonType representing the type of button to create.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor(System.String)">
            <summary>Initializes a new instance of the WinButton class specifying its text.</summary>
            <param name="text">A string representing the button's Text.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.#ctor(Xceed.Editors.WinButton)">
            <summary>Initializes a new instance of the WinButton class specifying the WinButton control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinButton to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.AdjustToSystemColors">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButton.CloseDropDown">
            <summary>Closes the DropDownControl associated with the button.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.CreateDefaultDropDownControl">
            <summary>Creates the default DropDownControl.</summary>
            <returns>A Control representing the default DropDownControl.</returns>
        </member>
        <member name="M:Xceed.Editors.WinButton.Dispose">
            <summary>Releases all resources used by the button.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.Dispose(System.Boolean)">
            <summary>Releases all resources used by the button.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.NotifyDefault(System.Boolean)">
            <summary>Notifies the button whether it is the default button so that it can adjust its appearance accordingly.</summary>
            <remarks>    This method is called by the parent form to notify the     Button that it should be set as the default button and to allow     it to adjust its appearance accordingly. Typically, a button     that is the default button for a form has a thicker border than     other buttons on the form.     Calling the NotifyDefault method only draws the button as     a default button; it does not change its behavior. To make the     button behave like a default button, it must be assigned to the     AcceptButton property of the form.</remarks>
            <param name="value">true if the button is to have the appearance of the default button; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnAllowDropDownChanged(System.EventArgs)">
            <summary>Raises the AllowDropDownChanged event.</summary>
            <remarks>When overriding OnAllowDropDownChanged in a derived class, be sure to call the base class's OnAllowDropDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnAutoSizeModeChanged(System.EventArgs)">
            <summary>Raises the AutoSizeModeChanged event.</summary>
            <remarks>When overriding OnAutoSizeModeChanged in a derived class, be sure to call the base class's OnAutoSizeModeChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnBackgroundImageAlignmentChanged(System.EventArgs)">
            <summary>Raises the BackgroundImageAlignmentChanged event.</summary>
            <remarks>    When overriding OnBackgroundImageAlignmentChanged in a     derived class, be sure to call the base class's     OnBackgroundImageAlignmentChanged method so that registered     delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnBackgroundImageStyleChanged(System.EventArgs)">
            <summary>Raises the BackgroundImageStyleChanged event.</summary>
            <remarks>When overriding OnBackgroundImageStyleChanged in a derived class, be sure to call the base class's OnBackgroundImageStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnButtonTypeChanged(System.EventArgs)">
            <summary>Raises the ButtonTypeChanged event.</summary>
            <remarks>When overriding OnButtonTypeChanged in a derived class, be sure to call the base class's OnButtonTypeChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnClick(System.EventArgs)">
            <summary>Raises the Click event.</summary>
            <remarks>When overriding OnClick in a derived class, be sure to call the base class's OnClick method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDialogResultChanged(System.EventArgs)">
            <summary>Raises the DialogResultChanged event.</summary>
            <remarks>    When overriding OnDialogResultChanged in a derived class,     be sure to call the base class's OnDialogResultChanged method     so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownAllowFocusChanged(System.EventArgs)">
            <summary>Raises the DropDownAllowFocusChanged event.</summary>
            <remarks>When overriding OnDropDownAllowFocusChanged in a derived class, be sure to call the base class's OnDropDownAllowFocusChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownAnchorChanged(System.EventArgs)">
            <summary>Raises the DropDownAnchorChanged event.</summary>
            <remarks>When overriding OnDropDownAnchorChanged in a derived class, be sure to call the base class's OnDropDownAnchorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownControlChanged(System.EventArgs)">
            <summary>Raises the DropDownControlChanged event.</summary>
            <remarks>When overriding OnDropDownControlChanged in a derived class, be sure to call the base class's OnDropDownControlChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownDirectionChanged(System.EventArgs)">
            <summary>Raises the DropDownDirectionChanged event.</summary>
            <remarks>When overriding OnDropDownDirectionChanged in a derived class, be sure to call the base class's OnDropDownDirectionChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownMaxSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMaxSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownMinSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMinSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownOpening(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the DropDownOpening event.</summary>
            <remarks>When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.</remarks>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDropDownResizableChanged(System.EventArgs)">
            <summary>Raises the DropDownResizableChanged event.</summary>
            <remarks>When overriding OnDropDownResizableChanged in a derived class, be sure to call the base class's OnDropDownResizableChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnDroppedDownChanged(System.EventArgs)">
            <summary>Raises the DroppedDownChanged event.</summary>
            <remarks>When overriding OnDroppedDownChanged in a derived class, be sure to call the base class's OnDroppedDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnEnabledChanged(System.EventArgs)">
            <summary>Raises the EnabledChanged event.</summary>
            <remarks>When overriding OnEnabledChanged in a derived class, be sure to call the base class's OnEnabledChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnFlatStyleChanged(System.EventArgs)">
            <summary>Raises the FlatStyleChanged event.</summary>
            <remarks>When overriding OnFlatStyleChanged in a derived class, be sure to call the base class's OnFlatStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnGotFocus(System.EventArgs)">
            <summary>Raises the GotFocus event.</summary>
            <remarks>When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnImageAlignChanged(System.EventArgs)">
            <summary>Raises the ImageAlignChanged event.</summary>
            <remarks>When overriding OnImageAlignChanged in a derived class, be sure to call the base class's OnImageAlignChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnImageChanged(System.EventArgs)">
            <summary>Raises the ImageChanged event.</summary>
            <remarks>When overriding OnImageChanged in a derived class, be sure to call the base class's OnImageChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <remarks>When overriding OnKeyDown in a derived class, be sure to call the base class's OnKeyDown method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyUp event.</summary>
            <remarks>When overriding OnKeyUp in a derived class, be sure to call the base class's OnKeyUp method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnLocationChanged(System.EventArgs)">
            <summary>Raises the LocationChanged event.</summary>
            <remarks>When overriding OnLocationChanged in a derived class, be sure to call the base class's OnLocationChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <remarks>When overriding OnLostFocus in a derived class, be sure to call the base class's OnLostFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMarginsChanged(System.EventArgs)">
            <summary>Raises the MarginsChanged event.</summary>
            <remarks>When overriding OnMarginsChanged in a derived class, be sure to call the base class's OnMarginsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <remarks>When overriding OnMouseDown in a derived class, be sure to call the base class's OnMouseDown method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <remarks>When overriding OnMouseEnter in a derived class, be sure to call the base class's OnMouseEnter method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <remarks>When overriding OnMouseLeave in a derived class, be sure to call the base class's OnMouseLeave method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <remarks>When overriding OnMouseMove in a derived class, be sure to call the base class's OnMouseMove method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnPain in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnSizeChanged(System.EventArgs)">
            <summary>Raises the SizeChanged event.</summary>
            <remarks>When overriding OnSizeChanged in a derived class, be sure to call the base class's OnSizeChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnTextAlignChanged(System.EventArgs)">
            <summary>Raises the TextAlignChanged event.</summary>
            <remarks>When overriding OnTextAlignChanged in a derived class, be sure to call the base class's OnTextAlignChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OnVisibleChanged(System.EventArgs)">
            <summary>Raises the VisibleChanged event.</summary>
            <remarks>When overriding OnVisibleChanged in a derived class, be sure to call the base class's OnVisibleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.OpenDropDown">
            <summary>Opens the DropDownControl associated with the button.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButton.PaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the background of the button.</summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.PaintImage(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the button's Image.</summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.PaintText(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the button's Text.</summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.PerformClick">
            <summary>Performs the button's Click event and specifies if the button click should also occur graphically.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.PerformClick(System.Boolean)">
            <summary>Performs the button's Click event and specifies if the button click should also occur graphically.</summary>
            <remarks>    There will be a delay in the execution of the click event     because of the timer that is used to simulate the button being     pushed.</remarks>
            <param name="simulatePush">true if the button click should also occur graphically; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.PerformClick">
            <summary>Performs the button's Click event.</summary>
            <remarks>    Calling this overload of the PerformClick method will     not cause the button click to occur graphically.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButton.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Processes a dialog key.</summary>
            <returns>true if the key was processed by the control; false otherwise.</returns>
            <remarks>    This method is called during message preprocessing to     handle dialog characters, such as TAB, RETURN, ESCAPE, and     arrow keys. This method is called only if the Keys) method     indicates that the control is not processing the key. The     ProcessDialogKey simply sends the character to the parent's     ProcessDialogKey method, or returns false if the control has no     parent.     When overriding the ProcessDialogKey method in a derived     class, a control should return true to indicate that it has     processed the key. For keys that are not processed by the     control, the result of calling the base class's     ProcessDialogChar method should be returned.</remarks>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.ProcessMnemonic(System.Char)">
            <summary>Processes a mnemonic character.</summary>
            <returns>true if the character was processed as a mnemonic by the control; false otherwise.</returns>
            <remarks>    This method makes ensures that the control is selectable     and that the mnemonic is correct before triggering the Click     event.</remarks>
            <param name="inputChar">The character to process.</param>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetAllowDropDown">
            <summary>Resets the value of the AllowDropDown property to its default value, DefaultAllowDropDown.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetAutoSizeMode">
            <summary>Resets the value of the AutoSizeMode property to its default value, DefaultAutoSizeMode.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetButtonType">
            <summary>Resets the value of the ButtonType property to its default value, DefaultButtonType.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDock">
            <summary>Resets the value of the Dock property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownAllowFocus">
            <summary>Resets the value of the DropDownAllowFocus property to its default value, DefaultDropDownAllowFocus.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownAnchor">
            <summary>Resets the value of the DropDownAnchor property to its default value, DefaultDropDownAnchor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownControl">
            <summary>Resets the value of the DropDownControl to its default value, $$NULL$$.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownDirection">
            <summary>Resets the value of the DropDownDirection property to its default value, DefaultDropDownDirection.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownMaxSize">
            <summary>Resets the value of the DropDownMaxSize property to its default value, DefaultDropDownMaxSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownMinSize">
            <summary>Resets the value of the DropDownMinSize property to its default value, DefaultDropDownMinSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetDropDownResizable">
            <summary>Resets the value of the DropDownResizable property to its default value, DefaultDropDownResizable.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetImage">
            <summary>Resets the value of the Image property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.ResetMargins">
            <summary>Resets the value of the Margins property to its default value, DefaultMargins.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.SetDropDownControlCore(System.Windows.Forms.Control)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButton.SimulatePush">
            <summary>Simulates the graphical button click.</summary>
            <remarks>    The SimulatePush method will not cause the Click     event to be raised. If you require that the Click event be     raised, the Boolean) method should be used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButton.WndProc(System.Windows.Forms.Message@)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <param name="m">This parameter is reserved for internal use and is not intended to be used directly from your code.</param>
        </member>
        <member name="P:Xceed.Editors.WinButton.AllowDropDown">
            <summary>Gets or sets a boolean value indicating if the dropdown can be shown.</summary>
            <remarks>    Setting the AllowDropDown property to false does not     imply that the DropDownControl is $$NULL$$.     If the AllowDropDown property is set to false, an     exception will be thrown if an attempt is made to open the     dropdown programatically using the DroppedDown property or the     OpenDropDown method.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.AutoSizeMode">
            <summary>Gets or sets a value indicating if the size of the WinButton control should automatically be adjusted according to specific system defined values.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.BackgroundImageAlignment">
            <summary>Gets or sets the alignment of the button's background image.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.BackgroundImageStyle">
            <summary>Gets or sets the style of the button's background image.</summary>
            <remarks>                          Stretch             The image is stretched to fit the             available area.                               Tile             The image is repeated until the entire             available area is filled.                               Align             The image is aligned according to the             value of the BackgroundImageAlignment             property              </remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.ButtonType">
            <summary>Gets or sets the appearance of the button.</summary>
            <remarks>    The button's appearance can change depending on the value     of the UIStyle property.                                                                              ButtonBackgroundImageType                                           User                 The image specified in the                 BackgroundImage property will be                 used.                                           Caption                                                            Chevron                                                            Close                                                            Combo                                                            Help                                                            SpinDown                                                            SpinLeft                                                            SpinRight                                                            SpinUp                                                            Standard                                                            ToolBar                                                                                               ButtonImageType                                           User                 The image specified in the Image                 property will be used.                                           Check                                                            Close                                                            Collapse                                                            Copy                                                            Current                                                            Cut                                                            Delete                                                            DiagonalPin                                                            Edit                                                            Error                                                            Exclamation                                                            Expand                                                            File                                                            Find                                                            FindInFiles                                                            FullScreen                                                            Help                                                            HelpContents                                                            HelpIndex                                                            HorizontalChevron                                                            HorizontalPin                                                            Insertion                                                            Maximize                                                            Minimize                                                            Minus                                                            NewFile                                                            OpenFile                                                            Paste                                                            Play                                                            Plus                                                            Preview                                                            Print                                                            Redo                                                            Restore                                                            Save                                                            SaveAll                                                            ScrollDown                                                            ScrollLeft                                                            ScrollRight                                                            ScrollUp                                                            Search                                                            SpinDown                                                            SpinRight                                                            SpinLeft                                                            SpinUp                                                            Undo                                                            VerticalChevron                                                            VerticalPin                                            </remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultAllowDropDown">
            <summary>Gets the default value of the AllowDropDown property.</summary>
            <remarks>    When overriding DefaultAllowDropDown in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultAutoSizeMode">
            <summary>Gets the default value of the AutoSizeMode property.</summary>
            <remarks>    The AutoSizeMode property indicates if the size of the     WinButton control should automatically be adjusted according to     specific system defined values. If set to AutoSizeMode.None     (default), the size of the WinButton control will be determined     by its Width and Height properties. If set to     AutoSizeMode.ScrollBarWidth, the width will automatically be     adjusted to correspond to the scrollbar width defined by     SystemInformation.VerticalScrollBarWidth. If set to     AutoSizeMode.ScrollBarHeight, the height will automatically be     adjusted to correspond to the scrollbar height defined by     SystemInformation.HorizontalScrollBarHeight. If set to     AutoSizeMode.ScrollBarWidthAndHeight, both the width and the     height will be adjusted.     If the WinButton control is part of the SideButtons     collection of a WinTextBox (or derived) control, and is     assigned as the WinTextBox control's DropDownButton, the     default value of the AutoSizeMode property will be     AutoSizeMode.ScrollBarWidth.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultButtonType">
            <summary>Gets the default value of the ButtonType property.</summary>
            <remarks>    When overriding DefaultButtonType in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownAllowFocus">
            <summary>Gets the default value of the DropDownAllowFocus property.</summary>
            <remarks>    When overriding DefaultDropDownAllowFocus in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownAnchor">
            <summary>Gets the default value of the DropDownAnchor property.</summary>
            <remarks>    When overriding DefaultDropDownAnchor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownDirection">
            <summary>Gets the default value of the DropDownDirection property.</summary>
            <remarks>    When overriding DefaultDropDownDirection in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownMaxSize">
            <summary>Gets the default value of the DropDownMaxSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownMinSize">
            <summary>Gets the default value of the DropDownMinSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultDropDownResizable">
            <summary>Gets the default value of the DropDownResizable property.</summary>
            <remarks>    When overriding DefaultDropDownResizable in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultImage">
            <summary>Gets the default value of the Image property.</summary>
            <remarks>    When overriding DefaultImage in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultMargins">
            <summary>Gets the default value of the Margins property.</summary>
            <remarks>    When overriding DefaultMargins in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DialogResult">
            <summary>Gets or sets a value that is returned to the parent form when the button is clicked.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.Dock">
            <summary>Gets or sets which edge of the parent container a control is docked to.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownAllowFocus">
            <summary>Gets or sets a value indicating if the button's DropDownControl can receive the focus.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownAnchor">
            <summary>Gets or sets the location of the DropDownControl's anchor.</summary>
            <remarks>                          Right             The dropdown control is anchored on the             right.                               Left             The dropdown control is anchored on the             left.                   The position of the dropdown's resizing grip will be at     the opposite of the dropdown's anchor point. For example, in     the first image, the DropDownAnchor property is set to     DropDownAnchor.Left, and its resizing grip is located on the     right. In the second image, the DropDownAnchor property is set     to DropDownAnchor.Right; therefore, the resizing grip is     located on the left.     </remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownControl">
            <summary>Get or sets the control displayed in the dropdown area when DroppedDown is set to true.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownDirection">
            <summary>Gets or sets the direction in which the button's dropdown will open.</summary>
            <remarks>                          Automatic             The dropdown will open below the control             if enough space is available. If there is not enough             space below the control, the dropdown will open above             it.                               Up             The dropdown will open above the             control.                               Down             The dropdown will open below the             control.              </remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownGripLocation">
            <summary>Gets the location of the DropDownControl's resizing grip." ),</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownMaxSize">
            <summary>Gets or sets the maximum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownMinSize">
            <summary>Gets or sets the minimum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownResizable">
            <summary>Gets or sets a boolean value indicating if the DropDownControl is resizable.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.DropDownSize">
            <summary>Gets or sets the size of the dropdown.</summary>
            <remarks>    The size of the dropdown is initially determined by the     size of the control used as the DropDownControl. If the size of     the dropdown control is changed (DropDownControl.Size) while     the dropdown is open, the size of the dropdown will be     readjusted when the dropdown is reopened. If the size is     changed via the DropDownSize property, the changed will be     immediately reflected.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.DroppedDown">
            <summary>Gets or sets a value indicating whether the button is displaying its dropdown portion.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.FlatStyle">
            <summary>Gets or sets the button's flat style appearance.</summary>
            <remarks>    If the FlatStyle property is set to FlatStyle.Popup,     button will initially appear flat until the mouse pointer moves     over it. When the mouse pointer moves over the button, it     appears as a standard button until the mouse pointer is moved     off of it again.     If the FlatStyle.System is used, the appearance of the     button is determined by the operating system. If supported,     users can change the appearance of the button by adjusting the     appearance settings of their operating system.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.HasMouseDown">
            <summary>Gets a boolean value indicating the mouse is down on the button.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.HasMouseOver">
            <summary>Gets a boolean value indicating if the mouse is currently over the button.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.Image">
            <summary>Gets or sets the image that is displayed on the button.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.ImageAlign">
            <summary>Gets or sets the alignment of the button's image.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.IsDefault">
            <summary>Gets or sets a value indicating whether the button is the default button.</summary>
            <remarks>    When the IsDefault property is set to true, the button is     the default button for the Form. This means that the button is     clicked when the ENTER key is pressed if no other button or any     other control that captures the ENTER key has focus.     To specify the default button of a form, set the     AcceptButton property of the form to the desired button.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinButton.Margins">
            <summary>Gets or sets the width of the button's margins, in pixels.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.Text">
            <summary>Gets or sets the text associated with the button.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.TextAlign">
            <summary>Gets or sets the alignment of the button's text.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButton.UseMnemonic">
            <summary>Gets or sets a boolean value indicating if the button interprets an ampersand character (&amp;) in its Text property to be an access key prefix character.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.AllowDropDownChanged">
            <summary>Raised when the value of the AllowDropDown property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.AutoSizeModeChanged">
            <summary>Raised when the value of the AutoSizeMode property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.BackgroundImageAlignmentChanged">
            <summary>Raised when the value of the BackgroundImageAlignment property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.BackgroundImageStyleChanged">
            <summary>Raised when the value of the BackgroundImageStyle property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.ButtonTypeChanged">
            <summary>Raised when the value of the ButtonType property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DialogResultChanged">
            <summary>Raised when the value of the DialogResult property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownAllowFocusChanged">
            <summary>Raised when the value of the DropDownAllowFocus property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownAnchorChanged">
            <summary>Raised when the value of the DropDownAnchor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownControlChanged">
            <summary>Raised when the value of the DropDownControl property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownDirectionChanged">
            <summary>Raised when the value of the DropDownDirection property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownMaxSizeChanged">
            <summary>Raised when the value of the DropDownMaxSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownMinSizeChanged">
            <summary>Raised when the value of the DropDownMinSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownOpening">
            <summary>Raised when the DropDownControl associated with the button is opening.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DropDownResizableChanged">
            <summary>Raised when the value of the DropDownResizable property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.DroppedDownChanged">
            <summary>Raised when the value of the DroppedDown property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.FlatStyleChanged">
            <summary>Raised when the value of the FlatStyle property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.ImageAlignChanged">
            <summary>Raised when the value of the ImageAlign property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.ImageChanged">
            <summary>Raised when the value of the Image property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.MarginsChanged">
            <summary>Raised when the value of the Margins property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinButton.TextAlignChanged">
            <summary>Raised when the value of the TextAlign property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinButtonCollection">
            <summary>Contains a list of WinButton controls.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.Add(Xceed.Editors.WinButton)">
            <summary>Adds the specified WinButton to the collection.</summary>
            <returns>The index at which the button was added.</returns>
            <param name="button">A reference to the WinButton to add.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.Clear">
            <summary>Removes all the WinButtons from the collection.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.Contains(Xceed.Editors.WinButton)">
            <summary>Retrieves a boolean value indicating if the specified WinButton exists in the collection.</summary>
            <returns>true if the button exists in the collection; false otherwise.</returns>
            <param name="button">A reference to the WinButton to locate.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies the WinButton controls stored in the collection an Array, beginning at the specified index location in the array</summary>
            <param name="array">The array to copy the WinButton controls to.</param>
            <param name="index">The zero-based relative index in array where copying begins.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.GetEnumerator">
            <summary>Returns an enumerator that can iterate through the WinButtonCollection.</summary>
            <returns>An IEnumerator for the WinButtonCollection.</returns>
            <remarks>    Enumerators are intended to be used only to read data in     the collection. Enumerators cannot be used to modify the     underlying collection.     The enumerator does not have exclusive access to the     collection.     When an enumerator is created, it takes a snapshot of the     current state of the collection. If changes are made to the     collection, such as adding, modifying or deleting elements, the     snapshot gets out of sync and the enumerator throws an     InvalidOperationException. Two enumerators created from the     same collection at the same time can have different snapshots     of the collection.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.IndexOf(Xceed.Editors.WinButton)">
            <summary>Searches for the specified WinButton and returns the zero-based index of the first occurrence within the list.</summary>
            <returns>The zero-based index of the first occurrence of item within the entire list, if found; otherwise -1 is returned.</returns>
            <param name="button">A reference to the WinButton to locate.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.Insert(System.Int32,Xceed.Editors.WinButton)">
            <summary>Inserts a WinButton into the collection at the specified index.</summary>
            <param name="index">The zero-based index at which to insert the button.</param>
            <param name="button">A reference to the WinButton to insert.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.Remove(Xceed.Editors.WinButton)">
            <summary>Removes the specified WinButton from the collection.</summary>
            <param name="button">The WinButton to remove.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonCollection.RemoveAt(System.Int32)">
            <summary>Removes the WinButton from the collection at the specified index.</summary>
            <param name="index">The zero-based index at which to remove the button.</param>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.Count">
            <summary>Gets the number of WinButton controls in the collection.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.IsFixedSize">
            <summary>Gets a boolean value indicating whether the WinButtonCollection has a fixed size.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.IsReadOnly">
            <summary>Gets a boolean value indicating whether the WinButtonCollection is readonly.</summary>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.IsSynchronized">
            <summary>Gets a value indicating whether access to the collection is synchronized (thread-safe).</summary>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.Item(System.Int32)">
            <summary>Gets or sets the WinButton at the specified index.</summary>
            <param name="index">The zero-based index at which to retrieve the button.</param>
        </member>
        <member name="P:Xceed.Editors.WinButtonCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the collection.</summary>
        </member>
        <member name="T:Xceed.Editors.WinButtonContainerControl">
            <summary>The WinButtonContainerControl class represents an extensible and themable WinButton container control for Windows Forms which supports both Windows XP and classic Windows themes and can adapt to the current Windows Theme.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButtonContainerControl.OnControlAdded(System.Windows.Forms.ControlEventArgs)">
            <summary>Raises the ControlAdded event.</summary>
            <remarks>When overriding OnControlAdded in a derived class, be sure to call the base class's OnControlAdded method so that registered delegates receive the event.</remarks>
            <param name="e">A ControlEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonContainerControl.OnControlRemoved(System.Windows.Forms.ControlEventArgs)">
            <summary>Raises the ControlRemoved event.</summary>
            <remarks>When overriding OnControlRemoved in a derived class, be sure to call the base class's OnControlRemoved method so that registered delegates receive the event.</remarks>
            <param name="e">A ControlEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinButtonContainerControl.OnCreateControl">
            <summary>Raises the CreateControl event.</summary>
        </member>
        <member name="M:Xceed.Editors.WinButtonContainerControl.OnResize(System.EventArgs)">
            <summary>Raises the Resize event.</summary>
            <remarks>When overriding OnResize in a derived class, be sure to call the base class's OnResize method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.Editors.WinButtonContainerControl.SideButtons">
            <summary>Gets or sets a collection of WinButton controls which are contained within the WinButtonContainerControl control.</summary>
            <remarks>    The WinButton controls contained within the     WinButtonContainerControl can only be docked to the left or     right of the container. By default, they will be docked to the     right.     If the WinButton control is part of the SideButtons     collection of a WinTextBox (or derived) control, and is     assigned as the WinTextBox control's DropDownButton, the     default value of the AutoSizeMode property will be     AutoSizeMode.ScrollBarWidth.</remarks>
        </member>
        <member name="T:Xceed.Editors.WinCalculator">
            <summary>The WinCalculator class represents an extensible and themable calculator control for Windows Forms which supports both Windows XP and classic Windows themes and can adapt to the current Windows theme.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.#ctor">
            <summary>Initializes a new instance of the WinCalculator class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.#ctor(Xceed.Editors.WinCalculator)">
            <summary>Initializes a new instance of the WinCalculator class specifying the WinCalculator control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinCalculator to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.Dispose">
            <summary>Releases all resources used by the button.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.Dispose(System.Boolean)">
            <summary>Releases all resources used by the button.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ExecuteFunction">
            <summary>Executes the specified mathematical function.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ExecuteFunction(Xceed.Editors.CalculatorFunctions)">
            <summary>Executes the specified mathematical function.</summary>
            <remarks>    If the button associated with the function is disabled,     an InvalidOperationException will be thrown.</remarks>
            <param name="function">A CalculatorFunctions value representing the mathematical function to execute.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ExecuteFunction(Xceed.Editors.CalculatorFunctions,System.Boolean)">
            <summary>Executes the specified mathematical function indicating if the corresponding button should be flashed.</summary>
            <remarks>    If the button associated with the function is disabled,     an InvalidOperationException will be thrown.</remarks>
            <param name="function">A CalculatorFunctions value representing the mathematical function to execute.</param>
            <param name="flashButton">true if the function's corresponding button should be flashed when the specified function is executed; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ExecuteFunction(Xceed.Editors.CalculatorFunctions,System.Boolean,System.Boolean)">
            <summary>Executes the specified mathematical function indicating if the corresponding button should be flashed and the function executed even if its associated button is disabled.</summary>
            <remarks>    If the ExecuteFunction method is called with its     forceFunction parameter set to false while its associated     button is disabled, an InvalidOperationException will be     thrown.</remarks>
            <param name="function">A CalculatorFunctions value representing the mathematical function to execute.</param>
            <param name="flashButton">true if the function's corresponding button should be flashed when the specified function is executed; false otherwise.</param>
            <param name="forceFunction">true if the function should be executed even if its associated button is disabled; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetFittedHeight">
            <summary>Retrieves the fitted height of the WinCalculator control, in pixels.</summary>
            <returns>A value representing the fitted height of the WinCalculator control, in pixels.</returns>
            <remarks>    By default, the height and width of the buttons will be     resized if/when the WinCalculator is resized however;     explicitly setting the ButtonHeight and ButtonWidth properties     will prevent the height and width of the buttons from being     modified when the calculator is resized. This also implies that     the size of the WinCalculator control will not adapt to the     size defined by the ButtonHeight and ButtonWidth properties and     clipping of the buttons may occur.     The fitted width and height of the WinCalculator control     (the size necessary to correctly display all the buttons and     the formula box) can be retrieve using the GetFittedWidth and     GetFittedHeight methods and assigned to the Width and Height     properties of the WinCalculator control.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetFittedWidth">
            <summary>Retrieves the fitted width of the WinCalculator control, in pixels.</summary>
            <returns>A value representing the fitted width of the WinCalculator control, in pixels.</returns>
            <remarks>    By default, the height and width of the buttons will be     resized if/when the WinCalculator is resized however;     explicitly setting the ButtonHeight and ButtonWidth properties     will prevent the height and width of the buttons from being     modified when the calculator is resized. This also implies that     the size of the WinCalculator control will not adapt to the     size defined by the ButtonHeight and ButtonWidth properties and     clipping of the buttons may occur.     The fitted width and height of the WinCalculator control     (the size necessary to correctly display all the buttons and     the formula box) can be retrieve using the GetFittedWidth and     GetFittedHeight methods and assigned to the Width and Height     properties of the WinCalculator control.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetValue">
            <summary>Resolves the current mathematical equation and converts it to the specified Type.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetValue(System.Type)">
            <summary>Resolves the current mathematical equation and converts it to the specified Type.</summary>
            <returns>An object containing the result of the mathematical equation.</returns>
            <remarks>    Calling the GetValue method is the equivalent of pressing     the equal (=) button.</remarks>
            <param name="type">The Type to which to convert the result of the mathematical equation.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetValue(System.Type,System.IFormatProvider)">
            <summary>Resolves the current mathematical equation and converts it to the specified Type using the provided IFormatProvider.</summary>
            <returns>An object containing the result of the mathematical equation.</returns>
            <remarks>    Calling the GetValue method is the equivalent of pressing     the equal (=) button.</remarks>
            <param name="type">The Type to which to convert the result of the mathematical equation.</param>
            <param name="provider">The IFormatProvider to use to format the result of the mathematical equation.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetValue(System.Decimal@,System.Int32@)">
            <summary>Resolves the current mathematical equation and returns the significant and exponent portions of the result.</summary>
            <remarks>    Calling the GetValue method is the equivalent of pressing     the equal (=) button.</remarks>
            <param name="significant">A decimal value representing the significant portion of the result.</param>
            <param name="exponent">A integer value representing the exponent portion of the result.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.GetValue(System.Decimal@,System.Int32@,System.IFormatProvider)">
            <summary>Resolves the current mathematical equation and returns the significant and exponent portions of the result formatted using the provided IFormatProvider.</summary>
            <remarks>    Calling the GetValue method is the equivalent of pressing     the equal (=) button.</remarks>
            <param name="significant">A decimal value representing the significant portion of the result.</param>
            <param name="exponent">A integer value representing the exponent portion of the result.</param>
            <param name="provider">The IFormatProvider to use to format the result of the mathematical equation.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.InsertValue">
            <summary>Inserts a Double value at the current location into the mathematical equation.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.InsertValue(System.Double)">
            <summary>Inserts a Double value at the current location into the mathematical equation.</summary>
            <param name="d">The value to insert.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.InsertValue(System.Decimal)">
            <summary>Inserts a Decimal value at the current location into the mathematical equation.</summary>
            <param name="d">The value to insert.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.InsertValue(System.Decimal,System.Int32)">
            <summary>Inserts the significant and exponent value at the current location into the mathematical equation.</summary>
            <param name="significant">The significant portion of the value to insert.</param>
            <param name="exponent">The exponent portion of the value to insert.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.InsertValue(System.Int64)">
            <summary>Inserts a Int64 value at the current location into the mathematical equation.</summary>
            <param name="l">The value to insert.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.IsInputChar(System.Char)">
            <summary>Determines if a character is an input character that the editor recognizes.</summary>
            <returns>true if the character should be sent directly to the editor and not preprocessed; false otherwise.</returns>
            <param name="charCode">The character to test.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnButtonClicked(Xceed.Editors.CalculatorFunctionEventArgs)">
            <summary>Raises the ButtonClicked event.</summary>
            <param name="e">A CalculatorFunctionEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnButtonHeightChanged(System.EventArgs)">
            <summary>Raises the ButtonHeightChanged event.</summary>
            <remarks>When overriding OnButtonHeightChanged in a derived class, be sure to call the base class's OnButtonHeightChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnButtonWidthChanged(System.EventArgs)">
            <summary>Raises the ButtonWidthChanged event.</summary>
            <remarks>When overriding OnButtonWidthChanged in a derived class, be sure to call the base class's OnButtonWidthChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnCreateControl">
            <summary>Raises the CreateControl event.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnError(Xceed.Editors.CalculatorErrorEventArgs)">
            <summary>Raises the Error event.</summary>
            <param name="e">A CalculatorErrorEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnFormulaBoxUpdated(System.EventArgs)">
            <summary>Raises the FormulaBoxUpdated event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnFunctionExecuted(Xceed.Editors.CalculatorFunctionEventArgs)">
            <summary>Raises the FunctionExecuted event.</summary>
            <param name="e">A CalculatorFunctionEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
            <summary>Raises the KeyPress event.</summary>
            <remarks>When overriding OnKeyPress in a derived class, be sure to call the base class's OnKeyPress method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyPressEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Raises the Layout event.</summary>
            <param name="e">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the background of the WinCalculator control.</summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.OnVisibleChanged(System.EventArgs)">
            <summary>Raises the VisibleChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetBorderStyle">
            <summary>Resets the value of the BorderStyle property to its default value, DefaultBorderStyle.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetButtonHeight">
            <summary>Resets the value of the ButtonHeight property to its default value, DefaultButtonHeight.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetButtonWidth">
            <summary>Resets the value of the ButtonWidth property to its default value, DefaultButtonWidth.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetDivisionByZeroText">
            <summary>Resets the value of the DivisionByZeroText to its default value, DefaultDivisionByZeroText.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetFormatProvider">
            <summary>Resets the value of the FormatProvider property to its default value, DefaultFormatProvider.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetIntegralHeight">
            <summary>Resets the value of the IntegralHeight property to its default value, true.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetIntegralWidth">
            <summary>Resets the value of the IntegralWidth property to its default value, true.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.ResetOverflowErrorText">
            <summary>Resets the value of the OverflowErrorText property to its default value, DefaultOverflowErrorText.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>Performs the work of setting the specified bounds of this control.</summary>
            <param name="x">The new Left property value of the control.</param>
            <param name="y">The new Top property value of the control.</param>
            <param name="width">The new Width property value of the control.</param>
            <param name="height">The new Height property value of the control.</param>
            <param name="specified">A bitwise combination of the BoundsSpecified values</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetValue">
            <summary>Assigns a Double value to the WinCalculator's formula box.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetValue(System.Double)">
            <summary>Assigns a Double value to the WinCalculator's formula box.</summary>
            <remarks>    Any and all values or mathematical equations currently in     the formula box will be replaced by the new value.</remarks>
            <param name="d">The value to add.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetValue(System.Decimal)">
            <summary>Assigns a Decimal value to the WinCalculator's formula box.</summary>
            <remarks>    Any and all values or mathematical equations currently in     the formula box will be replaced by the new value.</remarks>
            <param name="d">The value to add.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetValue(System.Decimal,System.Int32)">
            <summary>Assigns the significant and exponent value of a number to the WinCalculator's formula box.</summary>
            <remarks>    Any and all values or mathematical equations currently in     the formula box will be replaced by the new value.</remarks>
            <param name="significant">The significant portion of the value to add.</param>
            <param name="exponent">The exponent portion of the value to add.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalculator.SetValue(System.Int64)">
            <summary>Assigns a Int64 value to the WinCalculator's formula box.</summary>
            <remarks>    Any and all values or mathematical equations currently in     the formula box will be replaced by the new value.</remarks>
            <param name="l">The value to add.</param>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.BorderStyle">
            <summary>Gets or sets the WinCalculator's border style.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.ButtonHeight">
            <summary>Gets or sets, in pixels, the height of the WinCalculator's buttons.</summary>
            <remarks>    Explicitly setting the ButtonHeight property will prevent     the height of the buttons from being modified when the control     is resized.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.ButtonStyles">
            <summary>Gets the styles of the buttons in the WinCalculator control.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.ButtonWidth">
            <summary>Gets or sets, in pixels, the width of the WinCalculator's buttons.</summary>
            <remarks>    Explicitly setting the ButtonWidth property will prevent     the width of the buttons from being modified when the control     is resized.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultBorderStyle">
            <summary>Gets the default value of the BorderStyle property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultButtonHeight">
            <summary>Gets the default value of the ButtonHeight property.</summary>
            <remarks>    Explicitly setting the ButtonHeight property will prevent     the height of the buttons from being modified when the control     is resized.     Overriding and returning a static value will result in     the same behavior as explicitly setting the ButtonHeight     property; preventing the height of the buttons from being     modified when the control is resized.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultButtonWidth">
            <summary>Gets the default value of the ButtonWidth property.</summary>
            <remarks>    Explicitly setting the ButtonWidth property will prevent     the width of the buttons from being modified when the control     is resized.     Overriding and returning a static value will result in     the same behavior as explicitly setting the ButtonWidth     property; preventing the width of the buttons from being     modified when the control is resized.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultDivisionByZeroText">
            <summary>Gets the default value of the DivisionByZeroText property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultFormatProvider">
            <summary>Gets the default value of the FormatProvider property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DefaultOverflowErrorText">
            <summary>Gets the default value of the OverflowErrorText property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.DivisionByZeroText">
            <summary>Gets or sets the text that is displayed in the WinCalculator's formula box when a division by zero occurs.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.FormatProvider">
            <summary>Gets or sets the custom Format Provider that will be used to format the mathematical expression in the formula box.</summary>
            <remarks>    The list of values that can be passed to the     FormatSpecifier property can be found in the "Format Specifiers     and Format Providers" topic of the .NET Framework.     To reset the value of the FormatProvider property to its     default value, DefaultFormatProvider, the ResetFormatProvider     method must be called.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.FormulaBox">
            <summary>Gets the WinCalculator's forumla box.</summary>
            <remarks>    The formula box is the textbox where the mathematical     equation is displayed.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.OverflowErrorText">
            <summary>Gets or sets the text that is displayed when the result of a mathematical equation overflows.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalculator.Text">
            <summary>Gets or sets the text displayed in the WinCalculator's formula box.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalculator.ButtonClicked">
            <summary>Raised when a button is clicked.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalculator.ButtonHeightChanged">
            <summary>Raised when the value of the ButtonHeight property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalculator.ButtonWidthChanged">
            <summary>Raised when the value of the ButtonWidth property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalculator.Error">
            <summary>Raised when a mathematical error occurs.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalculator.FunctionExecuted">
            <summary>Raised when a mathematical function is executed either through user interaction or through code set at runtime.</summary>
        </member>
        <member name="T:Xceed.Editors.WinCalendar">
            <summary>The WinCalendar class represents an extensible and themable calendar control for Windows Forms.</summary>
            <remarks>    The WinCalendar class represents an extensible and     themable calendar control for Windows Forms which can display     one or many month calendars. It supports regional settings, as     well as both the Windows XP and classic Windows themes, and can     adapt to the current regional settings and Windows theme. The     WinCalendar control can contain any of the Xceed editors as     well as any other .NET control.              The following table provides a list of the keys which can         be used to navigate within the WinCalendar control:                                       Left/Right                 The current day will be moved to the                 previous/next day.                                           Up/Down                 The current day will be moved to the                 previous/next week.                                           PageUp/PageDown                 The previous/next group of months will                 be brought into view.                                           Escape                 Cancels the navigation of the current                 day and resets it to the last selected                 day.                                           Space                 Selects the current day (which also                 becomes the SelectedDate).                           </remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor">
            <summary>Initializes a new instance of the WinCalendar class.</summary>
            <remarks>    The calendar will be created with a TodayButton and     NoneButton. To create a calendar that does not have "Today"     and/or "None" buttons, the constructor that receives 2 booleans     as parameters must be used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor(System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the WinCalendar class specifying if the calendar will contain a TodayButton and NoneButton.</summary>
            <remarks>    The buttons will be centered at the bottom of the     calendar even if there is just one of the two.</remarks>
            <param name="createTodayButton">true if the calendar will contain a TodayButton; false otherwise.</param>
            <param name="createNoneButton">true if the calendar will contain a NoneButton; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor(System.Type,System.Boolean,System.Boolean)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.#ctor(Xceed.Editors.WinCalendar)">
            <summary>Initializes a new instance of the WinCalendar class specifying the WinCalendar control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinCalendar to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.Dispose">
            <summary>Clean up any resources being used.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.Dispose(System.Boolean)">
            <summary>Clean up any resources being used.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.GetDayRectangle(System.DateTime)">
            <summary>Retrieves the rectangle of the day represented by the specified date.</summary>
            <returns>The Rectangle structure of the day represented by date.</returns>
            <param name="date">A DateTime value representing the date of day.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.GetPreferredHeight(System.Int32)">
            <summary>Returns the height required to fit the maximum number of calendar months within the specified height.</summary>
            <returns>A value representing the height required to fit the maximum number of calendar months.</returns>
            <remarks>    If the specified height can fit 2 calendar months and     there is not enough space to fit a 3rd one, then     GetPreferredHeight will return the height necessary to fit 2     calendar months.</remarks>
            <param name="height">The total available height.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.GetPreferredWidth(System.Int32)">
            <summary>Returns the width required to fit the maximum number of calendar months within the specified width.</summary>
            <returns>A value representing the width required to fit the maximum number of calendar months.</returns>
            <remarks>    If the specified width can fit 2 calendar months and     there is not enough space to fit a 3rd one, then     GetPreferredWidth will return the width necessary to fit 2     calendar months.</remarks>
            <param name="width">The total available width.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Returns a boolean value indicating if the key(s) pressed is an input key.</summary>
            <returns>true if the key(s) pressed in an input key; false otherwise.</returns>
            <param name="keyData">A Keys value specifying the key code and modifier of the key(s) that was pressed.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnBackColorChanged(System.EventArgs)">
            <summary>Raises the BackColorChanged event.</summary>
            <remarks>When overriding OnBackColorChanged in a derived class, be sure to call the base class's OnBackColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnBorderStyleChanged(System.EventArgs)">
            <summary>Raises the BorderStyleChanged event.</summary>
            <remarks>When overriding OnBorderStyleChanged in a derived class, be sure to call the base class's OnBorderStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnClick(System.EventArgs)">
            <summary>Raises the Click event.</summary>
            <remarks>When overriding OnClick in a derived class, be sure to call the base class's OnClick method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnCurrentDateChanged(Xceed.Editors.CurrentDateChangedEventArgs)">
            <summary>Raises the CurrentDateChanged event.</summary>
            <remarks>When overriding OnCurrentDateChanged in a derived class, be sure to call the base class's OnCurrentDateChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayClick(Xceed.Editors.DayEventArgs)">
            <summary>Raises the DayClick event.</summary>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayDoubleClick(Xceed.Editors.DayEventArgs)">
            <summary>Raises the DayDoubleClick event.</summary>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMarginsChanged(System.EventArgs)">
            <summary>Raises the DayMarginsChanged event.</summary>
            <remarks>When overriding OnDayMarginsChanged in a derived class, be sure to call the base class's OnDayMarginsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseDown(Xceed.Editors.DayMouseEventArgs)">
            <summary>Raises the DayMouseDown event.</summary>
            <param name="e">A DayMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseEnter(Xceed.Editors.DayEventArgs)">
            <summary>Raises the DayMouseEnter event.</summary>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseHover(Xceed.Editors.DayEventArgs)">
            <summary>Raises the DayMouseHover event.</summary>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseLeave(Xceed.Editors.DayEventArgs)">
            <summary>Raises the DayMouseLeave event.</summary>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseMove(Xceed.Editors.DayMouseEventArgs)">
            <summary>Raises the DayMouseMove event.</summary>
            <param name="e">A DayMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDayMouseUp(Xceed.Editors.DayMouseEventArgs)">
            <summary>Raises the DayMouseUp event.</summary>
            <param name="e">A DayMouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDaysBordersChanged(System.EventArgs)">
            <summary>Raises the DaysBordersChanged event.</summary>
            <remarks>When overriding OnDaysBordersChanged in a derived class, be sure to call the base class's OnDaysBordersChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnDoubleClick(System.EventArgs)">
            <summary>Raises the DoubleClick event.</summary>
            <remarks>When overriding OnDoubleClick in a derived class, be sure to call the base class's OnDoubleClick method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnEnableMultipleMonthsChanged(System.EventArgs)">
            <summary>Raises the EnableMultipleMonthsChanged event.</summary>
            <remarks>When overriding OnEnableMultipleMonthsChanged in a derived class, be sure to call the base class's OnEnableMultipleMonthsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnFirstMonthChanged(System.EventArgs)">
            <summary>Raises the FirstMonthChanged event.</summary>
            <remarks>When overriding OnFirstMonthChanged in a derived class, be sure to call the base class's OnFirstMonthChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <remarks>When overriding OnFontChanged in a derived class, be sure to call the base class's OnFontChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnFormatTitleButtonText(Xceed.Editors.FormatTitleButtonTextEventArgs)">
            <summary>Raises the FormatTitleButtonText event.</summary>
            <remarks>When overriding OnFormatTitleButtonText in a derived class, be sure to call the base class's OnFormatTitleButtonText method so that registered delegates receive the event.</remarks>
            <param name="e">A FormatTitleButtonTextEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnGotFocus(System.EventArgs)">
            <summary>Raises the GotFocus event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnHandleCreated(System.EventArgs)">
            <summary>Raises the HandleCreated event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnHighlightTodayChanged(System.EventArgs)">
            <summary>Raises the HighlightTodayChanged event.</summary>
            <remarks>When overriding OnHighlightTodayChanged in a derived class, be sure to call the base class's OnHighlightTodayChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnHorizontalSpacingChanged(System.EventArgs)">
            <summary>Raises the HorizontalSpacingChanged event.</summary>
            <remarks>When overriding OnHorizontalSpacingChanged in a derived class, be sure to call the base class's OnHorizontalSpacingChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnHotBackColorChanged(System.EventArgs)">
            <summary>Raises the HotBackColorChanged event.</summary>
            <remarks>When overriding OnHotBackColorChanged in a derived class, be sure to call the base class's OnHotBackColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnHotForeColorChanged(System.EventArgs)">
            <summary>Raises the HotForeColorChanged event.</summary>
            <remarks>When overriding OnHotForeColorChanged in a derived class, be sure to call the base class's OnHotForeColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnIntegralHeightChanged(System.EventArgs)">
            <summary>Raises the IntegralHeightChanged event.</summary>
            <remarks>When overriding OnIntegralHeightChanged in a derived class, be sure to call the base class's OnIntegralHeightChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnIntegralWidthChanged(System.EventArgs)">
            <summary>Raises the IntegralWidthChanged event.</summary>
            <remarks>When overriding OnIntegralWidthChanged in a derived class, be sure to call the base class's OnIntegralWidthChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <remarks>When overriding OnKeyDown in a derived class, be sure to call the base class's OnKeyDown method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>Raises the Layout event.</summary>
            <param name="levent">A LayoutEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMarginsChanged(System.EventArgs)">
            <summary>Raises the MarginsChanged event.</summary>
            <remarks>When overriding OnMarginsChanged in a derived class, be sure to call the base class's OnMarginsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMaxValueChanged(System.EventArgs)">
            <summary>Raises the MaxValueChanged event.</summary>
            <remarks>When overriding OnMaxValueChanged in a derived class, be sure to call the base class's OnMaxValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMinValueChanged(System.EventArgs)">
            <summary>Raises the MinValueChanged event.</summary>
            <remarks>When overriding OnMinValueChanged in a derived class, be sure to call the base class's OnMinValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMonthDaysMarginsChanged(System.EventArgs)">
            <summary>Raises the MonthDaysMarginsChanged event.</summary>
            <remarks>When overriding OnMonthDaysMarginsChanged in a derived class, be sure to call the base class's OnMonthDaysMarginsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMonthHeaderChanged(System.EventArgs)">
            <summary>Raises the MonthHeaderChanged event.</summary>
            <remarks>When overriding OnMonthHeaderChanged in a derived class, be sure to call the base class's OnMonthHeaderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMonthMarginsChanged(System.EventArgs)">
            <summary>Raises the MonthMarginsChanged event.</summary>
            <remarks>When overriding OnMonthMarginsChanged in a derived class, be sure to call the base class's OnMonthMarginsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <remarks>When overriding OnMouseDown in a derived class, be sure to call the base class's OnMouseDown method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <remarks>When overriding OnMouseEnter in a derived class, be sure to call the base class's OnMouseEnter method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseHover(System.EventArgs)">
            <summary>Raises the MouseHover event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <remarks>When overriding OnMouseLeave in a derived class, be sure to call the base class's OnMouseLeave method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <remarks>When overriding OnMouseMove in a derived class, be sure to call the base class's OnMouseMove method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseWheel event.</summary>
            <remarks>When overriding OnMouseWheel in a derived class, be sure to call the base class's OnMouseWheel method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnNoneButtonChanged(System.EventArgs)">
            <summary>Raises the NoneButtonChanged event.</summary>
            <remarks>When overriding OnNoneButtonChanged in a derived class, be sure to call the base class's OnNoneButtonChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>Notifies the control of Windows messages.</summary>
            <param name="m">A Message that represents the Windows message.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnNullDateChanged(System.EventArgs)">
            <summary>Raises the NullDateChanged event.</summary>
            <remarks>When overriding OnNullDateChanged in a derived class, be sure to call the base class's OnNullDateChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the background of the WinDatePicker control.</summary>
            <param name="pevent">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPaintDay(Xceed.Editors.PaintDayEventArgs)">
            <summary>Raises the PaintDay event.</summary>
            <remarks>When overriding OnPaintDay in a derived class, be sure to call the base class's OnPaintDay method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintDayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPaintDayBackground(Xceed.Editors.PaintDayEventArgs)">
            <summary>Raises the PaintDay event.</summary>
            <remarks>When overriding OnPaintDay in a derived class, be sure to call the base class's OnPaintDay method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintDayEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPaintWeekDayName(Xceed.Editors.PaintWeekDayNameEventArgs)">
            <summary>Raises the PaintWeekDayName event.</summary>
            <param name="e">A PaintWeekDayNameEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPreviewDaysBackColorChanged(System.EventArgs)">
            <summary>Raises the PreviewDaysBackColorChanged event.</summary>
            <remarks>When overriding OnPreviewDaysBackColorChanged in a derived class, be sure to call the base class's OnPreviewDaysBackColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnPreviewDaysForeColorChanged(System.EventArgs)">
            <summary>Raises the PreviewDaysForeColorChanged event.</summary>
            <remarks>When overriding OnPreviewDaysForeColorChanged in a derived class, be sure to call the base class's OnPreviewDaysForeColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnResize(System.EventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnResize in a derived class, be sure to call the base class's OnResize method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnSelectedDateChanged(Xceed.Editors.SelectedDateChangedEventArgs)">
            <summary>Raises the SelectedDateChanged event.</summary>
            <remarks>When overriding OnSelectedDateChanged in a derived class, be sure to call the base class's OnSelectedDateChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnSelectionBackColorChanged(System.EventArgs)">
            <summary>Raises the SelectionBackColorChanged event.</summary>
            <remarks>When overriding OnSelectionBackColorChanged in a derived class, be sure to call the base class's OnSelectionBackColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnSelectionForeColorChanged(System.EventArgs)">
            <summary>Raises the SelectionForeColorChanged event.</summary>
            <remarks>When overriding OnSelectionForeColorChanged in a derived class, be sure to call the base class's OnSelectionForeColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnShowPreviewDaysChanged(System.EventArgs)">
            <summary>Raises the ShowPreviewDaysChanged event.</summary>
            <remarks>When overriding OnShowPreviewDaysChanged in a derived class, be sure to call the base class's OnShowPreviewDaysChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnTodayBackColorChanged(System.EventArgs)">
            <summary>Raises the TodayBackColorChanged event.</summary>
            <remarks>When overriding OnTodayBackColorChanged in a derived class, be sure to call the base class's OnTodayBackColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnTodayButtonChanged(System.EventArgs)">
            <summary>Raises the TodayButtonChanged event.</summary>
            <remarks>When overriding OnTodayButtonChanged in a derived class, be sure to call the base class's OnTodayButtonChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnTodayForeColorChanged(System.EventArgs)">
            <summary>Raises the TodayForeColorChanged event.</summary>
            <remarks>When overriding OnTodayForeColorChanged in a derived class, be sure to call the base class's OnTodayForeColorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnVerticalSpacingChanged(System.EventArgs)">
            <summary>Raises the VerticalSpacingChanged event.</summary>
            <remarks>When overriding OnVerticalSpacingChanged in a derived class, be sure to call the base class's OnVerticalSpacingChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.OnWeekDaysHeaderChanged(System.EventArgs)">
            <summary>Raises the WeekDaysHeaderChanged event.</summary>
            <remarks>When overriding OnWeekDaysHeaderChanged in a derived class, be sure to call the base class's OnWeekDaysHeaderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value, DefaultBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetBorderStyle">
            <summary>Resets the value of the BorderStyle property to its default value, DefaultBorderStyle.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetCurrentDate">
            <summary>Resets the value if the CurrentDate property to its default value, DefaultCurrentDate.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetDayMargins">
            <summary>Resets the value of the DayMargins property to its default value, DefaultDayMargins.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetDaysBorders">
            <summary>Resets the value of the DaysBorders property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetEnableMultipleMonths">
            <summary>Resets the value of the EnableMultipleMonths property to its default value, DefaultEnableMultipleMonths.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetFirstMonth">
            <summary>Resets the value of the FirstMonth property to its default value, DefaultFirstMonth.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetHighlightToday">
            <summary>Resets the value of the HighlightToday property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetHorizontalSpacing">
            <summary>Resets the value of the HorizontalSpacing property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetHotBackColor">
            <summary>Resets the value of the HotBackColor property to its default value, DefaultHotBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetHotForeColor">
            <summary>Resets the value of the HotForeColor property to its default value, DefaultHotForeColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetIntegralHeight">
            <summary>Resets the value of the IntegralHeight property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetIntegralWidth">
            <summary>Resets the value of the IntegralWidth property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMargins">
            <summary>Resets the value of the Margins property to its default value, DefaultMargins.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMaxValue">
            <summary>Resets the value of the MaxValue property to its default value, DefaultMaxValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMinValue">
            <summary>Resets the value of the MinValue property to its default value, DefaultMinValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMonthDaysMargins">
            <summary>Resets the value of the MonthDaysMargins property to its default value, DefaultMonthDaysMargins.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMonthHeader">
            <summary>Resets the value of the MonthHeader property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetMonthMargins">
            <summary>Resets the value of the MonthMargins property to its default value, DefaultMonthMargins.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetNoneButton">
            <summary>Resets the value of the NoneButton property to its default value, DefaultNoneButton.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetNullDate">
            <summary>Resets the value of the NullDate property to its default value, DefaultNullDate.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetPreviewDaysBackColor">
            <summary>Resets the value of the PreviewDaysBackColor property to its default value, DefaultPreviewDaysBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetPreviewDaysForeColor">
            <summary>Resets the value of the PreviewDaysForeColor property to its default value, DefaultPreviewDaysForeColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetSelectedDate">
            <summary>Resets the value if the SelectedDate property to its default value, DefaultSelectedDate.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetSelectionBackColor">
            <summary>Resets the value of the SelectionBackColor property to its default value, DefaultSelectionBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetSelectionForeColor">
            <summary>Resets the value of the SelectionForeColor property to its default value, DefaultSelectionForeColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetShowPreviewDays">
            <summary>Resets the value of the ShowPreviewDays property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetTodayBackColor">
            <summary>Resets the value of the TodayBackColor property to its default value, DefaultTodayBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetTodayButton">
            <summary>Resets the value of the TodayButton property to its default value, DefaultTodayButton.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetTodayForeColor">
            <summary>Resets the value of the TodayForeColor property to its default value, DefaultTodayForeColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetVerticalSpacing">
            <summary>Resets the value of the VerticalSpacing property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.ResetWeekDaysHeader">
            <summary>Resets the value of the WeekDaysHeader property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCalendar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.BackColor">
            <summary>Gets or sets the background color of the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.BorderStyle">
            <summary>Gets or sets the border style of the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.CreateParams">
            <summary>Gets the required creation parameters when the control handle is created</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.CurrentDate">
            <summary>Gets or sets the current date.</summary>
            <remarks>    The current date is represented by a focus rectangle when     navigating through the calendar.     The current date and the SelectedDate may or may not be     the same day.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DayMargins">
            <summary>Gets or sets the margins surrounding each day in the calendar months.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DaysBorders">
            <summary>Gets the borders surrounding the days in the calendar month(s).</summary>
            <remarks>    The days in the months are surrounded by 4 borders: left,     top, right and bottom. Modifying one or more of these borders     will modify the same border in all the months.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
            <remarks>    When overriding DefaultBackColor in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultBorderStyle">
            <summary>Gets the default value of the BorderStyle property.</summary>
            <remarks>    When overriding DefaultBorderStyle in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultCurrentDate">
            <summary>Gets the default value of the CurrentDate property.</summary>
            <remarks>When overriding DefaultCurrentDate in a derived class, the value returned by your implementation should not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultDayMargins">
            <summary>Gets the default value of the DayMargins property.</summary>
            <remarks>    When overriding DefaultDayMargins in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultEnableMultipleMonths">
            <summary>Gets the default value of the EnableMultipleMonths property.</summary>
            <remarks>    When overriding DefaultEnableMultipleMonths in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultFirstMonth">
            <summary>Gets the default value of the FirstMonth property.</summary>
            <remarks>When overriding DefaultFirstMonth in a derived class, the value returned by your implementation should not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultHotBackColor">
            <summary>Gets the default value of the HotBackColor property.</summary>
            <remarks>    When overriding DefaultHotBackColor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultHotForeColor">
            <summary>Gets the default value of the HotForeColor property.</summary>
            <remarks>    When overriding DefaultHotForeColor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultMargins">
            <summary>Gets the default value of the Margins property.</summary>
            <remarks>    When overriding DefaultMargins in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultMaxValue">
            <summary>Gets the default value of the MaxValue property.</summary>
            <remarks>    When overriding DefaultMaxValue in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultMinValue">
            <summary>Gets the default value of the MinValue property.</summary>
            <remarks>    When overriding DefaultMinValue in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultMonthDaysMargins">
            <summary>Gets the default value of the MonthDaysMargins property.</summary>
            <remarks>    When overriding DefaultMonthDaysMargins in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultMonthMargins">
            <summary>Gets the default value of the MonthMargins property.</summary>
            <remarks>    When overriding DefaultMonthMargins in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultNoneButton">
            <summary>Gets the default value of the NoneButton property.</summary>
            <remarks>    When overriding DefaultNoneButton in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultNullDate">
            <summary>Gets the default value of the NullDate property.</summary>
            <remarks>When overriding DefaultNullDate in a derived class, the value returned by your implementation should not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultPreviewDaysBackColor">
            <summary>Gets the default value of the PreviewDaysBackColor property.</summary>
            <remarks>    When overriding DefaultPreviewDaysBackColor in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultPreviewDaysForeColor">
            <summary>Gets the default value of the PreviewDaysForeColor property.</summary>
            <remarks>    When overriding DefaultPreviewDaysForeColor in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultSelectedDate">
            <summary>Gets the default value of the SelectedDate property.</summary>
            <remarks>When overriding DefaultSelectedDate in a derived class, the value returned by your implementation should not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultSelectionBackColor">
            <summary>Gets the default value of the SelectionBackColor property.</summary>
            <remarks>    When overriding DefaultSelectionBackColor in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultSelectionForeColor">
            <summary>Gets the default value of the SelectionForeColor property.</summary>
            <remarks>    When overriding DefaultSelectionForeColor in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultShowPreviewDays">
            <summary>Gets the default value of the ShowPreviewDays property.</summary>
            <remarks>    When overriding DefaultShowPreviewDays in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultTodayBackColor">
            <summary>Gets the default value of the TodayBackColor property.</summary>
            <remarks>    When overriding DefaultTodayBackColor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultTodayButton">
            <summary>Gets the default value of the TodayButton property.</summary>
            <remarks>    When overriding DefaultTodayButton in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.DefaultTodayForeColor">
            <summary>Gets the default value of the TodayForeColor property.</summary>
            <remarks>    When overriding DefaultTodayForeColor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.EnableMultipleMonths">
            <summary>Gets or sets a value indicating if multiple months can be displayed in the calendar.</summary>
            <remarks>    If EnableMultipleMonths is set to true, preview days will     only be displayed in the first and last months.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.FirstMonth">
            <summary>Gets or sets the first month displayed in the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.HighlightToday">
            <summary>Gets or sets a boolean value indicating if the present date (DateTime.Now) should be highlighted.</summary>
            <remarks>    If true, TodayBackColor and TodayForeColor will be used     to highlight the present date.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.HorizontalSpacing">
            <summary>Gets or sets, in pixels, the horizontal spacing between months.</summary>
            <remarks>    The space between the months in the calendar may appear     to be greater than the value assigned to the HorizontalSpacing     in the case where the MonthMargins property is modified from     its default value.     The value of the HorizontalSpacing property is not taken     into consideration if EnableMultipleMonths is set to     false.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.HotBackColor">
            <summary>Gets or sets the background color displayed when the mouse passes over a day.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.HotForeColor">
            <summary>Gets or sets the foreground color displayed when the mouse passes over a day.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.IntegralHeight">
            <summary>Gets or sets a boolean value indicating if the height of the control should be adjusted to completely display the last visible item.</summary>
            <remarks>    The IntegralHeight property can also be considered as a     "vertical resizing step ratio". For example, if set to true,     when the calendar is vertically resized, the step will be the     height of the individual child items resulting in the last     visible item always being completely displayed. If set to     false, the height of the calendar will be adjusted pixel by     pixel thus allow for the last visible item to be partially     displayed.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.IntegralWidth">
            <summary>Gets or sets a boolean value indicating if the width of the control should be adjusted to completely display the visible items.</summary>
            <remarks>    The IntegralWidth property can also be considered as a     "horizontal resizing step ratio". For example, if set to true,     when the calendar is horizontally resized, the step will be the     width of the individual child items resulting in the visible     items always being completely displayed. If set to false, the     width of the calendar will be adjusted pixel by pixel thus     allow for the visibles item to be partially displayed.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.Margins">
            <summary>Gets or sets the width of the margins, in pixels, of the calendar.</summary>
            <remarks>    By default, the top, right and left margins are set to 1     pixel. The bottom margin is set to 17 pixels since, initially,     it contains the "Today" and "None" buttons. In the image below,     all four of the calendar's margins are set to 10 pixels and are     represented by the grayed section.     </remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.MaxValue">
            <summary>Gets or sets the maximum DateTime value that can be assigned to the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.MinValue">
            <summary>Gets or sets the minimum DateTime value that can be assigned to the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.MonthDaysMargins">
            <summary>Gets or sets the width, in pixels, of the margins surrounding the days in the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.MonthHeader">
            <summary>Gets the header that displays the month and year of the calendar as well as the next and previous navigation buttons.</summary>
            <remarks>    The month header follows the system's regional     settings.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.MonthMargins">
            <summary>Gets or sets the width, in pixels, of the margins surrounding each month in the calendar.</summary>
            <remarks>    The spacing between the months may differ from the values     of the MonthMargins property in the case where the     HorizontalSpacing and VerticalSpacing properties have been set     to a value other than 0 (default).</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.NoneButton">
            <summary>Gets or sets the WinButton control used as the "None" button.</summary>
            <remarks>The "None" button deselects the SelectedDate.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.NullDate">
            <summary>Gets or sets DateTime value assigned to the calendar when its SelectedDate is $$NULL$$.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.PreviewDaysBackColor">
            <summary>Gets or sets the background color used for the preview days displayed in the calendar.</summary>
            <remarks>    If EnableMultipleMonths is set to true, preview days will     only be displayed in the first and last months.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.PreviewDaysForeColor">
            <summary>Gets or sets the foreground color used for the preview days displayed in the calendar.</summary>
            <remarks>    If EnableMultipleMonths is set to true, preview days will     only be displayed in the first and last months.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.SelectedDate">
            <summary>Gets or sets the selected date.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.SelectionBackColor">
            <summary>Gets or sets the selection background color of the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.SelectionForeColor">
            <summary>Gets or sets the selection foreground color of the calendar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.ShowPreviewDays">
            <summary>Gets or sets a boolean value indicating if the days from the previous and next months should be displayed to "complete" the first and last weeks in the current month.</summary>
            <remarks>    If EnableMultipleMonths is set to true, preview days will     only be displayed in the first and last months.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.Text">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.TodayBackColor">
            <summary>Gets or sets the background color of the present date (DateTime.Now).</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.TodayButton">
            <summary>Gets or sets the WinButton control used as the "Today" button.</summary>
            <remarks>    The "Today" button sets the present date (DateTime.Now)     as the SelectedDate and brings the current month into     view.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.TodayForeColor">
            <summary>Gets or sets the foreground color of the present date (DateTime.Now).</summary>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.VerticalSpacing">
            <summary>Gets or sets, in pixels, the vertical spacing between months.</summary>
            <remarks>    The space between the months in the calendar may appear     to be greater than the value assigned to the VerticalSpacing in     the case where the MonthMargins property is modified from its     default value.     The value of the VerticalSpacing property is not taken     into consideration if EnableMultipleMonths is set to     false.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCalendar.WeekDaysHeader">
            <summary>Gets the header that displays the names of the days of the week. (Sunday, Monday, Tuesday, etc...).</summary>
            <remarks>    The weekdays header follows the system's regional     settings.</remarks>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.BackColorChanged">
            <summary>Raised when the value of the BackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.BorderStyleChanged">
            <summary>Raised when the value of the BorderStyle property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.CurrentDateChanged">
            <summary>Raised when the value of the CurrentDate property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayClick">
            <summary>Raised when a day is clicked.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayDoubleClick">
            <summary>Raised when a day is double-clicked.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMarginsChanged">
            <summary>Raised when the value of the DayMargins property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseDown">
            <summary>Raised when the mouse pointer is over a day's rectangle and a mouse button is pressed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseEnter">
            <summary>Raised when the mouse pointer enters a day's rectangle.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseHover">
            <summary>Raised when the mouse pointer hovers over a day's rectangle.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseLeave">
            <summary>Raised when the mouse pointer leaves a day's rectangle.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseMove">
            <summary>Raised when the mouse pointer is moved over a day's rectangle.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DayMouseUp">
            <summary>Raised when the mouse pointer is over a day's rectangle and a mouse button is released.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.DaysBordersChanged">
            <summary>Raised when the value of the DaysBorders property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.EnableMultipleMonthsChanged">
            <summary>Raised when the value of the EnableMultipleMonths property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.FirstMonthChanged">
            <summary>Raised when the value of the FirstMonth property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.FormatTitleButtonText">
            <summary>Raised when the text in the MonthHeader's TitleButton is about to be painted.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.HighlightTodayChanged">
            <summary>Raised when the value of the HighlightToday property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.HorizontalSpacingChanged">
            <summary>Raised when the value of the HorizontalSpacing property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.HotBackColorChanged">
            <summary>Raised when the value of the HotBackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.HotForeColorChanged">
            <summary>Raised when the value of the HotForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.IntegralHeightChanged">
            <summary>Raised when the value of the IntegralHeight property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.IntegralWidthChanged">
            <summary>Raised when the value of the IntegralWidth property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MarginsChanged">
            <summary>Raised when the value of the Margins property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MaxValueChanged">
            <summary>Raised when the value of the MaxValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MinValueChanged">
            <summary>Raised when the value of the MinValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MonthDaysMarginsChanged">
            <summary>Raised when the value of the MonthDaysMargins property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MonthHeaderChanged">
            <summary>Raised when the value of the MonthHeader property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.MonthMarginsChanged">
            <summary>Raised when the value of the MonthMargins property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.NoneButtonChanged">
            <summary>Raised when the value of the NoneButton property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.NullDateChanged">
            <summary>Raised when the value of the NullDate property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.PaintDay">
            <summary>Raised when a day is about to be painted.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.PaintDayBackGround">
            <summary>Raised when the background of a day is about to be painted.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.PaintWeekDayName">
            <summary>Raised when a a weekday name is about to be painted.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.PreviewDaysBackColorChanged">
            <summary>Raised when the value of the PreviewDaysBackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.PreviewDaysForeColorChanged">
            <summary>Raised when the value of the PreviewDaysForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.SelectedDateChanged">
            <summary>Raised when the value of the SelectedDate property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.SelectionBackColorChanged">
            <summary>Raised when the value of the SelectionBackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.SelectionForeColorChanged">
            <summary>Raised when the value of the SelectionForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.ShowPreviewDaysChanged">
            <summary>Raised when the value of the ShowPreviewDays property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.TodayBackColorChanged">
            <summary>Raised when the value of the TodayBackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.TodayButtonChanged">
            <summary>Raised when the value of the TodayButton property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.TodayForeColorChanged">
            <summary>Raised when the value of the TodayForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.VerticalSpacingChanged">
            <summary>Raised when the value of the VerticalSpacing property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCalendar.WeekDaysHeaderChanged">
            <summary>Raised when the value of the WeekDaysHeader property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinCheckBox">
            <summary>The WinCheckBox class represents an extensible and themable checkbox control for Windows Forms which supports both Windows XP and classic Windows themes and can adapt to the current Windows theme.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor">
            <summary>Initializes a new instance of the WinCheckBox class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor(System.String)">
            <summary>Initializes a new instance of the WinCheckBox class specifying its text.</summary>
            <param name="text">A string representing the checkbox's Text.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor(System.String,System.Windows.Forms.CheckState)">
            <summary>Initializes a new instance of the WinCheckBox class specifying its text and check state.</summary>
            <param name="text">A string representing the checkbox's Text.</param>
            <param name="checkState">A CheckState value representing the check state of the checkbox.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.#ctor(Xceed.Editors.WinCheckBox)">
            <summary>Initializes a new instance of the WinCheckBox class specifying the WinCheckBox control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinCheckBox to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
            <returns>true if the specified key is a regular input key; false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <remarks>When overriding OnCheckedChanged in a derived class, be sure to call the base class's OnCheckedChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnCheckStateChanged(System.EventArgs)">
            <summary>Raises the CheckStateChanged event.</summary>
            <remarks>When overriding OnCheckStateChanged in a derived class, be sure to call the base class's OnCheckStateChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnClick(System.EventArgs)">
            <summary>Raises the Click event.</summary>
            <remarks>When overriding OnClick in a derived class, be sure to call the base class's OnClick method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnDoubleClick(System.EventArgs)">
            <summary>Raises the DoubleClick event.</summary>
            <remarks>When overriding OnDoubleClick in a derived class, be sure to call the base class's OnDoubleClick method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnEnter(System.EventArgs)">
            <summary>Raises the Enter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnGotFocus(System.EventArgs)">
            <summary>Raises the GotFocus event.</summary>
            <remarks>When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <remarks>When overriding OnKeyDown in a derived class, be sure to call the base class's OnKeyDown method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyUp event.</summary>
            <remarks>When overriding OnKeyUp in a derived class, be sure to call the base class's OnKeyUp method so that registered delegates receive the event.</remarks>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnLeave(System.EventArgs)">
            <summary>Raises the Leave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <remarks>When overriding OnLostFocus in a derived class, be sure to call the base class's OnLostFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <remarks>When overriding OnMouseDown in a derived class, be sure to call the base class's OnMouseDown method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <remarks>When overriding OnMouseEnter in a derived class, be sure to call the base class's OnMouseEnter method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <remarks>When overriding OnMouseLeave in a derived class, be sure to call the base class's OnMouseLeave method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.OnTextChanged(System.EventArgs)">
            <summary>Raises the TextChanged event.</summary>
            <remarks>When overriding OnTextChanged in a derived class, be sure to call the base class's OnTextChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinCheckBox.ProcessMnemonic(System.Char)">
            <summary>Processes a mnemonic character.</summary>
            <returns>true if the character was processed as a mnemonic by the control; false otherwise.</returns>
            <remarks>    This method makes ensures that the control is selectable     and that the mnemonic is correct before triggering the Click     event.</remarks>
            <param name="inputChar">The character to process.</param>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.CheckAlign">
            <summary>Gets or sets the horizontal and vertical alignment of the checkbox in the WinCheckBox control.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.Checked">
            <summary>Gets or set a boolean value indicating whether the checkbox is in the checked state.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.CheckState">
            <summary>Gets or sets the state of the checkbox.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.FlatStyle">
            <summary>Gets or sets the flat style appearance of the checkbox control.</summary>
            <remarks>    If the FlatStyle property is set to FlatStyle.Popup,     checkbox will initially appear flat until the mouse pointer     moves over it. When the mouse pointer moves over the checkbox,     it appears as a standard checkbox until the mouse pointer is     moved off of it again.     If the FlatStyle.System is used, the appearance of the     checkbox is determined by the operating system. If supported,     users can change the appearance of the checkbox by adjusting     the appearance settings of their operating system.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.TextAlign">
            <summary>Gets or sets the horizontal and vertical alignment of the checkbox in the WinCheckBox control.</summary>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.ThreeState">
            <summary>Gets or sets a boolean value indicating whether the checkbox will allow three check states rather than two.</summary>
            <remarks>    If the ThreeState property is set to false, the     CheckState property value can only be set to     CheckState.Indeterminate in code and not by user     interaction.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinCheckBox.UseMnemonic">
            <summary>Gets or sets a boolean value indicating if the checkbox interprets an ampersand character (&amp;) in its Text property to be an access key prefix character.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCheckBox.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinCheckBox.CheckStateChanged">
            <summary>Raised when the value of the CheckState property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinDatePicker">
            <summary>The WinDatePicker class represents an extensible and themable date picker control for Windows Forms.</summary>
            <remarks>    The WinDatePicker class represents an extensible and     themable date picker control for Windows Forms. It supports     regional settings, as well as both the Windows XP and classic     Windows themes, and can adapt to the current regional settings     and Windows theme.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor">
            <summary>Initializes a new instance of the WinDatePicker class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the WinDatePicker class specifying if the DropDownControl can be shown.</summary>
            <remarks>    Setting allowDropDown to false does not imply that the     DropDownControl is $$NULL$$.     If allowDropDown is set to false, the DropDownButton will     be hidden and an exception will be thrown if an attempt is made     to open the dropdown programatically using the DroppedDown     property or the OpenDropDown method.</remarks>
            <param name="allowDropDown">true if the DropDownControl can be shown; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor(Xceed.Editors.EnhancedBorderStyle)">
            <summary>Initializes a new instance of the WinDatePicker class specifying its borders.</summary>
            <param name="borderStyle">An EnhancedBorderStyle value representing the border style of the WinDatePicker.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor(Xceed.Editors.EnhancedBorderStyle,System.Boolean)">
            <summary>Initializes a new instance of the WinDatePicker class specifying its borders and if the DropDownControl can be shown.</summary>
            <remarks>    Setting allowDropDown to false does not imply that the     DropDownControl is $$NULL$$.     If allowDropDown is set to false, the DropDownButton will     be hidden and an exception will be thrown if an attempt is made     to open the dropdown programatically using the DroppedDown     property or the OpenDropDown method.</remarks>
            <param name="borderStyle">An EnhancedBorderStyle value representing the border style of the WinDatePicker.</param>
            <param name="allowDropDown">true if the DropDownControl can be shown; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor(System.Type,Xceed.Editors.EnhancedBorderStyle,System.Boolean)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.#ctor(Xceed.Editors.WinDatePicker)">
            <summary>Initializes a new instance of the WinDatePicker class specifying the WinDatePicker control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinDatePicker to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.CreateDefaultDropDownControl">
            <summary>Creates the default DropDownControl.</summary>
            <returns>A Control representing the default DropDownControl.</returns>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.CreateTextBoxArea">
            <summary>Creates the TextBoxArea to which will be contained by the WinDatePicker control.</summary>
            <returns>A reference to a TextBoxArea representing the TextBoxArea contained by the WinDatePicker control.</returns>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnDisplayFormatProviderChanged(System.EventArgs)">
            <summary>Raises the DisplayFormatProviderChanged event.</summary>
            <remarks>When overriding OnDisplayFormatProviderChanged in a derived class, be sure to call the base class's OnDisplayFormatProviderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnDisplayFormatSpecifierChanged(System.EventArgs)">
            <summary>Raises the DisplayFormatSpecifierChanged event.</summary>
            <remarks>When overriding OnDisplayFormatSpecifierChanged in a derived class, be sure to call the base class's OnDisplayFormatSpecifierChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnDropDownControlChanged(System.EventArgs)">
            <summary>Raises the DropDownControlChanged event.</summary>
            <remarks>When overriding OnDropDownControlChanged in a derived class, be sure to call the base class's OnDropDownControlChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnDroppedDownChanged(System.EventArgs)">
            <summary>Raises the DroppedDownChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnEditFormatProviderChanged(System.EventArgs)">
            <summary>Raises the EditFormatProviderChanged event.</summary>
            <remarks>When overriding OnEditFormatProviderChanged in a derived class, be sure to call the base class's OnEditFormatProviderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnEditFormatSpecifierChanged(System.EventArgs)">
            <summary>Raises the EditFormatSpecifierChanged event.</summary>
            <remarks>When overriding OnEditFormatSpecifierChanged in a derived class, be sure to call the base class's OnEditFormatSpecifierChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnFirstMonthChanged(System.EventArgs)">
            <summary>Raises the FirstMonthChanged event.</summary>
            <remarks>When overriding OnFirstMonthChanged in a derived class, be sure to call the base class's OnFirstMonthChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnMaxValueChanged(System.EventArgs)">
            <summary>Raises the MaxValueChanged event.</summary>
            <remarks>When overriding OnMaxValueChanged in a derived class, be sure to call the base class's OnMaxValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnMinValueChanged(System.EventArgs)">
            <summary>Raises the MinValueChanged event.</summary>
            <remarks>When overriding OnMinValueChanged in a derived class, be sure to call the base class's OnMinValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnNullDateChanged(System.EventArgs)">
            <summary>Raises the NullDateChanged event.</summary>
            <remarks>When overriding OnNullDateChanged in a derived class, be sure to call the base class's OnNullDateChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnNullDateStringChanged(System.EventArgs)">
            <summary>Raises the NullDateStringChanged event.</summary>
            <remarks>When overriding OnNullDateStringChanged in a derived class, be sure to call the base class's OnNullDateStringChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.OnValueChanged(System.EventArgs)">
            <summary>Raises the ValueChanged event.</summary>
            <remarks>When overriding OnValueChanged in a derived class, be sure to call the base class's OnValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Parse">
            <summary>OBSOLETE: The Parse method is obsolete and has been replaced by the DateTime@) method. Converts the specified string representation of a date and time to its DateTime equivalent using the formatting information retrieved from the DisplayFormatProvider property, the EditFormatProvider property, and the current culture's DateTimeFormatInfo.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Parse(System.String,System.DateTime@)">
            <summary>OBSOLETE: The Parse method is obsolete and has been replaced by the DateTime@) method. Converts the specified string representation of a date and time to its DateTime equivalent using the formatting information retrieved from the DisplayFormatProvider property, the EditFormatProvider property, and the current culture's DateTimeFormatInfo.</summary>
            <returns>true if text was successfully parsed; false otherwise.</returns>
            <remarks>    This method ignores unrecognized data if possible and     fills in missing month, day, and year information with the     current time. Any leading, inner, or trailing white space     character in "text" is ignored.     text must contain the representation of a date in one of     the formats described in the DateTimeFormatInfo class topic in     .NET Framework's documentation.</remarks>
            <param name="text">A string containing a date to convert</param>
            <param name="date">A DateTime equivalent to the date contained in text. If text could not successfully be parsed, NullDate is returned.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.Parse(System.String,System.DateTime@,Xceed.Editors.ParsingFormat)">
            <summary>OBSOLETE: The Parse method is obsolete and has been replaced by the DateTime@) method. Converts the specified string representation of a date and time to its DateTime equivalent</summary>
            <returns>true if text was successfully parsed; false otherwise.</returns>
            <remarks>    This method ignores unrecognized data if possible and     fills in missing month, day, and year information with the     current time. Any leading, inner, or trailing white space     character in "text" is ignored.     text must contain the representation of a date in one of     the formats described in the DateTimeFormatInfo class topic in     .NET Framework's documentation.</remarks>
            <param name="text">A string containing a date to convert</param>
            <param name="date">A DateTime equivalent to the date contained in text. If text could not successfully be parsed, NullDate is returned.</param>
            <param name="parsingFormat">A ParsingFormat value representing either the DateTimeFormatInfo object assigned to the DisplayFormatProvider or EditFormatProvider property.</param>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetDisplayFormatProvider">
            <summary>Resets the value of the DisplayFormatProvider property to its default value, $$NULL$$.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetDisplayFormatSpecifier">
            <summary>Resets the value of the DisplayFormatSpecifier property to its default value, Empty.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetEditFormatProvider">
            <summary>Resets the value of the EditFormatProvider property to its default value, $$NULL$$.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetEditFormatSpecifier">
            <summary>Resets the value of the EditFormatSpecifier property to its default value, Empty.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetFirstMonth">
            <summary>Resets the value of the FirstMonth property to its default value, DefaultFirstMonth.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetMaxValue">
            <summary>Resets the value of the MaxValue property to its default value, DateTime.MaxValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetMinValue">
            <summary>Resets the value of the MinValue property to its default value, DateTime.MinValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetNullDate">
            <summary>Resets the value of the NullDate property to its default value, DefaultNullDate.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetNullDateString">
            <summary>Resets the value of the NullDateString property to its default value, DefaultNullDateString.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.ResetValue">
            <summary>Resets the value of the Value property to its default value, DateTime.Today.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.SetDropDownButtonDefaults(Xceed.Editors.WinButton)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.SetDropDownControlCore(System.Windows.Forms.Control)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinDatePicker.TryParse(System.String,System.DateTime@)">
            <summary>Parses the specified string representation of a date and time to its DateTime equivalent</summary>
            <returns>true if editText was successfully parsed; false otherwise.</returns>
            <remarks>    The editText will be parsed according to the     EditFormatProvider and the control's current Mask.     This method ignores unrecognized data if possible and     fills in missing month, day, and year information with the     current time. Any leading, inner, or trailing white space     character in editText is ignored.     text must contain the representation of a date in one of     the formats described in the DateTimeFormatInfo class topic in     .NET Framework's documentation.</remarks>
            <param name="editText">A string containing a date to parse.</param>
            <param name="parsedDate">A DateTime equivalent to the date contained in editText. If editText is empty, NullDate is returned.</param>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultDisplayFormatProvider">
            <summary>Gets the default value of the DisplayFormatProvider property. Unless overridden, $$NULL$$.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultEditFormatProvider">
            <summary>Gets the default value of the EditFormatProvider property.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultFirstMonth">
            <summary>Gets the default value of the FirstMonth property.</summary>
            <remarks>    When overriding DefaultFirstMonth in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultMaxValue">
            <summary>Gets the default value of the MaxValue property.</summary>
            <remarks>    When overriding DefaultMaxValue in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultMinValue">
            <summary>Gets the default value of the MinValue property.</summary>
            <remarks>    When overriding DefaultMinValue in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultNullDate">
            <summary>Gets the default value of the NullDate property.</summary>
            <remarks>    When overriding DefaultNullDate in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultNullDateString">
            <summary>Gets the default value of the NullDateString property.</summary>
            <remarks>    When overriding DefaultNullDateString in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DefaultValue">
            <summary>Gets the default value of the Value property.</summary>
            <remarks>    When overriding DefaultValue in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DisplayFormatProvider">
            <summary>Gets or sets the custom format provider that will be used to display the date picker's Value.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.     The list of values that can be passed to the     DisplayFormatSpecifier property can be found in the "Format     Specifiers and Format Providers" topic of the .NET     Framework.     The display format provider can differ from the     EditFormatProvider.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DisplayFormatSpecifier">
            <summary>Gets or sets the format specifier that will be used to display the date picker's Value.</summary>
            <remarks>    The list of values that can be passed to the     DisplayFormatSpecifier property can be found in the     "DisplayFormat Specifiers and DisplayFormat Providers" topic of     the .NET Framework.     The display format specifier can differ from the     EditFormatSpecifier.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.DropDownControl">
            <summary>Gets the WinCalendar associated with the date picker.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.EditFormatProvider">
            <summary>Gets or sets the custom format provider that will be used to edit the date picker's Value.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.     The list of values that can be passed to the     EditFormatSpecifier property can be found in the "Format     Specifiers and Format Providers" topic of the .NET     Framework.     The edit format provider can differ from the     DisplayFormatProvider.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.EditFormatSpecifier">
            <summary>Gets or sets the format specifier that will be used to edit the date picker's Value.</summary>
            <remarks>    The list of values that can be passed to the     EditFormatSpecifier property can be found in the "DisplayFormat     Specifiers and DisplayFormat Providers" topic of the .NET     Framework.     The edit format specifier can differ from the     DisplayFormatSpecifier.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.FirstMonth">
            <summary>Gets or sets the first month displayed in the date picker when dropdown is opened.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.MaxValue">
            <summary>Gets or sets the maximum DateTime value that can be assigned to the date picker.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.MinValue">
            <summary>Gets or sets the minimum DateTime value that can be assigned to the date picker.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.NullDate">
            <summary>Gets or sets DateTime value assigned to the date picker when its Value is $$NULL$$.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.NullDateString">
            <summary>Gets or sets the string displayed in the date picker when a $$NULL$$ is assigned to Value.</summary>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.TextBoxArea">
            <summary>Gets the DatePickerTextBoxArea responsible for the text area of the WinDatePicker control.</summary>
            <remarks>    The TextBoxArea must be used to handle events such as the     mouse, keyboard and validation events.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinDatePicker.Value">
            <summary>Gets or sets the datetime value assigned to the date picker.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.DisplayFormatProviderChanged">
            <summary>Raised when the value of the DisplayFormatProvider property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.DisplayFormatSpecifierChanged">
            <summary>Raised when the value of the DisplayFormatSpecifier property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.EditFormatProviderChanged">
            <summary>Raised when the value of the EditFormatProvider property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.EditFormatSpecifierChanged">
            <summary>Raised when the value of the EditFormatSpecifier property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.FirstMonthChanged">
            <summary>Raised when the value of the FirstMonth property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.MaxValueChanged">
            <summary>Raised when the value of the MaxValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.MinValueChanged">
            <summary>Raised when the value of the MinValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.NullDateChanged">
            <summary>Raised when the value of the NullDate property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.NullDateStringChanged">
            <summary>Raised when the value of the NullDateString property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinDatePicker.ValueChanged">
            <summary>Raised when the value of the Value property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinHorizontalScrollBar">
            <summary>The WinHorizontalScrollBar class represents an extensible and themable horizontal scrollbar for Windows Forms.</summary>
            <remarks>    The WinHorizontalScrollBar class represents an extensible     and themable horizontal scrollbar for Windows Forms. It     supports both Windows XP and classic Windows themes and can     adapt to the current Windows theme.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.#ctor">
            <summary>Initializes a new instance of the WinHorizontalScrollBar class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.#ctor(Xceed.Editors.WinHorizontalScrollBar)">
            <summary>Initializes a new instance of the WinHorizontalScrollBar class specifying the WinHorizontalScrollBar control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinHorizontalScrollBar to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.AdjustToSystemColors">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the scrollbar.</summary>
            <returns>A new AccessibleObject for the scrollbar.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <remarks>When overriding OnMouseMove in a derived class, be sure to call the base class's OnMouseMove method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinHorizontalScrollBar.ResetSize">
            <summary>Resets the value of the Size property to its default value.</summary>
        </member>
        <member name="P:Xceed.Editors.WinHorizontalScrollBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinHorizontalScrollBar.UIState">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="T:Xceed.Editors.WinNumericTextBox">
            <summary>The WinNumericTextBox class represents an extensible and themable numerical textbox control for Windows Forms.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.#ctor">
            <summary>Initializes a new instance of the WinNumericTextBox class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the WinNumericTextBox class specifying if the DropDownControl can be used.</summary>
            <remarks>    Setting allowDropDown to false does not imply that the     DropDownControl is $$NULL$$.     If allowDropDown is set to false, the DropDownButton will     be hidden and an exception will be thrown if an attempt is made     to open the dropdown programatically using the DroppedDown     property or the OpenDropDown method.</remarks>
            <param name="allowDropDown">true if the DropDownControl can be shown; false otherwise.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.#ctor(System.Type,Xceed.Editors.EnhancedBorderStyle,System.Boolean)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.#ctor(Xceed.Editors.WinNumericTextBox)">
            <summary>Initializes a new instance of the WinNumericTextBox class specifying the WinNumericTextBox control that will be used as a template.</summary>
            <param name="template">The WinNumericTextBox to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.CreateDefaultDropDownControl">
            <summary>Creates the default DropDownControl.</summary>
            <returns>A Control representing the default DropDownControl.</returns>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.CreateTextBoxArea">
            <summary>Creates the TextBoxArea to which will be contained by the WinNumericTextBox control.</summary>
            <returns>A reference to a TextBoxArea representing the TextBoxArea contained by the WinNumericTextBox control.</returns>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDataTypeChanged(System.EventArgs)">
            <summary>Raises the DataTypeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDecimalsChanged(System.EventArgs)">
            <summary>Raises the DecimalsChanged event.</summary>
            <remarks>When overriding OnDecimalsChanged in a derived class, be sure to call the base class's OnDecimalsChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDecimalSeparatorInputCharsChanged(System.EventArgs)">
            <summary>Raises the DecimalSeparatorInputCharsChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDigitInputCharsChanged(System.EventArgs)">
            <summary>Raises the DigitInputCharsChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDisplayFormatProviderChanged(System.EventArgs)">
            <summary>Raises the DisplayFormatProviderChanged event.</summary>
            <remarks>When overriding OnDisplayFormatProviderChanged in a derived class, be sure to call the base class's OnDisplayFormatProviderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDisplayFormatSpecifierChanged(System.EventArgs)">
            <summary>Raises the DisplayFormatSpecifierChanged event.</summary>
            <remarks>When overriding OnDisplayFormatSpecifierChanged in a derived class, be sure to call the base class's OnDisplayFormatSpecifierChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDisplayNullTextChanged(System.EventArgs)">
            <summary>Raises the DisplayNullTextChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDropDownControlChanged(System.EventArgs)">
            <summary>Raises the DropDownControlChanged event.</summary>
            <remarks>When overriding OnDropDownControlChanged in a derived class, be sure to call the base class's OnDropDownControlChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnDroppedDownChanged(System.EventArgs)">
            <summary>Raises the DroppedDownChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnEditFormatProviderChanged(System.EventArgs)">
            <summary>Raises the EditFormatProviderChanged event.</summary>
            <remarks>When overriding OnEditFormatProviderChanged in a derived class, be sure to call the base class's OnEditFormatProviderChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnInputModeChanged(System.EventArgs)">
            <summary>Raises the InputModeChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnMaxValueChanged(System.EventArgs)">
            <summary>Raises the MaxValueChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnMinValueChanged(System.EventArgs)">
            <summary>Raises the MinValueChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnNegativeSignInputCharsChanged(System.EventArgs)">
            <summary>Raises the NegativeSignInputCharsChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnNullValueChanged(System.EventArgs)">
            <summary>Raises the NullValueChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.OnValueChanged(System.EventArgs)">
            <summary>Raises the ValueChanged event.</summary>
            <remarks>When overriding OnValueChanged in a derived class, be sure to call the base class's OnValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDataType">
            <summary>Resets the value of the DataType property to its default value, DefaultDataType.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDecimals">
            <summary>Resets the value of the Decimals property to its default value, DefaultDecimals.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDecimalSeparatorInputChars">
            <summary>Resets the value of the DecimalSeparatorInputChars property to its default value, DefaultDecimalSeparatorInputChars.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDigitInputChars">
            <summary>Reests the value of the DigitInputChars property to its default value, DefaultDigitInputChars.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDisplayFormatProvider">
            <summary>Resets the value of the DisplayFormatProvider property to its default value, DefaultDisplayFormatProvider.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDisplayFormatSpecifier">
            <summary>Resets the value of the DisplayFormatSpecifier property to its default value.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetDisplayNullText">
            <summary>Resets the value of the DisplayNullText property to its default value, DefaultDisplayNullText.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetEditFormatProvider">
            <summary>Resets the value of the EditFormatProvider property to its default value, DefaultEditFormatProvider.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetInputMode">
            <summary>Resets the value of the InputMode property to its default value, DefaultInputMode.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetMaxValue">
            <summary>Resets the value of the MaxValue property to its default value, DefaultMaxValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetMinValue">
            <summary>Resets the value of the MinValue property to its default value, DefaultMinValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetNegativeSignInputChars">
            <summary>Resets the value of the NegativeSignInputChars to its default value, DefaultNegativeSignInputChars.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetNullValue">
            <summary>Resets the value of the NullValue property to its default value, DefaultNullValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.ResetValue">
            <summary>Resets the value of the Value property to its default value, DefaultValue.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.SetDropDownControlCore(System.Windows.Forms.Control)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinNumericTextBox.TryParse(System.String,System.Object@)">
            <summary>Parses the specified into its numeric equivalent.</summary>
            <returns>true if editText was successfully parsed; false otherwise.</returns>
            <remarks>    The editText will be parsed according to the     EditFormatProvider and the control's current Mask.</remarks>
            <param name="editText">A string containing the numeric value to parse.</param>
            <param name="parsedResult">The numeric equivalent to the string contained in editText. If editText is empty, NullValue is returned.</param>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DataType">
            <summary>Gets or sets the datatype of the value entered in the WinNumericTextBox control.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.Decimals">
            <summary>Gets or sets a value indicating the maximum number of digits which can be entered after the decimal point.</summary>
            <remarks>    Contrary to the MinValue and MaxValue properties,     affecting this property will not rectify the control's Value     property. This property will only be used when validating the     control's input; forcing the user to enter no more than the     specified ammount of decimals.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DecimalSeparatorInputChars">
            <summary>Gets or sets the characters that are to be considered as decimal separators.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDataType">
            <summary>Gets the default value of the DataType property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDecimals">
            <summary>Gets the default value of the Decimals property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDecimalSeparatorInputChars">
            <summary>Gets the default value of the DecimalSeparatorInputChars property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDigitInputChars">
            <summary>Gets the default value of the DigitInputChars property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDisplayFormatProvider">
            <summary>Gets the default value of the DisplayFormatProvider property. Unless overridden, $$NULL$$.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDisplayNullText">
            <summary>Gets the default value of the DisplayNullText property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDropDownAnchor">
            <summary>Gets the default value of the DropDownAnchor property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDropDownMinSize">
            <summary>Gets the default value of the DropDownMinSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultDropDownResizable">
            <summary>Gets the default value of the DropDownResizable property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultEditFormatProvider">
            <summary>Gets the default value of the EditFormatProvider property.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultInputMode">
            <summary>Gets the default value of the InputMode property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultMaxValue">
            <summary>Gets the default value of the MaxValue property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultMinValue">
            <summary>Gets the default value of the MinValue property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultNegativeSignInputChars">
            <summary>Gets the default value of the NegativeSignInputChars property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultNullValue">
            <summary>Gets the default value of the NullValue property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DefaultValue">
            <summary>Gets the default value of the Value property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DigitInputChars">
            <summary>Gets or sets the characters that are to be considered as digits.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DisplayFormatProvider">
            <summary>Gets or sets the custom format provider that will be used to display the WinNumericTextBox's Value.</summary>
            <remarks>    When the DisplayFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.     The list of values that can be passed to the     DisplayFormatSpecifier property can be found in the "Format     Specifiers and Format Providers" topic of the .NET     Framework.     The display format provider can differ from the     EditFormatProvider.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DisplayFormatSpecifier">
            <summary>Gets or sets the format specifier that will be used to display the WinNumericTextBox's Value.</summary>
            <remarks>    The list of values that can be passed to the     DisplayFormatSpecifier property can be found in the     "DisplayFormat Specifiers and DisplayFormat Providers" topic of     the .NET Framework.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DisplayNullText">
            <summary>Gets or sets the text that is displayed when the WinNumericTextBox's Value is NullValue.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.DropDownControl">
            <summary>Gets the WinCalculator used as the WinNumericTextBox's dropdown control.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.EditFormatProvider">
            <summary>Gets or sets the custom format provider that will be used to edit the WinNumericTextBox's Value.</summary>
            <remarks>    When the EditFormatProvider property is reset to its     default value, the current thread's culture settings will be     used.     The list of values that can be passed to the     EditFormatSpecifier property can be found in the "Format     Specifiers and Format Providers" topic of the .NET     Framework.     The edit format provider can differ from the     DisplayFormatProvider.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.InputMode">
            <summary>Gets or sets the WinNumericTextBox's input mode.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.MaxValue">
            <summary>Gets or sets the maximum value of Value property.</summary>
            <remarks>    The datatype of the MaxValue property can be retrieved     using the DataType property.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.MinValue">
            <summary>Gets or sets the minimum value of Value property.</summary>
            <remarks>    The datatype of the MinValue property can be retrieved     using the DataType property.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.NegativeSignInputChars">
            <summary>Gets or sets the characters that are to be considered as negative signs.</summary>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.NullValue">
            <summary>Gets or sets the $$NULL$$ value of the WinNumericTextBox control.</summary>
            <remarks>    The datatype of the NullValue property can be retrieved     using the DataType property.     If NullValue is assigned to the Value property,     DisplayNullText will be displayed in the WinNumericTextBox when     it loses focus.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.TextBoxArea">
            <summary>Gets the NumericTextBoxArea responsible for the text area of the WinNumericTextBox control.</summary>
            <remarks>    The TextBoxArea must be used to handle events such as the     mouse, keyboard and validation events.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinNumericTextBox.Value">
            <summary>Gets or sets the numeric value of the editor without seperators or other formatting characters.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DataTypeChanged">
            <summary>Raised when the value of the DataType property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DecimalsChanged">
            <summary>Raised when the value of the Decimals property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DecimalSeparatorInputCharsChanged">
            <summary>Raised when the value of the DecimalSeparatorInputChars property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DigitInputCharsChanged">
            <summary>Raised when the value of the DigitInputChars property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DisplayFormatProviderChanged">
            <summary>Raised when the value of the DisplayFormatProvider property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DisplayFormatSpecifierChanged">
            <summary>Raised when the value of the DisplayFormatSpecifier property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.DisplayNullTextChanged">
            <summary>Raised when the value of the DisplayNullText property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.EditFormatProviderChanged">
            <summary>Raised when the value of the EditFormatProvider property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.InputModeChanged">
            <summary>Raised when the value of the InputMode property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.MaxValueChanged">
            <summary>Raised when the value of the MaxValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.MinValueChanged">
            <summary>Raised when the value of the MinValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.NegativeSignInputCharsChanged">
            <summary>Raised when the value of the NegativeSignInputChars property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.NullValueChanged">
            <summary>Raised when the value of the NullValue property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinNumericTextBox.ValueChanged">
            <summary>Raised when the value of the Value property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinPanel">
            <summary>The WinPanel class represents an extensible and themable panel for Windows Forms.</summary>
            <remarks>    The WinPanel class represents an extensible and themable     panel for Windows Forms. It supports both Windows XP and     classic Windows themes and can adapt to the current Windows     Theme. The WinPanel control can contain any of the Xceed     editors as well as any other .NET control.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinPanel.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.#ctor">
            <summary>Initializes a new instance of the WinPanel class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.#ctor(Xceed.Editors.WinPanel)">
            <summary>Initializes a new instance of the WinPanel class specifying the WinPanel control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinPanel to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinPanel.CloseDropDown">
            <summary>Closes the DropDownControl associated with the panel.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.CreateDefaultDropDownControl">
            <summary>Creates the default DropDownControl.</summary>
            <returns>A Control representing the default DropDownControl.</returns>
        </member>
        <member name="M:Xceed.Editors.WinPanel.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnAllowDropDownChanged(System.EventArgs)">
            <summary>Raises the AllowDropDownChanged event.</summary>
            <remarks>When overriding OnAllowDropDownChanged in a derived class, be sure to call the base class's OnAllowDropDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnBorderStyleChanged(System.EventArgs)">
            <summary>Raises the BorderStyleChanged event.</summary>
            <remarks>When overriding OnBorderStyleChanged in a derived class, be sure to call the base class's OnBorderStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownAllowFocusChanged(System.EventArgs)">
            <summary>Raises the DropDownAllowFocusChanged event.</summary>
            <remarks>When overriding OnDropDownAllowFocusChanged in a derived class, be sure to call the base class's OnDropDownAllowFocusChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownAnchorChanged(System.EventArgs)">
            <summary>Raises the DropDownAnchorChanged event.</summary>
            <remarks>When overriding OnDropDownAnchorChanged in a derived class, be sure to call the base class's OnDropDownAnchorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownControlChanged(System.EventArgs)">
            <summary>Raises the DropDownControlChanged event.</summary>
            <remarks>When overriding OnDropDownControlChanged in a derived class, be sure to call the base class's OnDropDownControlChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownDirectionChanged(System.EventArgs)">
            <summary>Raises the DropDownDirectionChanged event.</summary>
            <remarks>When overriding OnDropDownDirectionChanged in a derived class, be sure to call the base class's OnDropDownDirectionChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownMaxSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMaxSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownMinSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMinSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownOpening(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the DropDownOpening event.</summary>
            <remarks>When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.</remarks>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDropDownResizableChanged(System.EventArgs)">
            <summary>Raises the DropDownResizableChanged event.</summary>
            <remarks>When overriding OnDropDownResizableChanged in a derived class, be sure to call the base class's OnDropDownResizableChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnDroppedDownChanged(System.EventArgs)">
            <summary>Raises the DroppedDownChanged event.</summary>
            <remarks>When overriding OnDroppedDownChanged in a derived class, be sure to call the base class's OnDroppedDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnEnabledChanged(System.EventArgs)">
            <summary>Raises the EnabledChanged event.</summary>
            <remarks>When overriding OnEnabledChanged in a derived class, be sure to call the base class's OnEnabledChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <remarks>When overriding OnLostFocus in a derived class, be sure to call the base class's OnLostFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnUIStyleChanged(System.EventArgs)">
            <summary>Raises the UIStyleChanged event.</summary>
            <remarks>When overriding OnUIStyleChanged in a derived class, be sure to call the base class's OnUiStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OnVisibleChanged(System.EventArgs)">
            <summary>Raises the VisibleChanged event.</summary>
            <remarks>When overriding OnVisibleChanged in a derived class, be sure to call the base class's OnVisibleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.OpenDropDown">
            <summary>Opens the DropDownControl associated with the panel.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinPanel.PaintBorders(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the borders of the panel.</summary>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>Processes a dialog key.</summary>
            <returns>true if the key was processed by the control; false otherwise.</returns>
            <remarks>    This method is called during message preprocessing to     handle dialog characters, such as TAB, RETURN, ESCAPE, and     arrow keys. This method is called only if the Keys) method     indicates that the control is not processing the key. The     ProcessDialogKey simply sends the character to the parent's     ProcessDialogKey method, or returns false if the control has no     parent.     When overriding the ProcessDialogKey method in a derived     class, a control should return true to indicate that it has     processed the key. For keys that are not processed by the     control, the result of calling the base class's     ProcessDialogChar method should be returned.</remarks>
            <param name="keyData">One of the Keys values that represents the key to process.</param>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetAllowDropDown">
            <summary>Resets the value of the AllowDropDown property to its default value, DefaultAllowDropDown.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetBorderStyle">
            <summary>Resets the value of the BorderStyle property to its default value, DefaultBorderStyle.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownAllowFocus">
            <summary>Resets the value of the DropDownAllowFocus property to its default value, DefaultDropDownAllowFocus.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownAnchor">
            <summary>Resets the value of the DropDownAnchor property to its default value, DefaultDropDownAnchor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownControl">
            <summary>Resets the value of the DropDownControl property to its default value, $$NULL$$.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownDirection">
            <summary>Resets the value of the DropDownDirection property to its default value, DefaultDropDownDirection.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownMaxSize">
            <summary>Resets the value of the DropDownMaxSize property to its default value, DefaultDropDownMaxSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownMinSize">
            <summary>Resets the value of the DropDownMinSize property to its default value, DefaultDropDownMinSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.ResetDropDownResizable">
            <summary>Resets the value of the DropDownResizable property to its default value, DefaultDropDownResizable.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.SetDropDownControlCore(System.Windows.Forms.Control)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>Processes Windows messages.</summary>
            <param name="mesg">The Message to process.</param>
        </member>
        <member name="P:Xceed.Editors.WinPanel.AllowDropDown">
            <summary>Gets or sets a boolean value indicating if the dropdown can be shown.</summary>
            <remarks>    Setting the AllowDropDown property to false does not     imply that the DropDownControl is $$NULL$$.     If the AllowDropDown property is set to false, an     exception will be thrown if an attempt is made to open the     dropdown programatically using the DroppedDown property or the     OpenDropDown method.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.BorderStyle">
            <summary>Gets or sets the border style of the panel.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.CreateParams">
            <summary>Gets the required creation parameters when the control handle is created.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultAllowDropDown">
            <summary>Gets the default value of the AllowDropDown property.</summary>
            <remarks>    When overriding DefaultAllowDropDown in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultBorderStyle">
            <summary>Gets the default value of the BorderStyle property.</summary>
            <remarks>    When overriding DefaultBorderStyle in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownAllowFocus">
            <summary>Gets the default value of the DropDownAllowFocus property.</summary>
            <remarks>    When overriding DefaultDropDownAllowFocus in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownAnchor">
            <summary>Gets the default value of the DropDownAnchor property.</summary>
            <remarks>    When overriding DefaultDropDownAnchor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownDirection">
            <summary>Gets the default value of the DropDownDirection property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownMaxSize">
            <summary>Gets the default value of the DropDownMaxSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownMinSize">
            <summary>Gets the default value of the DropDownMinSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultDropDownResizable">
            <summary>Gets the default value of the DropDownResizable property.</summary>
            <remarks>    When overriding DefaultDropDownResizable in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownAllowFocus">
            <summary>Gets or sets a value indicating if the panel's DropDownControl can receive the focus.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownAnchor">
            <summary>Gets or sets the location of the DropDownControl's anchor.</summary>
            <remarks>                          Right             The dropdown control is anchored on the             right.                               Left             The dropdown control is anchored on the             left.                   The position of the dropdown's resizing grip will be at     the opposite of the dropdown's anchor point. For example, in     the first image, the DropDownAnchor property is set to     DropDownAnchor.Left, and its resizing grip is located on the     right. In the second image, the DropDownAnchor property is set     to DropDownAnchor.Right; therefore, the resizing grip is     located on the left.     </remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownControl">
            <summary>Get or sets the control displayed in the dropdown area when DroppedDown is set to true.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownDirection">
            <summary>Gets or sets the direction in which the panel's dropdown will open.</summary>
            <remarks>                          Automatic             The dropdown will open below the control             if enough space is available. If there is not enough             space below the control, the dropdown will open above             it.                               Up             The dropdown will open above the             control.                               Down             The dropdown will open below the             control.              </remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownGripLocation">
            <summary>Gets the location of the DropDownControl's resizing grip." ),</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownMaxSize">
            <summary>Gets or sets the maximum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownMinSize">
            <summary>Gets or sets the minimum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownResizable">
            <summary>Gets or sets a boolean value indicating if the DropDownControl is resizable.</summary>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DropDownSize">
            <summary>Gets or sets the size of the dropdown.</summary>
            <remarks>    The size of the dropdown is initially determined by the     size of the control used as the DropDownControl. If the size of     the dropdown control is changed (DropDownControl.Size) while     the dropdown is open, the size of the dropdown will be     readjusted when the dropdown is reopened. If the size is     changed via the DropDownSize property, the changed will be     immediately reflected.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.DroppedDown">
            <summary>Gets or sets a value indicating whether the panel is displaying its dropdown portion.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.TabStop">
            <summary>Gets or sets a boolean value indicating whether the user can give the focus to this control using the TAB key.</summary>
            <remarks>    When the user presses the TAB key, the input focus is set     to the next control in the tab order. Controls with the TabStop     property value of false are not included in the collection of     controls in the tab order. The tab order can be manipulated by     setting the TabIndex property.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinPanel.Text">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.AllowDropDownChanged">
            <summary>Raised when the value of the AllowDropDown property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.BorderStyleChanged">
            <summary>Raised when the value of the BorderStyle property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownAllowFocusChanged">
            <summary>Raised when the value of the DropDownAllowFocus property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownAnchorChanged">
            <summary>Raised when the value of the DropDownAnchor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownControlChanged">
            <summary>Raised when the value of the DropDownControl property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownDirectionChanged">
            <summary>Raised when the value of the DropDownDirection property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownMaxSizeChanged">
            <summary>Raised when the value of the DropDownMaxSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownMinSizeChanged">
            <summary>Raised when the value of the DropDownMinSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownOpening">
            <summary>Raised when the DropDownControl associated with the panel is opening.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DropDownResizableChanged">
            <summary>Raised when the value of the DropDownResizable property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinPanel.DroppedDownChanged">
            <summary>Raised when the value of the DroppedDown property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinScrollBar">
            <summary>The WinScrollBar class represents an extensible and themable scrollbar for Windows Forms.</summary>
            <remarks>    The WinScrollBar class represents an extensible and     themable scrollbar for Windows Forms. It supports both Windows     XP and classic Windows themes and can adapt to the current     Windows theme.     Both the WinHorizontalScrollBar and WinVerticalScrollBar     classes derive from the WinScrollBar class.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnEnabledChanged(System.EventArgs)">
            <summary>Raises the EnabledChanged event.</summary>
            <remarks>When overriding OnEnabledChanged in a derived class, be sure to call the base class's OnEnabledChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnLargeChangeChanged(System.EventArgs)">
            <summary>Raises the LargeChangeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMaximumChanged(System.EventArgs)">
            <summary>Raises the MaximumChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMinimumChanged(System.EventArgs)">
            <summary>Raises the MinimumChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <remarks>When overriding OnMouseDown in a derived class, be sure to call the base class's OnMouseDown method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <remarks>When overriding OnMouseLeave in a derived class, be sure to call the base class's OnMouseLeave method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event.</summary>
            <remarks>When overriding OnMouseMove in a derived class, be sure to call the base class's OnMouseMove method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <remarks>When overriding OnMouseUp in a derived class, be sure to call the base class's OnMouseUp method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnScroll(System.Windows.Forms.ScrollEventArgs)">
            <summary>Raises the Scroll event.</summary>
            <remarks>When overriding OnScroll in a derived class, be sure to call the base class's OnScroll method so that registered delegates receive the event.</remarks>
            <param name="e">A ScrollEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnSizeChanged(System.EventArgs)">
            <summary>Raises the SizeChanged event.</summary>
            <remarks>When overriding OnSizeChanged in a derived class, be sure to call the base class's OnSizeChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnSmallChangeChanged(System.EventArgs)">
            <summary>Raises the SmallChangeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.OnValueChanged(System.EventArgs)">
            <summary>Raises the ValueChanged event.</summary>
            <remarks>When overriding OnValueChanged in a derived class, be sure to call the base class's OnValueChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.PerformScroll(Xceed.Editors.ScrollType)">
            <summary>Raises the Scroll event using the specified ScrollType.</summary>
            <remarks>    This method allows you to raise the Scroll event without     passing any event information to the event handler.</remarks>
            <param name="scrollType">A ScrollType value representing the type of scroll action used to scroll.</param>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value, DefaultBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.ResetLargeChange">
            <summary>Resets the value of the LargeChange property to its default value, DefaultLargeChange.</summary>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.ResetMaximum">
            <summary>Resets the value of the Maximum property to its default value, DefaultMaximum.</summary>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.ResetMinimum">
            <summary>Resets the value of the Minimum property to its default value, DefaultMinimum.</summary>
        </member>
        <member name="M:Xceed.Editors.WinScrollBar.ResetSmallChange">
            <summary>Resets the value of the SmallChange property to its default value, DefaultSmallChange.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.BackColor">
            <summary>Gets or sets the background color of the scrollbar.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.BackgroundImage">
            <summary>Gets or sets the background image displayed in the scrollbar.</summary>
            <remarks>    Setting this property will throw a     NotSupportedException.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.DefaultBackColor">
            <summary>Gets the default value of BackColor property.</summary>
            <remarks>    When overriding DefaultBackColor in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.DefaultLargeChange">
            <summary>Gets the default value of the LargeChange property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.DefaultMaximum">
            <summary>Gets the default value of the Maximum property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.DefaultMinimum">
            <summary>Gets the default value of the Minimum property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.DefaultSmallChange">
            <summary>Gets the default value of the SmallChange property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.LargeChange">
            <summary>Gets or sets the value to be added to or subtracted from the Value property when the scroll thumb is moved a large distance.</summary>
            <remarks>    When the user presses the PAGE UP or PAGE DOWN key or     clicks in the scroll bar track on either side of the scroll     thumb, the Value property changes according to the value set in     the LargeChange property.     You might consider setting the LargeChange value to a     percentage of the Height (for a vertically oriented scroll bar)     or Width (for a horizontally oriented scroll bar) values. This     keeps the distance your scroll bar moves in proportion to its     size.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.Maximum">
            <summary>Gets or sets the upper limit of values of the scrollable range.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.Minimum">
            <summary>Gets or sets the lower limit of values of the scrollable range.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.RightToLeft">
            <summary>Gets or sets a value indicating if the text displayed by the scrollbar is displayed from right to left.</summary>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.SmallChange">
            <summary>Gets or sets the value to be added to or subtracted from the Value property when the scroll thumb is moved a small distance.</summary>
            <remarks>    When the user presses one of the arrow keys or clicks one     of the scroll bar buttons, the Value property changes according     to the value set in the SmallChange property.     You might consider setting the SmallChange value to a     percentage of the Height (for a vertically oriented scroll bar)     or Width (for a horizontally oriented scroll bar) values. This     keeps the distance your scroll bar moves in proportion to its     size.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinScrollBar.Value">
            <summary>Gets or sets a value that represents the current position of the scroll thumb on the scrollbar.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.LargeChangeChanged">
            <summary>Raised when the value of the LargeChange property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.MaximumChanged">
            <summary>Raised when the value of the Maximum property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.MinimumChanged">
            <summary>Raised when the value of the Minimum property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.Scroll">
            <summary>Raised when the scroll thumb has been moved by either a mouse or keyboard action.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.SmallChangeChanged">
            <summary>Raised when the value of the SmallChange property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinScrollBar.ValueChanged">
            <summary>Raised when the value of the Value property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinTextBox">
            <summary>The WinTextBox class represents an extensible and themable textbox control for Windows Forms.</summary>
            <remarks>    The WinTextBox class represents an extensible and     themable textbox control for Windows Forms which can be used as     a regular or masked textbox, as well as a container control. It     supports both Windows XP and classic Windows themes and can     adapt to the current Windows Theme. The WinTexBox control can     contain any of the Xceed editors as well as any other .NET     control.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.#ctor">
            <summary>Initializes a new instance of the WinTextBox class, creating a new TextBox to use as the TextBoxArea.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.#ctor(Xceed.Editors.EnhancedBorderStyle)">
            <summary>Initializes a new instance of the WinTextBox class specifying its border style.</summary>
            <param name="borderStyle">An EnhancedBorderStyle value representing the WinTextBox's border.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.#ctor(System.Type,Xceed.Editors.EnhancedBorderStyle)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.#ctor(Xceed.Editors.WinTextBox)">
            <summary>Initializes a new instance of the WinTextBox class specifying the WinTextBox control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinTextBox to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.BeginInit">
            <summary>Signals the beginning of a batch modification process.</summary>
            <remarks>    All operations called after BeginInit will be performed     once EndInit is called.     When overriding BeginInit in a derived class, the base     implementation must be called.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.CloseDropDown">
            <summary>Closes the DropDownControl associated with the textbox.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.CreateDefaultDropDownControl">
            <summary>Creates the default DropDownControl.</summary>
            <returns>A Control representing the default DropDownControl.</returns>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.Dispose">
            <summary>Releases all resources used by the control.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.Dispose(System.Boolean)">
            <summary>Releases all resources used by the control.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.EndInit">
            <summary>Signals the end of a batch modification process.</summary>
            <remarks>    All operations called after BeginInit will be performed     once EndInit is called.     When overriding EndInit in a derived class, the base     implementation must be called.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnAllowDropDownChanged(System.EventArgs)">
            <summary>Raises the AllowDropDownChanged event.</summary>
            <remarks>When overriding OnAllowDropDownChanged in a derived class, be sure to call the base class's OnAllowDropDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownAllowFocusChanged(System.EventArgs)">
            <summary>Raises the DropDownAllowFocusChanged event.</summary>
            <remarks>When overriding OnDropDownAllowFocusChanged in a derived class, be sure to call the base class's OnDropDownAllowFocusChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownAnchorChanged(System.EventArgs)">
            <summary>Raises the DropDownAnchorChanged event.</summary>
            <remarks>When overriding OnDropDownAnchorChanged in a derived class, be sure to call the base class's OnDropDownAnchorChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownButtonChanged(System.EventArgs)">
            <summary>Raises the DropDownButtonChanged event.</summary>
            <remarks>When overriding OnDropDownButtonChanged in a derived class, be sure to call the base class's OnDropDownButtonChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownControlChanged(System.EventArgs)">
            <summary>Raises the DropDownControlChanged event.</summary>
            <remarks>When overriding OnDropDownControlChanged in a derived class, be sure to call the base class's OnDropDownControlChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownDirectionChanged(System.EventArgs)">
            <summary>Raises the DropDownDirectionChanged event.</summary>
            <remarks>When overriding OnDropDownDirectionChanged in a derived class, be sure to call the base class's OnDropDownDirectionChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownMaxSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMaxSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownMinSizeChanged(System.EventArgs)">
            <summary>Raises the DropDownMinSizeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownOpening(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the DropDownOpening event.</summary>
            <remarks>When overriding OnDropDownOpening in a derived class, be sure to call the base class's OnDropDownOpening method so that registered delegates receive the event.</remarks>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDropDownResizableChanged(System.EventArgs)">
            <summary>Raises the DropDownResizableChanged event.</summary>
            <remarks>When overriding OnDropDownResizableChanged in a derived class, be sure to call the base class's OnDropDownResizableChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnDroppedDownChanged(System.EventArgs)">
            <summary>Raises the DroppedDownChanged event.</summary>
            <remarks>When overriding OnDropDownChanged in a derived class, be sure to call the base class's OnDropDownChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnEnabledChanged(System.EventArgs)">
            <summary>Raises the EnabledChanged event.</summary>
            <remarks>When overriding OnEnabledChanged in a derived class, be sure to call the base class's OnEnabledChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnLocationChanged(System.EventArgs)">
            <summary>Raises the LocationChanged event.</summary>
            <remarks>When overriding OnLocationChanged in a derived class, be sure to call the base class's OnLocationChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnLostFocus(System.EventArgs)">
            <summary>Raises the LostFocus event.</summary>
            <remarks>When overriding OnLostFocus in a derived class, be sure to call the base class's OnLostFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OnVisibleChanged(System.EventArgs)">
            <summary>Raises the VisibleChanged event.</summary>
            <remarks>When overriding OnVisibleChanged in a derived class, be sure to call the base class's OnVisibleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.OpenDropDown">
            <summary>Opens the DropDownControl associated with the textbox.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetAllowDropDown">
            <summary>Resets the value of the AllowDropDown property to its default value, DefaultAllowDropDown.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownAllowFocus">
            <summary>Resets the value of the DropDownAllowFocus property to its default value, DefaultDropDownAllowFocus.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownAnchor">
            <summary>Resets the value of the DropDownAnchor property to its default value, DefaultDropDownAnchor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownButton">
            <summary>Resets the value of the DropDownButton property to its default value, DefaultDropDownButton.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownControl">
            <summary>Resets the value of the DropDownControl to its default value, $$NULL$$.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownDirection">
            <summary>Resets the value of the DropDownDirection property to its default value, DefaultDropDownDirection.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownMaxSize">
            <summary>Resets the value of the DropDownMaxSize property to its default value, DefaultDropDownMinSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownMinSize">
            <summary>Resets the value of the DropDownMinSize property to its default value, DefaultDropDownMinSize.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.ResetDropDownResizable">
            <summary>Resets the value of the DropDownResizable property to its default value, DefaultDropDownResizable.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.SetDropDownButtonDefaults(Xceed.Editors.WinButton)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBox.SetDropDownControlCore(System.Windows.Forms.Control)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.AllowDropDown">
            <summary>Gets or sets a boolean value indicating if the dropdown can be shown.</summary>
            <remarks>    Setting the AllowDropDown property to false does not     imply that the DropDownControl is $$NULL$$.     If the AllowDropDown property is set to false, the     DropDownButton will be hidden and an exception will be thrown     if an attempt is made to open the dropdown programatically     using the DroppedDown property or the OpenDropDown     method.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultAllowDropDown">
            <summary>Gets the default value of the AllowDropDown property.</summary>
            <remarks>    When overriding DefaultAllowDropDown in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownAllowFocus">
            <summary>Gets the default value of the DropDownAllowFocus property.</summary>
            <remarks>    When overriding DefaultDropDownAllowFocus in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownAnchor">
            <summary>Gets the default value of the DropDownAnchor property.</summary>
            <remarks>    When overriding DefaultDropDownAnchor in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownButton">
            <summary>Gets the default value of the DropDownButton property.</summary>
            <remarks>    When overriding DefaultDropDownButton in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownDirection">
            <summary>Gets the default value of the DropDownDirection property.</summary>
            <remarks>    When overriding DefaultDropDownDirection in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownMaxSize">
            <summary>Gets the default value of the DropDownMaxSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownMinSize">
            <summary>Gets the default value of the DropDownMinSize property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DefaultDropDownResizable">
            <summary>Gets the default value of the DropDownResizable property.</summary>
            <remarks>    When overriding DefaultDropDownResizable in a derived     class, the value returned by your implementation should     not be dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownAllowFocus">
            <summary>Gets or sets a value indicating if the textbox's DropDownControl can receive the focus.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownAnchor">
            <summary>Gets or sets the location of the DropDownControl's anchor.</summary>
            <remarks>                          Right             The dropdown control is anchored on the             right.                               Left             The dropdown control is anchored on the             left.                   The position of the dropdown's resizing grip will be at     the opposite of the dropdown's anchor point. For example, in     the first image, the DropDownAnchor property is set to     DropDownAnchor.Left, and its resizing grip is located on the     right. In the second image, the DropDownAnchor property is set     to DropDownAnchor.Right; therefore, the resizing grip is     located on the left.     </remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownButton">
            <summary>Gets or sets the WinButton to use to drop-down the DropDownControl associated with the textbox.</summary>
            <remarks>    A WinButton control can only be assigned as the dropdown     button of one control.     If the WinButton control is part of the SideButtons     collection of a WinTextBox (or derived) control, and is     assigned as the WinTextBox control's DropDownButton, the     default value of the AutoSizeMode property will be     AutoSizeMode.ScrollBarWidth.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownControl">
            <summary>Get or sets the control displayed in the dropdown area when DroppedDown is set to true.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownDirection">
            <summary>Gets or sets the direction in which the textbox's dropdown will open.</summary>
            <remarks>                          Automatic             The dropdown will open below the control             if enough space is available. If there is not enough             space below the control, the dropdown will open above             it.                               Up             The dropdown will open above the             control.                               Down             The dropdown will open below the             control.              </remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownGripLocation">
            <summary>Gets the location of the DropDownControl's resizing grip." ),</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownMaxSize">
            <summary>Gets or sets the maximum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownMinSize">
            <summary>Gets or sets the minimum size the DropDownControl can have when it is resized.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownResizable">
            <summary>Gets or sets a boolean value indicating if the DropDownControl is resizable.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DropDownSize">
            <summary>Gets or sets the size of the dropdown.</summary>
            <remarks>    The size of the dropdown is initially determined by the     size of the control used as the DropDownControl. If the size of     the dropdown control is changed (DropDownControl.Size) while     the dropdown is open, the size of the dropdown will be     readjusted when the dropdown is reopened. If the size is     changed via the DropDownSize property, the changed will be     immediately reflected.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.DroppedDown">
            <summary>Gets or sets a value indicating whether the textbox is displaying its dropdown portion.</summary>
            <remarks>    If the AllowDropDown property is set to false, an     exception will be thrown when trying to open the     DropDownControl.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBox.InBatchInitialization">
            <summary>Gets a boolean value indicating if the textbox is in batch initialization mode.</summary>
            <remarks>    The textbox is in batch initialization mode when the     BeginInit and EndInit methods are used.</remarks>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.AllowDropDownChanged">
            <summary>Raised when the value of the AllowDropDown property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownAllowFocusChanged">
            <summary>Raised when the value of the DropDownAllowFocus property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownAnchorChanged">
            <summary>Raised when the value of the DropDownAnchor property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownButtonChanged">
            <summary>Raised when the value of the DropDownButton property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownControlChanged">
            <summary>Raised when the value of the DropDownControl property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownDirectionChanged">
            <summary>Raised when the value of the DropDownDirection property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownMaxSizeChanged">
            <summary>Raised when the value of the DropDownMaxSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownMinSizeChanged">
            <summary>Raised when the value of the DropDownMinSize property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownOpening">
            <summary>Raised when the DropDownControl associated with the textbox is opening.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DropDownResizableChanged">
            <summary>Raised when the value of the DropDownResizable property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBox.DroppedDownChanged">
            <summary>Raised when the value of the DroppedDown property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinTextBoxBase">
            <summary>The WinTextBox class represents an extensible and themable textbox control for Windows Forms.</summary>
            <remarks>    The WinTextBox class represents an extensible and     themable textbox control for Windows Forms which can be used as     a regular or masked textbox, as well as a container control. It     supports both Windows XP and classic Windows themes and can     adapt to the current Windows Theme. The WinTexBox control can     contain any of the Xceed editors as well as any other .NET     control.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.CalculatePadding">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.CreateControlsInstance">
            <summary>Creates a new instance of the control collection for the control.</summary>
            <returns>A new instance of ControlCollection assigned to the control.</returns>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.CreateTextBoxArea">
            <summary>Creates the TextBoxArea to which will be contained by the WinTextBoxBase control.</summary>
            <returns>A reference to a TextBoxArea representing the TextBoxArea contained by the WinTextBoxBase control.</returns>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.GetBorders">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.GetDefaultBorders(Xceed.Editors.EnhancedBorderStyle,Xceed.UI.Theme)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.GetDefaultTextPadding(Xceed.Editors.EnhancedBorderStyle,Xceed.UI.Theme)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.IsInputChar(System.Char)">
            <summary>Determines if a character is an input character that the control recognizes.</summary>
            <returns>true if the character should be sent directly to the control and not preprocessed; false otherwise.</returns>
            <param name="charCode">The character to test.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</summary>
            <returns>true if the specified key is a regular input key; false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnBackgroundImageChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnBorderStyleChanged(System.EventArgs)">
            <summary>Raises the BorderStyleChanged event.</summary>
            <remarks>When overriding OnBorderStyleChanged in a derived class, be sure to call the base class's OnBorderStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnGotFocus(System.EventArgs)">
            <summary>Raises the GotFocus event.</summary>
            <remarks>When overriding OnGotFocus in a derived class, be sure to call the base class's OnGotFocus method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnStyleChanged(System.EventArgs)">
            <summary>Raises the StyleChanged event.</summary>
            <remarks>When overriding OnStyleChanged in a derived class, be sure to call the base class's OnStyleChanged method so that registered delegates receive the event.</remarks>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnTextChanged(System.EventArgs)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.OnTextPaddingChanged(System.EventArgs)">
            <summary>Raises the TextPaddingChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.PaintBorders(System.Windows.Forms.PaintEventArgs)">
            <summary>Paints the borders of the textbox.</summary>
            <remarks>When overriding PaintBorders in a derived class, be sure to call the base class's PaintBorders method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.ResetBackColor">
            <summary>Resets the value of the BackColor property to its default value, DefaultBackColor.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.ResetBorderStyle">
            <summary>Resets the value of the BorderStyle property to its default value, DefaultBorderStyle.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.ResetText">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.ResetTextPadding">
            <summary>Resets the value of the TextPadding property to its default value, DefaultTextPadding.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.SetAutoScrollMargin(System.Int32,System.Int32)">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.UpdateDockedComponentsPosition">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinTextBoxBase.WndProc(System.Windows.Forms.Message@)">
            <summary>Processes Windows messages.</summary>
            <param name="mesg">The Message to process.</param>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.AutoScroll">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.AutoScrollMargin">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.AutoScrollMinSize">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.AutoScrollPosition">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.BackColor">
            <summary>Gets or sets the background color of the textbox.</summary>
            <remarks>    The textbox and the TextBoxArea both use the same     background color however changing the BackColor property of the     textbox will not invalidate its container.     It is recommended that the background color be set     directly on the textbox and not the TextBoxArea.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.BackgroundImage">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.BorderStyle">
            <summary>Gets or sets the border style of the textbox.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.ContextMenu">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.CreateParams">
            <summary>Gets the required creation parameters when the control handle is created.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.DefaultBackColor">
            <summary>Gets the default value of BackColor property.</summary>
            <remarks>    When overriding DefaultBackColor in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.DefaultBorderStyle">
            <summary>Gets the default value of the BorderStyle property.</summary>
            <remarks>    When overriding DefaultBorderStyle in a derived class,     the value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.DefaultTabStop">
            <summary>Gets the default value of the TabStop property.</summary>
            <remarks>    When overriding DefaultTabStop in a derived class, the     value returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.DefaultTextPadding">
            <summary>Gets the default value of the TextPadding property.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.ForeColor">
            <summary>Gets or sets the foreground color of the textbox.</summary>
            <remarks>    The textbox and the TextBoxArea both use the same     foregrouns color however changing the ForeColor property of the     textbox will not invalidate its container.     It is recommended that the foreground color be set     directly on the textbox and not the TextBoxArea.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.PreferredHeight">
            <summary>Gets the preferred height for a single-line textbox.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.TabStop">
            <summary>Gets or sets a boolean value indicating whether the user can give the focus to this control using the TAB key.</summary>
            <remarks>    When the user presses the TAB key, the input focus is set     to the next control in the tab order. Controls with the TabStop     property value of false are not included in the collection of     controls in the tab order. The tab order can be manipulated by     setting the TabIndex property.     Note that in order for the WinTextBox control to gain     focus when the TAB key is pressed, the TextBoxArea's TabStop     property must be set to true.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.Text">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.TextBoxArea">
            <summary>Gets the TextBoxArea responsible for the text area of the WinTextBoxBase control.</summary>
            <remarks>    The TextBoxArea must be used to handle events such as the     mouse, keyboard and validation events.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinTextBoxBase.TextPadding">
            <summary>Gets or sets the Text's padding.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBoxBase.BackgroundImageChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBoxBase.BorderStyleChanged">
            <summary>Raised when the value of the BorderStyle property is changed.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBoxBase.TextChanged">
            <summary>This event is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="E:Xceed.Editors.WinTextBoxBase.TextPaddingChanged">
            <summary>Raised when the value of the TextPadding property is changed.</summary>
        </member>
        <member name="T:Xceed.Editors.WinVerticalScrollBar">
            <summary>The WinVerticalScrollBar class represents an extensible and themable vertical scrollbar for Windows Forms.</summary>
            <remarks>    The WinVerticalScrollBar class represents an extensible     and themable vertical scrollbar for Windows Forms. It supports     both Windows XP and classic Windows themes and can adapt to the     current Windows theme.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.#ctor">
            <summary>Initializes a new instance of the WinScrollBar class.</summary>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.#ctor(Xceed.Editors.WinVerticalScrollBar)">
            <summary>Initializes a new instance of the WinVerticalScrollBar class specifying the WinVerticalScrollBar control that will be used as a template.</summary>
            <remarks>    If the Clone method is used, all property values will be     cloned however event handlers will not.</remarks>
            <param name="template">The WinVerticalScrollBar to use as a template.</param>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.AdjustToSystemColors">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.Clone">
            <summary>Creates a shallow copy of the control.</summary>
            <returns>An Object representing the shallow copy of the control.</returns>
            <remarks>    All property values will be cloned however event handlers     will not.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the scrollbar.</summary>
            <returns>A new AccessibleObject for the scrollbar.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseMove event</summary>
            <remarks>When overriding OnMouseMove in a derived class, be sure to call the base class's OnMouseMove method so that registered delegates receive the event.</remarks>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>Raises the Paint event.</summary>
            <remarks>When overriding OnPaint in a derived class, be sure to call the base class's OnPaint method so that registered delegates receive the event.</remarks>
            <param name="e">A PaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.Editors.WinVerticalScrollBar.ResetSize">
            <summary>Resets the value of the Size property to its default value.</summary>
        </member>
        <member name="P:Xceed.Editors.WinVerticalScrollBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.Editors.WinVerticalScrollBar.UIState">
            <summary>This property is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="T:Xceed.Editors.CalculatorErrorEventHandler">
            <summary>Represents the method that will handle the Error event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A CalculatorErrorEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.CalculatorFunctionEventHandler">
            <summary>Represents the method that will handle the FunctionExecuted and ButtonClicked events.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A CalculatorFunctionEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.CurrentDateChangedEventHandler">
            <summary>Represents the method that will handle the CurrentDateChanged event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A CurrentDateChangedEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.DayEventHandler">
            <summary>Represents the method that will handle the DayMouseLeave, DayMouseHover, DayClick, and DayDoubleClick events.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A DayEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.DayMouseEventHandler">
            <summary>Represents the method that will handle the DayMouseUp, DayMouseDown, and DayMouseMove events.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A DayMouseEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.FormatTitleButtonTextEventHandler">
            <summary>Represents the method that will handle the FormatTitleButtonText event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A FormatTitleButtonTextEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.PaintDayEventHandler">
            <summary>Represents the method that will handle the PaintDay event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A PaintDayEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.PaintWeekDayNameEventHandler">
            <summary>Represents the method that will handle the PaintWeekDayName event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A PaintWeekDayNameEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.SelectedDateChangedEventHandler">
            <summary>Represents the method that will handle the SelectedDateChanged event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A SelectedDateChangedEventArgs that contains the event data.</param>
        </member>
        <member name="T:Xceed.Editors.ValidatingTextEventHandler">
            <summary>Represents the method that will handle the ValidatingText event.</summary>
            <param name="sender">The object on which the method was called.</param>
            <param name="e">A ValidatingTextEventArgs that contains the event data.</param>
        </member>
    </members>
</doc>
