<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<doc>
    <assembly>
        <name>Xceed.SmartUI.Controls</name>
    </assembly>
    <members>
        <member name="N:Xceed.SmartUI.Controls.CheckedListBox">
            <summary>Represents a SmartControl designed to be used as a checked listbox.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem">
            <summary>Represents a SmartItem designed to be used as a checkbox for the SmartCheckedListBox SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.#ctor">
            <summary>Initializes a new instance of the CheckedListBoxItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.#ctor">
            <summary>Initializes a new instance of the CheckedListBoxItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the CheckedListBoxItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.#ctor(System.String)">
            <summary>Initializes a new instance of the CheckedListBoxItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the CheckedListBoxItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.Checked">
            <summary>Gets or set a value indicating whether the SmartItem is in the checked state.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxItem.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxLayout">
            <summary>Represents a layout designed to be used by the SmartCheckedListBox SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.CheckedListBoxLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox">
            <summary>Represents a SmartControl designed to be used as a CheckedListBox.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.#ctor">
            <summary>Initializes a new instance of the SmartCheckedListBox class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartCheckedListBox class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartCheckedListBox.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartCheckedListBox. Unless overridden, CheckedListBoxLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartCheckedListBox.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartCheckedListBox.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.CheckedListBox.SmartCheckedListBox.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartCheckedListBox.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="N:Xceed.SmartUI.Controls.ExplorerTaskPane">
            <summary>Represents a SmartControl designed to be used as a Windows Explorer-style taskpane.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ExplorerTaskPane.ExplorerTaskPaneLayout">
            <summary>Represents a layout designed to be used by the SmartExplorerTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.ExplorerTaskPaneLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ExplorerTaskPane.Group">
            <summary>Represents a SmartItem designed to be used as a group for the SmartExplorerTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.#ctor(System.String)">
            <summary>Initializes a new instance of the Group class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.AllowTabStop(Xceed.SmartUI.SmartItem,System.Boolean)">
            <summary>Retrieves a boolean value indicating whether the user can give the focus to this SmartItem using the TAB key.</summary>
            <returns>[LangWord]true if the SmartItem cab receive focus; [LangWord]false otherwise. Unless overridden, [LangWord]true is always returned.</returns>
            <param name="selectedSmartItem">A reference to the currently selected SmartItem.</param>
            <param name="forward">[LangWord]true if the tab direction is going forward; [LangWord]false if it is going backwards.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the group.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the group. Unless overridden, GroupLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.HitTest">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.HitTest(System.Drawing.Point)">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
            <returns>A SmartItemSection value representing the section of the SmartItem at the specified Point.</returns>
            <param name="point">A Point structure representing the location of the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.MakeVisible">
            <summary>Renders the SmartItem visible no matter its state or its parent's state.</summary>
            <remarks>    When overriding MakeVisible in a derived class, you must     make sure that the SmartItem is always made visible, no matter     its state or its parent state. For example, if the SmartItem is     in a collapsed group, the group should be expanded.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnExpandedChanged(System.EventArgs)">
            <summary>Raises the ExpandedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnItemSpacingChanged(System.EventArgs)">
            <summary>Raises the ItemSpacingChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.OnSpecialGroupChanged(System.EventArgs)">
            <summary>Raises the SpecialGroupChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.DefaultCursor">
            <summary>Gets the default value of the Cursor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the group.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.Expanded">
            <summary>Gets or sets a boolean value indicating if the group is expanded.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.ItemSpacing">
            <summary>Gets or sets the spacing between the items in a group.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the group.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.SpecialGroup">
            <summary>Gets or sets a boolean value indicating if the group is a special group.</summary>
            <remarks>    A special group is a group that, by default, has a darker     header and a larger image. For example, the "My Music" group in     Windows Explorer is a special group.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.ExpandedChanged">
            <summary>Raised when the value of the Expanded property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.ItemSpacingChanged">
            <summary>Raised when the value of the ItemSpacing property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ExplorerTaskPane.Group.SpecialGroupChanged">
            <summary>Raised when the value of the SpecialGroup property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ExplorerTaskPane.GroupLayout">
            <summary>Represents a layout designed to be used by the Group SmartItem.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.GroupLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.GroupLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane">
            <summary>Represents a SmartControl designed to be used as an Explorer taskpane.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.#ctor">
            <summary>Initializes a new instance of the SmartExplorerTaskPane class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartExplorerTaskPane class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartExplorerTaskPane.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartExplorerTaskPane. Unless overridden, ExplorerTaskPaneLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartExplorerTaskPane.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, WindowsXP and ResourceAssembly     UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.OnGroupSpacingChanged(System.EventArgs)">
            <summary>Raises the GroupSpacingChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.OnMarginWidthChanged(System.EventArgs)">
            <summary>Raises the MarginWidthChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.Dock">
            <summary>Gets or sets which edge of the parent container the control is docked to.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartExplorerTaskPane.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.GroupSpacing">
            <summary>Gets or sets the spacing between the groups in a SmartExplorerTaskPane.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.MarginWidth">
            <summary>Gets or sets the width of the margin surrounding the SmartExplorerTaskPane.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartExplorerTaskPane.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.GroupSpacingChanged">
            <summary>Raised when the value of the GroupSpacing property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ExplorerTaskPane.SmartExplorerTaskPane.MarginWidthChanged">
            <summary>Raised when the value of the MarginWidth property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ExplorerTaskPane.Task">
            <summary>Represents a SmartItem designed to be used as a task for the SmartExplorerTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.#ctor">
            <summary>Initializes a new instance of the Task class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.#ctor">
            <summary>Initializes a new instance of the Task class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Task class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.#ctor(System.String)">
            <summary>Initializes a new instance of the Task class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Task class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.AllowTabStop(Xceed.SmartUI.SmartItem,System.Boolean)">
            <summary>Retrieves a boolean value indicating whether the user can give the focus to this SmartItem using the TAB key.</summary>
            <returns>[LangWord]true if the SmartItem cab receive focus; [LangWord]false otherwise.</returns>
            <param name="selectedSmartItem">A reference to the currently selected SmartItem.</param>
            <param name="forward">[LangWord]true if the tab direction is going forward; [LangWord]false if it is going backwards.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.CanBeSelected">
            <summary>Gets a boolean value indicating if the SmartItem can be selected.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ExplorerTaskPane.Task.DefaultCursor">
            <summary>Gets the default value of the Cursor property.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.MenuBar">
            <summary>Represents a SmartControl designed to be used as a menubar.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem">
            <summary>Represents a SmartItem designed to be used as a checkable menu item for the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.#ctor">
            <summary>Initializes a new instance of the CheckMenuItem class .</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.#ctor">
            <summary>Initializes a new instance of the CheckMenuItem class .</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the CheckMenuItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.#ctor(System.String)">
            <summary>Initializes a new instance of the CheckMenuItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the CheckMenuItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.OnAddedToCollection(System.EventArgs)">
            <summary>Raises the AddedToCollection event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.OnGroupedChanged(System.EventArgs)">
            <summary>Raises the GroupedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.Checked">
            <summary>Gets or set a value indicating whether the SmartItem is in the checked state.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.Grouped">
            <summary>Gets or sets a boolean value if the menu item is part of a group.</summary>
            <remarks>    If the menu item is grouped, then it will react in the     same manner as a radio button with all the other immediate menu     items whose Grouped property is set to [LangWord]true.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.CheckMenuItem.GroupedChanged">
            <summary>Raised when the value of the Grouped property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.MainMenuItem">
            <summary>Represents a SmartItem designed to be used as a first level menu item for the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.#ctor">
            <summary>Initializes a new instance of the MainMenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.#ctor">
            <summary>Initializes a new instance of the MainMenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the MainMenuItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.#ctor(System.String)">
            <summary>Initializes a new instance of the MainMenuItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the MainMenuItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the main menu item.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the main menu item. Unless overridden, PopupMenuLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.MakeVisible">
            <summary>Renders the SmartItem visible no matter its state or its parent's state.</summary>
            <remarks>    When overriding MakeVisible in a derived class, you must     make sure that the SmartItem is always made visible, no matter     its state or its parent state. For example, if the SmartItem is     in a collapsed group, the group should be expanded.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.OnOpeningDropDown(System.EventArgs)">
            <summary>Raises the OpeningDropDown event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.ProcessMnemonic">
            <summary>Processes a mnemonic character.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the main menu item.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MainMenuItem.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the main menu item.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.MenuBarLayout">
            <summary>Represents a layout designed to be used by the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuBarLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuBarLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.MenuItem">
            <summary>Represents a SmartItem designed to be used as a basic menu item for the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.#ctor">
            <summary>Initializes a new instance of the MenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.#ctor">
            <summary>Initializes a new instance of the MenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the MenuItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.#ctor(System.String)">
            <summary>Initializes a new instance of the MenuItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the MenuItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.GetMinStripWidth">
            <summary>Retrieves the minimum width of the menu item's strip.</summary>
            <returns>A value representing the minimum width of the menu item's strip.</returns>
            <remarks>    The strip is the section to the left of the menu item     that can contain images.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnAddedToCollection(System.EventArgs)">
            <summary>Raises the AddedToCollection event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnOnlyInExtendModeChanged(System.EventArgs)">
            <summary>Raises the OnlyInExtendModeChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnSelectedChanged(System.EventArgs)">
            <summary>Raises the SelectedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnShortcutChanged(System.EventArgs)">
            <summary>Raises the ShortcutChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnShortcutTextChanged(System.EventArgs)">
            <summary>Raises the ShortcutTextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnShowShortcutChanged(System.EventArgs)">
            <summary>Raises the ShowShortcutChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.PaintBackground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the background of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.MenuItem.ResetShortcutText">
            <summary>Resets the value of the ShortcutText property to its default value.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.CanBeSelected">
            <summary>Gets a boolean value indicating if the SmartItem can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.CloseMenusOnClick">
            <summary>Gets or sets a boolean value indicating if the menu must close when the user clicks it.</summary>
            <remarks>    If set to [LangWord]true all parent menu items will also     be closed.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.ImageMargin">
            <summary>Gets the image's margin.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.IsVisible">
            <summary>Gets a boolean value indicating the actual visible state of the SmartItem.</summary>
            <remarks>    This property takes the value of the OnlyInExtendMode     property as well as the visible state or the ParentItem,     ParentSmartControl and RootSmartControl into consideration.     Therefore, if the parent SmartItem is not visible but the child     is, IsVisible will return [LangWord]false.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnlyInExtendMode">
            <summary>Gets or sets a boolean value indicating if the menu item is displayed only in extend mode.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.Shortcut">
            <summary>Gets or sets the shortcut associated with the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.ShortcutText">
            <summary>Gets or sets the Shortcut's text which is displayed to the right of the menu item's text.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.ShowShortcut">
            <summary>Gets or sets a boolean value indicating if the SmartItem's Shortcut will be displayed.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.MenuItem.UseMnemonic">
            <summary>Gets or sets a boolean value indicating if the MenuItem interprets an ampersand character (&amp;) in its Text property to be an access key prefix character.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.MenuItem.OnlyInExtendModeChanged">
            <summary>Raised when the value of the OnlyInExtendMode property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.MenuItem.ShortcutChanged">
            <summary>Raised when the value of the Shortcut property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.MenuItem.ShortcutTextChanged">
            <summary>Raised when the value of the ShortcutText property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.MenuItem.ShowShortcutChanged">
            <summary>Raised when the value of the ShowShortcut property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem">
            <summary>Represents a SmartItem designed to be used as a popup menu item for the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.#ctor">
            <summary>Initializes a new instance of the PopupMenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.#ctor">
            <summary>Initializes a new instance of the PopupMenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the PopupMenuItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.#ctor(System.String)">
            <summary>Initializes a new instance of the PopupMenuItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the PopupMenuItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the popup menu item.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the popup menu item. Unless overridden, PopupMenuLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.MakeVisible">
            <summary>Renders the SmartItem visible no matter its state or its parent's state.</summary>
            <remarks>    When overriding MakeVisible in a derived class, you must     make sure that the SmartItem is always made visible, no matter     its state or its parent state. For example, if the SmartItem is     in a collapsed group, the group should be expanded.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.OnOpeningDropDown(System.EventArgs)">
            <summary>Raises the OpeningDropDown event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the popup menu item.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.PopupMenuItem.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the popup menu item.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.PopupMenuLayout">
            <summary>Represents a layout designed to be used by the PopupMenuItem SmartItem.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.PopupMenuLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.PopupMenuLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.PopupMenuLayout.AutoWidth">
            <summary>Gets a boolean value indicating if width of the layout should be adjusted to the width/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem">
            <summary>Represents a SmartItem designed to be used as a separator menu item for the SmartMenuBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.#ctor">
            <summary>Initializes a new instance of the SeparatorMenuItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnDisabledImageIndexChanged(System.EventArgs)">
            <summary>Raises the DisabledImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnDownImageIndexChanged(System.EventArgs)">
            <summary>Raises the DownImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnForeColorChanged(System.EventArgs)">
            <summary>Raises the ForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnImageChanged(System.EventArgs)">
            <summary>Raises the ImageChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnImageIndexChanged(System.EventArgs)">
            <summary>Raises the ImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnOverFontChanged(System.EventArgs)">
            <summary>Raises the OverFontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnOverForeColorChanged(System.EventArgs)">
            <summary>Raises the OverForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnOverImageIndexChanged(System.EventArgs)">
            <summary>Raises the OverImageIndexChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnTextChanged(System.EventArgs)">
            <summary>Raises the TextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OnUseMnemonicChanged(System.EventArgs)">
            <summary>Raises the UseMnemonicChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ResetFont">
            <summary>Resets the value of the Font property to its default value.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, DefaultForeColor.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ResetOverFont">
            <summary>Resets the value of the OverFont property to its default value.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ResetText">
            <summary>Resets the value of the Text property to its default value, DefaultText.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ShouldSerializeForeColor">
            <summary>Retrieves a boolean value indicating if the ForeColor property should be persisted.</summary>
            <returns>[LangWord]true if the property value has changed from its default; [LangWord]false otherwise.</returns>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.CanBeSelected">
            <summary>Gets a boolean value indicating if the separator can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The SeparatorMenuItem is not selectable at     runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DisabledImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the SmartItem is disabled.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DownImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse button is pressed over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.Font">
            <summary>Gets or sets the Font of the SmartItem.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     Font property a new Font object. However, you can base the new     font on the existing font.     If the Font property has not been explicitly set or is     set to [LangWord]null, then its value is inherited from its     parent.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ForeColor">
            <summary>Gets or sets the foreground color of the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.Image">
            <summary>Gets or sets the image associated with the SmartItem.</summary>
            <remarks>    The image can be located in the SmartItem's ImageList or     it can be explicitly set via the Image property.     If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ImageIndex">
            <summary>Gets or sets a value representing the index of the image retrieved from the ImageList.</summary>
            <remarks>    If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverFont">
            <summary>Gets or sets the Font of the SmartItem when the mouse passes over it.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     OverFont property a new Font object. However, you can base the     new font on the existing font.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverForeColor">
            <summary>Gets or sets the foreground color of the SmartItem when the mouse passes over it.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse passes over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.Text">
            <summary>Gets or sets the text associated with this SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.UseMnemonic">
            <summary>Gets or sets a boolean value indicating if the SmartItem interprets an ampersand character (&amp;) in its Text property to be an access key prefix character.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DisabledImageIndexChanged">
            <summary>Raised when the value of the DisabledImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.DownImageIndexChanged">
            <summary>Raised when the value of the DownImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.FontChanged">
            <summary>Raised when the value of the Font property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ForeColorChanged">
            <summary>Raised when the value of the ForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ImageChanged">
            <summary>Raised when the value of the Image property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.ImageIndexChanged">
            <summary>Raised when the value of the ImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverFontChanged">
            <summary>Raised when the value of the OverFont property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverForeColorChanged">
            <summary>Raised when the value of the OverForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.OverImageIndexChanged">
            <summary>Raised when the value of the OverImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.TextChanged">
            <summary>Raised when the value of the Text property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SeparatorMenuItem.UseMnemonicChanged">
            <summary>Raised when the value of the UseMnemonic property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar">
            <summary>Represents a SmartControl designed to be used as a menubar.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.#ctor">
            <summary>Initializes a new instance of the SmartMenuBar class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartMenuBar class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartMenuBar.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartMenuBar. Unless overridden, MenuBarLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartMenuBar.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP, Office2003 and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.OnDropDownBegun(System.EventArgs)">
            <summary>Raises the DropDownBegun event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.OnHandleMdiControlButtonsChanged(System.EventArgs)">
            <summary>Raises the HandleMdiControlButtons event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.OnParentChanged(System.EventArgs)">
            <summary>Raises the ParentChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, Empty.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.DefaultFont">
            <summary>Gets the default value of the Font property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.DefaultGainFocusOnMouseDown">
            <summary>Gets the default value of the GainFocusOnMouseDown property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.DefaultUIStyle">
            <summary>Gets the default value of the UIStyle property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.Dock">
            <summary>Gets or sets which edge of the parent container the control is docked to.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartMenuBar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.ForeColor">
            <summary>Gets or sets the foreground color of the menubar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.HandleMdiControlButtons">
            <summary>Indicates if the SmartMenuBar will take charge of the caption control buttons when hosted in a MDI container form.</summary>
            <remarks>    If this property is set to [LangWord]true in a form that     has a MainMenu component, the MainMenu will never be     shown.     This property has no effect if the parent form is not an     MDI container.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartMenuBar.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.TabStop">
            <summary>Gets or sets a boolean value indicating if the user can give the focus to this control using the TAB key.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.MenuBar.SmartMenuBar.HandleMdiControlButtonsChanged">
            <summary>Raised when the value of the HandleMdiControlButtons property is changed.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.OfficeTaskPane">
            <summary>Represents a SmartControl designed to be used as an Office-style taskpane.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OfficeTaskPane.Group">
            <summary>Represents a SmartItem designed to be used as a group for the SmartOfficeTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.#ctor(System.String)">
            <summary>Initializes a new instance of the Group class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the group.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the group. Unless overridden, GroupLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnDisabledImageIndexChanged(System.EventArgs)">
            <summary>Raises the DisabledImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnDownImageIndexChanged(System.EventArgs)">
            <summary>Raises the DownImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnImageChanged(System.EventArgs)">
            <summary>Raises the ImageChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnImageIndexChanged(System.EventArgs)">
            <summary>Raises the ImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OnOverImageIndexChanged(System.EventArgs)">
            <summary>Raises the OverImageIndexChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Group.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.CanBeSelected">
            <summary>Gets a boolean value indicating if the group can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The group is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DisabledImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the SmartItem is disabled.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DownImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse button is pressed over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the group.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.Image">
            <summary>Gets or sets the image associated with the SmartItem.</summary>
            <remarks>    The image can be located in the SmartItem's ImageList or     it can be explicitly set via the Image property.     If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.ImageIndex">
            <summary>Gets or sets a value representing the index of the image retrieved from the ImageList.</summary>
            <remarks>    If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OverImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse passes over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Group.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the group.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DisabledImageIndexChanged">
            <summary>Raised when the value of the DisabledImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OfficeTaskPane.Group.DownImageIndexChanged">
            <summary>Raised when the value of the DownImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OfficeTaskPane.Group.ImageChanged">
            <summary>Raised when the value of the Image property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OfficeTaskPane.Group.ImageIndexChanged">
            <summary>Raised when the value of the ImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OfficeTaskPane.Group.OverImageIndexChanged">
            <summary>Raised when the value of the OverImageIndex property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OfficeTaskPane.GroupLayout">
            <summary>Represents a layout designed to be used by the Group SmartItem.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.GroupLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.GroupLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OfficeTaskPane.OfficeTaskPaneLayout">
            <summary>Represents a layout designed to be used by the SmartOfficeTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.OfficeTaskPaneLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane">
            <summary>Represents a SmartControl designed to be used as an Office taskpane.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.#ctor">
            <summary>Initializes a new instance of the SmartOfficeTaskPane class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartOfficeTaskPane class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartOfficeTaskPane.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartOfficeTaskPane. Unless overridden, OfficeTaskPaneLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartOfficeTaskPane.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The OfficeXP and Office2003 UIStyles are     supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.DefaultGainFocusOnMouseDown">
            <summary>Gets the default value of the GainFocusOnMouseDown property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.DefaultUIStyle">
            <summary>Gets the default value of the UIStyle property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartOfficeTaskPane.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartOfficeTaskPane.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.SmartOfficeTaskPane.TabStop">
            <summary>Gets or sets a boolean value indicating if the user can give the focus to this control using the TAB key.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OfficeTaskPane.Task">
            <summary>Represents a SmartItem designed to be used as a task for the SmartOfficeTaskPane SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.#ctor">
            <summary>Initializes a new instance of the Task class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.#ctor">
            <summary>Initializes a new instance of the Task class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Task class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.#ctor(System.String)">
            <summary>Initializes a new instance of the Task class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Task class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.HitTest">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.HitTest(System.Drawing.Point)">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
            <returns>A SmartItemSection value representing the section of the SmartItem at the specified Point.</returns>
            <param name="point">A Point structure representing the location of the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OfficeTaskPane.Task.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Task.CanBeSelected">
            <summary>Gets a boolean value indicating if the task can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The task is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Task.DefaultCursor">
            <summary>Gets the default value of the Cursor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OfficeTaskPane.Task.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.OptionList">
            <summary>Represents a SmartControl designed to be used as an optionlist.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode">
            <summary>Represents any button type SmartItem and exposes properties and methods that allow their manipulations.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.ButtonBaseNode.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OptionList.CheckBoxNode">
            <summary>Represents a SmartItem designed to be used as a checkbox node for the SmartOptionList SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.#ctor">
            <summary>Initializes a new instance of the CheckBoxNode class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.#ctor">
            <summary>Initializes a new instance of the CheckBoxNode class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.#ctor(System.Int32)">
            <summary>Initializes a new instance of the CheckBoxNode class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.#ctor(System.String)">
            <summary>Initializes a new instance of the CheckBoxNode class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the CheckBoxNode class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.OnGroupedChanged(System.EventArgs)">
            <summary>Raises the GroupedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.Checked">
            <summary>Gets or set a value indicating whether the SmartItem is in the checked state.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.Grouped">
            <summary>Gets or sets a boolean value if the node is part of a group.</summary>
            <remarks>    If the node is grouped, then it will react in the same     manner as a radio button with all the other immediate nodes     whose Grouped property is set to [LangWord]true.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OptionList.CheckBoxNode.GroupedChanged">
            <summary>Raised when the value of the Grouped property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OptionList.Node">
            <summary>Represents a SmartItem designed to be used as a node for the SmartOptionList SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.Node.#ctor">
            <summary>Initializes a new instance of the Node class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.Node.#ctor">
            <summary>Initializes a new instance of the Node class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.Node.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Node class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.Node.#ctor(System.String)">
            <summary>Initializes a new instance of the Node class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.Node.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Node class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.Node.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the node.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.Node.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the node.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OptionList.RadioButtonNode">
            <summary>Represents a SmartItem designed to be used as a radio button node for the SmartOptionList SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.#ctor">
            <summary>Initializes a new instance of the RadioButtonNode class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.#ctor">
            <summary>Initializes a new instance of the RadioButtonNode class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.#ctor(System.Int32)">
            <summary>Initializes a new instance of the RadioButtonNode class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.#ctor(System.String)">
            <summary>Initializes a new instance of the RadioButtonNode class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the RadioButtonNode class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.OnGroupedChanged(System.EventArgs)">
            <summary>Raises the GroupedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.Checked">
            <summary>Gets or set a value indicating whether the SmartItem is in the checked state.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.Grouped">
            <summary>Gets or sets a boolean value if the node is part of a group.</summary>
            <remarks>    If the node is grouped, then it will react in the same     manner as a radio button with all the other immediate nodes     whose Grouped property is set to [LangWord]true.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OptionList.RadioButtonNode.GroupedChanged">
            <summary>Raised when the value of the Grouped property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OptionList.SmartOptionList">
            <summary>Represents a SmartControl designed to be used as an optionlist.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.#ctor">
            <summary>Initializes a new instance of the SmartOptionList class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartOptionList class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OptionList.SmartOptionList.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartOptionList.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.SmartOptionList.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartOptionList.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OptionList.SmartOptionList.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartOptionList.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="N:Xceed.SmartUI.Controls.OutlookShortcutBar">
            <summary>Represents a SmartControl designed to be used as an Outlook-style shortcut bar.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.TextPosition">
            <summary>Value representing the position of a SmartItem's text in relation to its image.</summary>
        </member>
        <member name="F:Xceed.SmartUI.Controls.OutlookShortcutBar.TextPosition.Right">
            <summary>The text is positioned to the right of the image.</summary>
        </member>
        <member name="F:Xceed.SmartUI.Controls.OutlookShortcutBar.TextPosition.Bottom">
            <summary>The text is positioned below the image.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.Group">
            <summary>Represents a SmartItem designed to be used as a group for the SmartOutlookShortcutBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.#ctor">
            <summary>Initializes a new instance of the Group class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.#ctor(System.String)">
            <summary>Initializes a new instance of the Group class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Group class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the group.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the group. Unless overridden, GroupLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.MakeVisible">
            <summary>Renders the SmartItem visible no matter its state or its parent's state.</summary>
            <remarks>    When overriding MakeVisible in a derived class, you must     make sure that the SmartItem is always made visible, no matter     its state or its parent state. For example, if the SmartItem is     in a collapsed group, the group should be expanded.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnExpandedChanged(System.EventArgs)">
            <summary>Raises the ExpandedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.OnTextPositionChanged(System.EventArgs)">
            <summary>Raises the TextPositionChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.CanBeSelected">
            <summary>Gets a boolean value indicating if the group can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The group is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the group.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.Expanded">
            <summary>Gets or sets a boolean value indicating if the group is expanded.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the group.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.TextPosition">
            <summary>Gets or sets the position of the text in regards to the image.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.ExpandedChanged">
            <summary>Raised when the value of the Expanded property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.OutlookShortcutBar.Group.TextPositionChanged">
            <summary>Raised when the value of the TextPosition property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.GroupLayout">
            <summary>Represents a layout designed to be used by the Group SmartItem.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.GroupLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.OutlookShortcutBarLayout">
            <summary>Represents a layout designed to be used by the SmartOutlookShortcutBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.OutlookShortcutBarLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut">
            <summary>Represents a SmartItem designed to be used as a shorcut for the SmartOutlookShortcutBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.#ctor">
            <summary>Initializes a new instance of the Shortcut class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.#ctor">
            <summary>Initializes a new instance of the Shortcut class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Shortcut class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.#ctor(System.String)">
            <summary>Initializes a new instance of the Shortcut class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Shortcut class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.HitTest">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.HitTest(System.Drawing.Point)">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
            <returns>A SmartItemSection value representing the section of the SmartItem at the specified Point.</returns>
            <param name="point">A Point structure representing the location of the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.CanBeSelected">
            <summary>Gets a boolean value indicating if the shortcut can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The shortcut is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.Shortcut.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar">
            <summary>Represents a SmartControl designed to be used as an Outlook shortcut bar.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.#ctor">
            <summary>Initializes a new instance of the SmartOutlookShortcutBar class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartOutlookShortcutBar class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartOutlookShortcutBar.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartOutlookShortcutBar. Unless overridden, OutlookShortcutBarLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartOutlookShortcutBar.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.DefaultGainFocusOnMouseDown">
            <summary>Gets the default value of the GainFocusOnMouseDown property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.Dock">
            <summary>Gets or sets which edge of the parent container the control is docked to.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartOutlookShortcutBar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartOutlookShortcutBar.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.OutlookShortcutBar.SmartOutlookShortcutBar.TabStop">
            <summary>Gets or sets a boolean value indicating if the user can give the focus to this control using the TAB key.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.StatusBar">
            <summary>Represents a SmartControl designed to be used as a statusbar.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the state of the CAPS key for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.#ctor">
            <summary>Initializes a new instance of the CapsStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.#ctor">
            <summary>Initializes a new instance of the CapsStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the CapsStatePanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.#ctor(System.String)">
            <summary>Initializes a new instance of the CapsStatePanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the CapsStatePanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.DefaultText">
            <summary>Gets the default value of the Text property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.CapsStatePanel.VirtualKey">
            <summary>Gets the virtual key to scan.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.DateTimePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the date and time for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.#ctor">
            <summary>Initializes a new instance of the DateTimePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.#ctor">
            <summary>Initializes a new instance of the DateTimePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the DateTimePanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.Dispose">
            <summary>Releases the unmanaged resources used by the DateTimePanel and optionally releases the managed resources.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the DateTimePanel and optionally releases the managed resources.</summary>
            <param name="disposing">[LangWord]true to release both managed and unmanaged resources; [LangWord]false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.OnFormatChanged(System.EventArgs)">
            <summary>Raises the FormatChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.Format">
            <summary>Gets or sets a string that defines the culturally appropriate format of displaying dates and times.</summary>
            <remarks>    For more information, please refer to the Date and     Time Format Strings topic in the MSDN help file.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.Text">
            <summary>Gets the text associated with this SmartItem.</summary>
            <remarks>    Setting this property will throw a     NotSupportedException.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.DateTimePanel.FormatChanged">
            <summary>Raised when the value if the Format property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.InsStatePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the state of the Insert key for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.#ctor">
            <summary>Initializes a new instance of the InsStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.#ctor">
            <summary>Initializes a new instance of the InsStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the InsStatePanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.#ctor(System.String)">
            <summary>Initializes a new instance of the InsStatePanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the InsStatePanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.DefaultText">
            <summary>Gets the default value of the Text property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.InsStatePanel.VirtualKey">
            <summary>Gets the virtual key to scan.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the state of the various keys for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.Dispose">
            <summary>Releases the unmanaged resources used by the KeyStatePanel and optionally releases the managed resources.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.Dispose(System.Boolean)">
            <summary>Releases the unmanaged resources used by the KeyStatePanel and optionally releases the managed resources.</summary>
            <param name="disposing">[LangWord]true to release both managed and unmanaged resources; [LangWord]false to release only unmanaged resources.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.OnActivatedChanged(System.EventArgs)">
            <summary>Raises the ActivatedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.Activated">
            <summary>Gets a boolean value indicating if the key is activated.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.VirtualKey">
            <summary>Gets the virtual key to scan.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.KeyStatePanel.ActivatedChanged">
            <summary>Raised when the value of the Activated property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.NumStatePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the state of the NumLock key for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.#ctor">
            <summary>Initializes a new instance of the NumStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.#ctor">
            <summary>Initializes a new instance of the NumStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the NumStatePanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.#ctor(System.String)">
            <summary>Initializes a new instance of the NumStatePanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the NumStatePanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.DefaultText">
            <summary>Gets the default value of the Text property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.NumStatePanel.VirtualKey">
            <summary>Gets the virtual key to scan.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.Panel">
            <summary>Represents a SmartItem designed to be used as a panel for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.#ctor">
            <summary>Initializes a new instance of the Panel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.#ctor">
            <summary>Initializes a new instance of the Panel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Panel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.#ctor(System.String)">
            <summary>Initializes a new instance of the Panel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Panel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnBackColorChanged(System.EventArgs)">
            <summary>Raises the BackColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnBorderColorChanged(System.EventArgs)">
            <summary>Raises the BorderColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.Panel.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.BackColor">
            <summary>Gets or sets the background color of the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.BorderColor">
            <summary>Gets or sets the color of the panel's border.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.CanBeSelected">
            <summary>Gets a boolean value indicating if the panel can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The panel is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.DefaultBorderColor">
            <summary>Gets the default value of the BorderColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.Panel.HasGripper">
            <summary>Gets a boolean value indicating if the panel has a gripper.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.Panel.BackColorChanged">
            <summary>Raised when the value of the BackColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.Panel.BorderColorChanged">
            <summary>Raised when the value of the BorderColor property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.ProgressPanel">
            <summary>Represents a SmartItem designed to be used as a progress bar for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.#ctor">
            <summary>Initializes a new instance of the ProgressPanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.#ctor">
            <summary>Initializes a new instance of the ProgressPanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the ProgressPanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.#ctor(System.String)">
            <summary>Initializes a new instance of the ProgressPanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the ProgressPanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.OnMaximumChanged(System.EventArgs)">
            <summary>Raises the MaximumChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.OnMinimumChanged(System.EventArgs)">
            <summary>Raises the MinimumChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.OnStepChanged(System.EventArgs)">
            <summary>Raises the StepChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.OnValueChanged(System.EventArgs)">
            <summary>Raises the ValueChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.PerformStep">
            <summary>Advances the current position of the progress bar by the amount of the Step property</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.Maximum">
            <summary>Gets or sets the maximum value of the range of the progress bar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.Minimum">
            <summary>Gets or sets the minimum value of the range of the progress bar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.Step">
            <summary>Gets or sets the amount by which a call to the PerformStep method increases the current position of the progress bar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.Value">
            <summary>Gets or sets the current position of the progress bar.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.MaximumChanged">
            <summary>Raised when the value of the Maximum property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.MinimumChanged">
            <summary>Raised when the value of the Minimum property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.StepChanged">
            <summary>Raised when the value of the Step property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.StatusBar.ProgressPanel.ValueChanged">
            <summary>Raised when the value of the Value property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel">
            <summary>Represents a SmartItem designed to be used as a panel that displays the state of the ScrollLock key for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.#ctor">
            <summary>Initializes a new instance of the ScrollStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.#ctor">
            <summary>Initializes a new instance of the ScrollStatePanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the ScrollStatePanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.#ctor(System.String)">
            <summary>Initializes a new instance of the ScrollStatePanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the ScrollStatePanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.DefaultText">
            <summary>Gets the default value of the Text property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.ScrollStatePanel.VirtualKey">
            <summary>Gets the virtual key to scan.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar">
            <summary>Represents a SmartControl designed to be used as a statusbar.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.#ctor">
            <summary>Initializes a new instance of the SmartStatusBar class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartStatusBar class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartStatusBar.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartStatusBar. Unless overridden, StatusBarLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartStatusBar.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP, Office2003 and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.DefaultGainFocusOnMouseDown">
            <summary>Gets the default value of the GainFocusOnMouseDown property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.Dock">
            <summary>Gets or sets which edge of the parent container the control is docked to.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartStatusBar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartStatusBar.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.SmartStatusBar.TabStop">
            <summary>Gets or sets a boolean value indicating if the user can give the focus to this control using the TAB key.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.SpringPanel">
            <summary>Represents a SmartItem designed to be used as a spring panel for the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SpringPanel.#ctor">
            <summary>Initializes a new instance of the SpringPanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SpringPanel.#ctor">
            <summary>Initializes a new instance of the SpringPanel class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SpringPanel.#ctor(System.Int32)">
            <summary>Initializes a new instance of the SpringPanel class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SpringPanel.#ctor(System.String)">
            <summary>Initializes a new instance of the SpringPanel class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.SpringPanel.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the SpringPanel class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="T:Xceed.SmartUI.Controls.StatusBar.StatusBarLayout">
            <summary>Represents a layout designed to be used by the SmartStatusBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.StatusBar.StatusBarLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.StatusBar.StatusBarLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.TabStrip">
            <summary>Represents a SmartControl designed to be used as a tabstrip.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip">
            <summary>Represents a SmartControl designed to be used as a tab strip.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.#ctor">
            <summary>Initializes a new instance of the SmartTabStrip class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartTabStrip class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartTabStrip.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartTabStrip. Unless overridden, TabStripLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartTabStrip.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>The OfficeXP UIStyle is supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.OnBorderColorChanged(System.EventArgs)">
            <summary>Raises the BorderColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.BorderColor">
            <summary>Gets or sets the color of the tab strip's border.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.DefaultGainFocusOnMouseDown">
            <summary>Gets the default value of the GainFocusOnMouseDown property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.DefaultUIStyle">
            <summary>Gets the default value of the UIStyle property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartTabStrip.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartTabStrip.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TabStrip.SmartTabStrip.BorderColorChanged">
            <summary>Raised when the value of the BorderColor property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TabStrip.Tab">
            <summary>Represents a SmartItem designed to be used as a tab for the SmartTabStrip SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.#ctor">
            <summary>Initializes a new instance of the Tab class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.#ctor">
            <summary>Initializes a new instance of the Tab class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Tab class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.#ctor(System.String)">
            <summary>Initializes a new instance of the Tab class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Tab class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnAddedToCollection(System.EventArgs)">
            <summary>Raises the AddedToCollection event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.OnSelectedChanged(System.EventArgs)">
            <summary>Raises the SelectedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.Tab.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.Tab.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.Tab.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TabStrip.TabStripLayout">
            <summary>Represents a layout designed to be used by the SmartTabStrip SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TabStrip.TabStripLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TabStrip.TabStripLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.ToolBar">
            <summary>Represents a SmartControl designed to be used as a toolbar.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.CheckTool">
            <summary>Represents a SmartItem designed to be used as a checkable tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.#ctor">
            <summary>Initializes a new instance of the CheckTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.#ctor">
            <summary>Initializes a new instance of the CheckTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the CheckTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.#ctor(System.String)">
            <summary>Initializes a new instance of the CheckTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the CheckTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.OnCheckedChanged(System.EventArgs)">
            <summary>Raises the CheckedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.CheckTool.OnGroupedChanged(System.EventArgs)">
            <summary>Raises the GroupedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.CheckTool.Checked">
            <summary>Gets or set a value indicating whether the SmartItem is in the checked state.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.CheckTool.Grouped">
            <summary>Gets or sets a boolean value if the tool is part of a group.</summary>
            <remarks>    If the tool is grouped, then it will react in the same     manner as a radio button with all the other immediate tools     whose Grouped property is set to [LangWord]true.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.CheckTool.CheckedChanged">
            <summary>Raised when the value of the Checked property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.CheckTool.GroupedChanged">
            <summary>Raised when the value of the Grouped property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem">
            <summary>Represents a SmartItem designed to be used as an item for the ComboBoxTool SmartItem.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.#ctor">
            <summary>Initializes a new instance of the ComboBoxItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.#ctor">
            <summary>Initializes a new instance of the ComboBoxItem class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.#ctor(System.Int32)">
            <summary>Initializes a new instance of the ComboBoxItem class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.#ctor(System.String)">
            <summary>Initializes a new instance of the ComboBoxItem class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the ComboBoxItem class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.DefaultFitWidthToLayout">
            <summary>Gets the default value of the FitWidthToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.DisabledImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the SmartItem is disabled.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.DownImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse button is pressed over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.Image">
            <summary>Gets or sets the image associated with the SmartItem.</summary>
            <remarks>    The image can be located in the SmartItem's ImageList or     it can be explicitly set via the Image property.     If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.ImageIndex">
            <summary>Gets or sets a value representing the index of the image retrieved from the ImageList.</summary>
            <remarks>    If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxItem.OverImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse passes over the SmartItem.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.ComboBoxLayout">
            <summary>Represents a layout designed to be used by the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool">
            <summary>Represents a SmartItem designed to be used as a combobox tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.#ctor">
            <summary>Initializes a new instance of the ComboBoxTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.#ctor">
            <summary>Initializes a new instance of the ComboBoxTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the ComboBoxTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.#ctor(System.String)">
            <summary>Initializes a new instance of the ComboBoxTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the ComboBoxTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.AllowTabStop(Xceed.SmartUI.SmartItem,System.Boolean)">
            <summary>Retrieves a boolean value indicating whether the user can give the focus to this SmartItem using the TAB key.</summary>
            <returns>[LangWord]true if the SmartItem cab receive focus; [LangWord]false otherwise. Unless overridden, [LangWord]false is always returned.</returns>
            <param name="selectedSmartItem">A reference to the currently selected SmartItem.</param>
            <param name="forward">[LangWord]true if the tab direction is going forward; [LangWord]false if it is going backwards.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the combobox tool.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the combobox tool. Unless overridden, ComboBoxLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.HitTest">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.HitTest(System.Drawing.Point)">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
            <returns>A SmartItemSection value representing the section of the SmartItem at the specified Point.</returns>
            <param name="point">A Point structure representing the location of the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.OnFitDropDownWidthToItemsChanged(System.EventArgs)">
            <summary>Raises the  FitDropDownWidthToItemsChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.OnMaxDropDownItemsChanged(System.EventArgs)">
            <summary>Raises the MaxDropDownItemsChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.OnSelectedItemChanged(System.EventArgs)">
            <summary>Raises the SelectedItemChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.OnWidthChanged(System.EventArgs)">
            <summary>Raises the WidthChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.CanBeSelected">
            <summary>Gets a boolean value indicating if the combobox can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the combobox tool.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.FitDropDownWidthToItems">
            <summary>Gets or sets a value indicating if the width of the drop down should be adjusted to fit the width of its items.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.MaxDropDownItems">
            <summary>Gets or sets the maximum number of items that will be displayed in a ComboBoxTool's dropdown before a vertical scroll bar appears.</summary>
            <remarks>    If this property is modified while the ComboxBox is open     (dropped down), the dropdown rectangle will not be     modified. The new value will be used the next time the combo     box opens. Likewise, adding items to the ComboBoxTool after the     dropdown has opened will not modify the dropdown zone's size     until the dropdown is reopened.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the combobox tool.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.SelectedItem">
            <summary>Gets or sets the selected child SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.Width">
            <summary>Gets or sets the width, in pixels, of the ComboBoxTool.</summary>
            <remarks>    When the width is set to a value greater than 0, only the     width of the comboxbox part of the tool will be     affected.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.FitDropDownWidthToItemsChanged">
            <summary>Raised when the value of the  FitDropDownWidthToItems property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.MaxDropDownItemsChanged">
            <summary>Raised when the value of the MaxDropDownItems property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.SelectedItemChanged">
            <summary>Raised when the value of the SelectedItem is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.ComboBoxTool.WidthChanged">
            <summary>Raised when the value of the Width property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.LabelTool">
            <summary>Represents a SmartItem designed to be used as a label tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.#ctor">
            <summary>Initializes a new instance of the LabelTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.#ctor">
            <summary>Initializes a new instance of the LabelTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the LabelTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.#ctor(System.String)">
            <summary>Initializes a new instance of the LabelTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the LabelTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the label tool.</summary>
            <returns>A Size structure representing the size needed to paint the label tool.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the label tool.</param>
            <param name="font">A Font object representing the font that will be used by the label tool.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the label tool.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnDisabledImageIndexChanged(System.EventArgs)">
            <summary>Raises the DisabledImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnDownImageIndexChanged(System.EventArgs)">
            <summary>Raises the DownImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnForeColorChanged(System.EventArgs)">
            <summary>Raises the ForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnImageChanged(System.EventArgs)">
            <summary>Raises the ImageChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnImageIndexChanged(System.EventArgs)">
            <summary>Raises the ImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnOverForeColorChanged(System.EventArgs)">
            <summary>Raises the OverForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnOverImageIndexChanged(System.EventArgs)">
            <summary>Raises the OverImageIndexChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.OnWidthChanged(System.EventArgs)">
            <summary>Raises the WidthChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, DefaultForeColor.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.LabelTool.ShouldSerializeForeColor">
            <summary>Retrieves a boolean value indicating if the ForeColor property should be persisted.</summary>
            <returns>[LangWord]true if the property value has changed from its default; [LangWord]false otherwise.</returns>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.DisabledImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the SmartItem is disabled.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.DownImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse button is pressed over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.ForeColor">
            <summary>Gets or sets the foreground color of the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.Image">
            <summary>Gets or sets the image associated with the SmartItem.</summary>
            <remarks>    The image can be located in the SmartItem's ImageList or     it can be explicitly set via the Image property.     If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.ImageIndex">
            <summary>Gets or sets a value representing the index of the image retrieved from the ImageList.</summary>
            <remarks>    If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.OverForeColor">
            <summary>Gets or sets the foreground color of the SmartItem when the mouse passes over it.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.OverImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse passes over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.LabelTool.Width">
            <summary>Gets or sets the width, in pixels, of the LabelTool.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.DisabledImageIndexChanged">
            <summary>Raised when the value of the DisabledImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.DownImageIndexChanged">
            <summary>Raised when the value of the DownImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.ForeColorChanged">
            <summary>Raised when the value of the ForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.ImageChanged">
            <summary>Raised when the value of the Image property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.ImageIndexChanged">
            <summary>Raised when the value of the ImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.OverForeColorChanged">
            <summary>Raised when the value of the OverForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.OverImageIndexChanged">
            <summary>Raised when the value of the OverImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.LabelTool.WidthChanged">
            <summary>Raised when the value of the Width property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.MenuTool">
            <summary>Represents a SmartItem designed to be used as a dropdown menu tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.#ctor">
            <summary>Initializes a new instance of the MenuTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.#ctor">
            <summary>Initializes a new instance of the MenuTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the MenuTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.#ctor(System.String)">
            <summary>Initializes a new instance of the MenuTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the MenuTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MenuTool.ProcessMnemonic">
            <summary>Processes a mnemonic character.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.MenuTool.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.MenuTool.DropDownZoneWidth">
            <summary>Gets the width of the dropdown zone.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.MenuTool.IsMixed">
            <summary>Gets a boolean value indicating if the MainTool has both a button and a dropdown.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.MixedTool">
            <summary>Represents a SmartItem designed to be used as a mixed tool for the SmartToolBar SmartControl.</summary>
            <remarks>    A MixedTool is a tool that has both a button and     dropdown.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.#ctor">
            <summary>Initializes a new instance of the MixedTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.#ctor">
            <summary>Initializes a new instance of the MixedTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the MixedTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.#ctor(System.String)">
            <summary>Initializes a new instance of the MixedTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the MixedTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.HitTest">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.HitTest(System.Drawing.Point)">
            <summary>Retrieves the section of the SmartItem at a specified Point.</summary>
            <returns>A SmartItemSection value representing the section of the SmartItem at the specified Point.</returns>
            <remarks>    point can be compared using the Bounds of the     SmartItem.</remarks>
            <param name="point">The Point to test.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.OnClick(Xceed.SmartUI.SmartItemClickEventArgs)">
            <summary>Raises the Click event.</summary>
            <param name="e">A SmartItemClickEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.MixedTool.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.MixedTool.IsMixed">
            <summary>Gets a boolean value indicating if the MainMenuItem has both a button and a dropdown.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.SeparatorTool">
            <summary>Represents a SmartItem designed to be used as a separator tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.#ctor">
            <summary>Initializes a new instance of the SeparatorTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnDisabledImageIndexChanged(System.EventArgs)">
            <summary>Raises the DisabledImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnDownImageIndexChanged(System.EventArgs)">
            <summary>Raises the DownImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnFontChanged(System.EventArgs)">
            <summary>Raises the FontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnForeColorChanged(System.EventArgs)">
            <summary>Raises the ForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnImageChanged(System.EventArgs)">
            <summary>Raises the ImageChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnImageIndexChanged(System.EventArgs)">
            <summary>Raises the ImageIndexChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnOverFontChanged(System.EventArgs)">
            <summary>Raises the OverFontChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnOverForeColorChanged(System.EventArgs)">
            <summary>Raises the OverForeColorChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnOverImageIndexChanged(System.EventArgs)">
            <summary>Raises the OverImageIndexChanged event.</summary>
            <param name="e">A EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnTextChanged(System.EventArgs)">
            <summary>Raises the TextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OnUseMnemonicChanged(System.EventArgs)">
            <summary>Raises the UseMnemonicChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ResetFont">
            <summary>Resets the value of the Font property to its default value.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ResetForeColor">
            <summary>Resets the value of the ForeColor property to its default value, DefaultForeColor.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ResetOverFont">
            <summary>Resets the value of the OverFont property to its default value.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ResetText">
            <summary>Resets the value of the Text property to its default value, DefaultText.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ShouldSerializeForeColor">
            <summary>Retrieves a boolean value indicating if the ForeColor property should be persisted.</summary>
            <returns>[LangWord]true if the property value has changed from its default; [LangWord]false otherwise.</returns>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.CanBeSelected">
            <summary>Gets a boolean value indicating if the separator tool can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The separator tool is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DisabledImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the SmartItem is disabled.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DownImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse button is pressed over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.Font">
            <summary>Gets or sets the Font of the SmartItem.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     Font property a new Font object. However, you can base the new     font on the existing font.     If the Font property has not been explicitly set or is     set to [LangWord]null, then its value is inherited from its     parent.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ForeColor">
            <summary>Gets or sets the foreground color of the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.Image">
            <summary>Gets or sets the image associated with the SmartItem.</summary>
            <remarks>    The image can be located in the SmartItem's ImageList or     it can be explicitly set via the Image property.     If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ImageIndex">
            <summary>Gets or sets a value representing the index of the image retrieved from the ImageList.</summary>
            <remarks>    If both the Image and ImageIndex properties are set, the     image assigned to the Image property will be used.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverFont">
            <summary>Gets or sets the Font of the SmartItem when the mouse passes over it.</summary>
            <remarks>    Because the Font object is immutable (meaning that you     cannot adjust any of its properties), you can only assign the     OverFont property a new Font object. However, you can base the     new font on the existing font.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverForeColor">
            <summary>Gets or sets the foreground color of the SmartItem when the mouse passes over it.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverImageIndex">
            <summary>Gets or sets the index of the image retrieved from the ImageList, displayed when the mouse passes over the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.Text">
            <summary>Gets or sets the text associated with this SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.UseMnemonic">
            <summary>Gets or sets a boolean value indicating if the SmartItem interprets an ampersand character (&amp;) in its Text property to be an access key prefix character.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DisabledImageIndexChanged">
            <summary>Raised when the value of the DisabledImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.DownImageIndexChanged">
            <summary>Raised when the value of the DownImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.FontChanged">
            <summary>Raised when the value of the Font property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ForeColorChanged">
            <summary>Raised when the value of the ForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ImageChanged">
            <summary>Raised when the value of the Image property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.ImageIndexChanged">
            <summary>Raised when the value of the ImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverFontChanged">
            <summary>Raised when the value of the OverFont property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverForeColorChanged">
            <summary>Raised when the value of the OverForeColor property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.OverImageIndexChanged">
            <summary>Raised when the value of the OverImageIndex property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.TextChanged">
            <summary>Raised when the value of the Text property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.SeparatorTool.UseMnemonicChanged">
            <summary>Raised when the value of the UseMnemonic property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.SmartToolBar">
            <summary>Represents a SmartControl designed to be used as a toolbar.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.#ctor">
            <summary>Initializes a new instance of the SmartToolBar class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartToolBar class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartToolBar.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartToolBar. Unless overridden, ToolBarLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartToolBar.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, OfficeXP, WindowsXP, Office2003 and     ResourceAssembly UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.OnUIStyleChanged(System.EventArgs)">
            <summary>Raises the UIStyleChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.Dock">
            <summary>Gets or sets which edge of the parent container the control is docked to.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartToolBar.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartToolBar.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.SmartToolBar.TabStop">
            <summary>Gets or sets a boolean value indicating if the user can give the focus to this control using the TAB key.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.TextBoxTool">
            <summary>Represents a SmartItem designed to be used as a textbox tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.#ctor">
            <summary>Initializes a new instance of the TextBoxTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.#ctor">
            <summary>Initializes a new instance of the TextBoxTool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the TextBoxTool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.#ctor(System.String)">
            <summary>Initializes a new instance of the TextBoxTool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the TextBoxTool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.AllowTabStop(Xceed.SmartUI.SmartItem,System.Boolean)">
            <summary>Retrieves a boolean value indicating whether the user can give the focus to this SmartItem using the TAB key.</summary>
            <returns>[LangWord]true if the SmartItem cab receive focus; [LangWord]false otherwise.</returns>
            <param name="selectedSmartItem">A reference to the currently selected SmartItem.</param>
            <param name="forward">[LangWord]true if the tab direction is going forward; [LangWord]false if it is going backwards.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.CreateVirtualControl">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.OnWidthChanged(System.EventArgs)">
            <summary>Raises the WidthChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.CanBeSelected">
            <summary>Gets a boolean value indicating if the textbox tool can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.VirtualTextBox">
            <summary>Gets the VirtualTextBox associated with the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.Width">
            <summary>Gets or sets the width, in pixels, of the TextBoxTool.</summary>
            <remarks>    When the width is set to a value greater than 0, only the     width of the textbox part of the tool will be affected.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.TextBoxTool.WidthChanged">
            <summary>Raised when the value of the Width property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.Tool">
            <summary>Represents a SmartItem designed to be used as a tool for the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.#ctor">
            <summary>Initializes a new instance of the Tool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.#ctor">
            <summary>Initializes a new instance of the Tool class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Tool class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.#ctor(System.String)">
            <summary>Initializes a new instance of the Tool class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Tool class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnShortcutChanged(System.EventArgs)">
            <summary>Raises the ShortcutChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnShortcutTextChanged(System.EventArgs)">
            <summary>Raises the ShortcutTextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnShowShortcutChanged(System.EventArgs)">
            <summary>Raises the ShowShortcutChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.OnTextWidthChanged(System.EventArgs)">
            <summary>Raises the TextWidthChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.Tool.ResetShortcutText">
            <summary>Resets the value of the ShortcutText property to its default value.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.CanBeSelected">
            <summary>Gets a boolean value indicating if the tool can be selected.</summary>
            <remarks>    To determine which item is currently selected, the     SelectedItem property can be consulted.     The tool is not selectable at runtime.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.DefaultFitHeightToLayout">
            <summary>Gets the default value of the FitHeightToLayout property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.Shortcut">
            <summary>Gets or sets the shortcut associated with the SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.ShortcutText">
            <summary>Gets or sets the Shortcut's text.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.ShowShortcut">
            <summary>Gets or sets a boolean value indicating if the SmartItem's Shortcut will be displayed.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.Tool.TextWidth">
            <summary>Gets or sets the width, in pixels, of the Tool's caption part.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.Tool.ShortcutChanged">
            <summary>Raised when the value of the Shortcut property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.Tool.ShortcutTextChanged">
            <summary>Raised when the value of the ShortcutText property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.Tool.ShowShortcutChanged">
            <summary>Raised when the value of the ShowShortcut property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.ToolBar.Tool.TextWidthChanged">
            <summary>Raised when the value of the TextWidth property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.ToolBar.ToolBarLayout">
            <summary>Represents a layout designed to be used by the SmartToolBar SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.ToolBar.ToolBarLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.ToolBar.ToolBarLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="N:Xceed.SmartUI.Controls.TreeView">
            <summary>Represents a SmartControl designed to be used as a treeview.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TreeView.Node">
            <summary>Represents a SmartItem designed to be used as a node for the SmartTreeView SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.#ctor">
            <summary>Initializes a new instance of the Node class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.#ctor">
            <summary>Initializes a new instance of the Node class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.#ctor(System.Int32)">
            <summary>Initializes a new instance of the Node class specifying its ImageIndex.</summary>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.#ctor(System.String)">
            <summary>Initializes a new instance of the Node class specifying its Text.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the Node class specifying its Text and ImageIndex.</summary>
            <param name="text">The text displayed by the SmartItem.</param>
            <param name="imageIndex">The index of the image displayed by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.CalculateSize(System.Drawing.Graphics,System.Drawing.Font,System.Drawing.StringFormat)">
            <summary>Calculates the size needed to paint the SmartItem.</summary>
            <returns>A Size structure representing the size needed to paint the SmartItem.</returns>
            <param name="graphics">A Graphics object representing the graphics that will be used to draw the SmartItem.</param>
            <param name="font">A Font object representing the font that will be used by the SmartItem.</param>
            <param name="format">A StringFormat object representing the string format that will be used by the SmartItem.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.CreateAccessibilityInstance">
            <summary>This method is reserved for internal use and is not intended to be used directly from your code.</summary>
            <returns/>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the node.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the node. Unless overridden, NodeLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.MakeVisible">
            <summary>Renders the SmartItem visible no matter its state or its parent's state.</summary>
            <remarks>    When overriding MakeVisible in a derived class, you must     make sure that the SmartItem is always made visible, no matter     its state or its parent state. For example, if the SmartItem is     in a collapsed group, the group should be expanded.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnExpandedChanged(System.EventArgs)">
            <summary>Raises the ExpandedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnExpandedChanging(System.ComponentModel.CancelEventArgs)">
            <summary>Raises the ExpandedChanging event.</summary>
            <param name="e">A CancelEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnExtraTextChanged(System.EventArgs)">
            <summary>Raises the ExtraTextChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnMouseEnter(System.EventArgs)">
            <summary>Raises the MouseEnter event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnMouseLeave(System.EventArgs)">
            <summary>Raises the MouseLeave event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseUp event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.PaintForeground(Xceed.SmartUI.SmartItemPaintEventArgs)">
            <summary>Paints the foreground of the SmartItem.</summary>
            <param name="e">A SmartItemPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.PaintItemsBackground(Xceed.SmartUI.SmartPaintEventArgs)">
            <summary>Paints the background of the child SmartItems.</summary>
            <param name="e">A SmartPaintEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.Node.PaintNode(Xceed.SmartUI.SmartPaint,System.Drawing.Rectangle)">
            <summary>Paints the node.</summary>
            <param name="smartPaint">A reference to a SmartPaint object providing the theme-sensitive functionalities required to draw the node.</param>
            <param name="bounds">The bounds within which to paint the node.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.CanBeSelected">
            <summary>Gets a boolean value indicating if the SmartItem can be selected.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.DefaultAccessibleDefaultActionDescription">
            <summary>Gets the default value of the AccessibleDefaultActionDescription property</summary>
            <remarks>    When overriding DefaultAccessibleDefaultActionDescription     in a derived class, the value returned by your implementation     of DefaultAccessibleDefaultActionDescription should not     be dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.DefaultForeColor">
            <summary>Gets the default value of the ForeColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the node.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.Expanded">
            <summary>Gets or sets a boolean value indicating if the node is expanded.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.ExtraText">
            <summary>Gets or sets the extra text displayed after the text specified in the Text property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.Node.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the node.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.Node.ExpandedChanged">
            <summary>Raised when the value of the Expanded property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.Node.ExpandedChanging">
            <summary>Raised when the value of the Expanded property is about to change.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.Node.ExtraTextChanged">
            <summary>Raised when the value of the ExtraText property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TreeView.NodeLayout">
            <summary>Represents a layout designed to be used by the Node SmartItem.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.NodeLayout.AutoHeight">
            <summary>Gets a boolean value indicating if height of the layout should be adjusted to the height/disposition of its items.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TreeView.SmartTreeView">
            <summary>Represents a SmartControl designed to be used as a treeview.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.#ctor">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.#ctor">
            <summary>Initializes a new instance of the SmartTreeView class.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.#ctor(System.ComponentModel.IContainer)">
            <summary>Initializes a new instance of the SmartTreeView class, associating it with a container.</summary>
            <param name="components">A reference to an object implementing the IContainer interface to associate with this instance of SmartControl.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.#ctor(System.Type)">
            <summary>This constructor is reserved for internal use and is not intended to be used directly from your code.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.CreateAccessibilityInstance">
            <summary>Creates a new accessibility object for the control.</summary>
            <returns>A new AccessibleObject or the control.</returns>
            <remarks>    If you do not explicitly call the     CreateAccessibilityInstance method, it will be called when the     AccessibilityObject property is referenced.</remarks>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.CreateDefaultLayout">
            <summary>Creates the default SmartLayout for the SmartTreeView.</summary>
            <returns>A reference to a SmartLayout representing the default layout of the SmartTreeView. Unless overridden, TreeViewLayout.</returns>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.IsInputKey(System.Windows.Forms.Keys)">
            <summary>Determines whether the specified key is a regular input key or a special key that requires preprocessing</summary>
            <returns>[LangWord]true if the specified key is a regular input key; [LangWord]false otherwise.</returns>
            <param name="keyData">One of the Keys values.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.IsUIStyleSupported(Xceed.SmartUI.UIStyle.UIStyle)">
            <summary>Retrieves a boolean value indicating if the specified UIStyle is supported by the SmartTreeView.</summary>
            <returns>[LangWord]true if the UIStyle is supported; [LangWord]false otherwise.</returns>
            <remarks>    The WindowsClassic, WindowsXP and ResourceAssembly     UIStyles are supported.</remarks>
            <param name="style">The UIStyle to verify.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnHotTrackingChanged(System.EventArgs)">
            <summary>Raises the HotTrackingChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>Raises the KeyDown event.</summary>
            <param name="e">A KeyEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>Raises the MouseDown event.</summary>
            <param name="e">A MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnShowLinesChanged(System.EventArgs)">
            <summary>Raises the ShowLinesChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnShowPlusMinusChanged(System.EventArgs)">
            <summary>Raises the ShowPlusMinusChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.SmartTreeView.OnSortedChanged(System.EventArgs)">
            <summary>Raises the SortedChanged event.</summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.DefaultBackColor">
            <summary>Gets the default value of the BackColor property.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.DefaultSize">
            <summary>Gets the default value of the Size property.</summary>
            <remarks>    When overriding DefaultSize in a derived class, the value     returned by your implementation should not be     dynamic.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.ExcludedSmartItemTypes">
            <summary>Gets the types of the child SmartItems which cannot be added at design-time to the SmartTreeView.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.HotTracking">
            <summary>Gets or sets a boolean value indicating if the node labels take on the appearance of a hyperlink as the mouse pointer passes over them.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.PreferredSmartItemTypes">
            <summary>Gets the types of the child SmartItems which can be added at design-time to the SmartTreeView.</summary>
            <remarks>    The first SmartItem in the array is the "default"     SmartItem. The default SmartItem is the item that is added to     the SmartControl when the "New item" placeholder is     double-clicked.</remarks>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.ShowLines">
            <summary>Gets or sets a boolean value indicating if lines are drawn between nodes in the SmartControl.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.ShowPlusMinus">
            <summary>Gets or sets a boolean value indicating if plus-sign (+) and minus-sign (-) buttons are displayed next to nodes that contain child nodes.</summary>
        </member>
        <member name="P:Xceed.SmartUI.Controls.TreeView.SmartTreeView.Sorted">
            <summary>Gets or sets a boolean value indicating if the first-level nodes are sorted.</summary>
            <remarks>    This property does not sort child nodes of the     first-level nodes (non-recursive).</remarks>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.SmartTreeView.HotTrackingChanged">
            <summary>Raised when the value of the HotTracking property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.SmartTreeView.ShowLinesChanged">
            <summary>Raised when the value of the ShowLines property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.SmartTreeView.ShowPlusMinusChanged">
            <summary>Raised when the value of the ShowPlusMinus property is changed.</summary>
        </member>
        <member name="E:Xceed.SmartUI.Controls.TreeView.SmartTreeView.SortedChanged">
            <summary>Raised when the value of the Sorted property is changed.</summary>
        </member>
        <member name="T:Xceed.SmartUI.Controls.TreeView.TreeViewLayout">
            <summary>Represents a layout designed to be used by the SmartTreeView SmartControl.</summary>
        </member>
        <member name="M:Xceed.SmartUI.Controls.TreeView.TreeViewLayout.Layout">
            <summary>Reorganizes the disposition of the SmartItems.</summary>
        </member>
    </members>
</doc>
